{
    "account": {
        "": [
            "disableregion",
            "enableregion",
            "listregions"
        ]
    },
    "activate": {
        "": [
            "createform",
            "getaccountcontact",
            "getcontentinfo",
            "getcosts",
            "getcredits",
            "getmemberinfo",
            "getprogram",
            "putmemberinfo"
        ]
    },
    "a4b": {
        "": [
            "approveskill",
            "associateskillwithusers",
            "completeregistration",
            "createaddressbook",
            "createbusinessreportschedule",
            "createconferenceprovider",
            "createcontact",
            "creategatewaygroup",
            "createnetworkprofile",
            "createprofile",
            "createskillgroup",
            "getconferencepreference",
            "getinvitationconfiguration",
            "listbusinessreportschedules",
            "listconferenceproviders",
            "listgatewaygroups",
            "listskills",
            "listskillsstorecategories",
            "listskillsstoreskillsbycategory",
            "putconferencepreference",
            "putdevicesetupevents",
            "putinvitationconfiguration",
            "registeravsdevice",
            "registerdevice",
            "rejectskill",
            "resolveroom",
            "searchaddressbooks",
            "searchcontacts",
            "searchdevices",
            "searchnetworkprofiles",
            "searchprofiles",
            "searchrooms",
            "searchskillgroups",
            "searchusers",
            "sendannouncement",
            "startdevicesync"
        ],
        "addressbook": [
            "associatecontactwithaddressbook",
            "deleteaddressbook",
            "disassociatecontactfromaddressbook",
            "getaddressbook",
            "updateaddressbook"
        ],
        "contact": [
            "associatecontactwithaddressbook",
            "deletecontact",
            "disassociatecontactfromaddressbook",
            "getcontact",
            "updatecontact"
        ],
        "device": [
            "associatedevicewithnetworkprofile",
            "associatedevicewithroom",
            "deletedevice",
            "deletedeviceusagedata",
            "disassociatedevicefromroom",
            "getdevice",
            "listdeviceevents",
            "listtags",
            "tagresource",
            "untagresource",
            "updatedevice"
        ],
        "networkprofile": [
            "associatedevicewithnetworkprofile",
            "deletenetworkprofile",
            "getnetworkprofile",
            "updatenetworkprofile"
        ],
        "room": [
            "associatedevicewithroom",
            "associateskillgroupwithroom",
            "deleteroom",
            "deleteroomskillparameter",
            "deleteskillauthorization",
            "disassociateskillgroupfromroom",
            "forgetsmarthomeappliances",
            "getroom",
            "getroomskillparameter",
            "listsmarthomeappliances",
            "listtags",
            "putroomskillparameter",
            "putskillauthorization",
            "startsmarthomeappliancediscovery",
            "tagresource",
            "untagresource",
            "updateroom"
        ],
        "skillgroup": [
            "associateskillgroupwithroom",
            "associateskillwithskillgroup",
            "deleteskillgroup",
            "disassociateskillfromskillgroup",
            "disassociateskillgroupfromroom",
            "getskillgroup",
            "updateskillgroup"
        ],
        "profile": [
            "createroom",
            "deleteprofile",
            "getprofile",
            "updateprofile"
        ],
        "user": [
            "createuser",
            "deleteuser",
            "disassociateskillfromusers",
            "listtags",
            "revokeinvitation",
            "sendinvitation",
            "tagresource",
            "untagresource"
        ],
        "schedule": [
            "deletebusinessreportschedule",
            "updatebusinessreportschedule"
        ],
        "conferenceprovider": [
            "deleteconferenceprovider",
            "getconferenceprovider",
            "updateconferenceprovider"
        ],
        "gatewaygroup": [
            "deletegatewaygroup",
            "getgatewaygroup",
            "listgateways",
            "updategatewaygroup"
        ],
        "gateway": [
            "getgateway",
            "updategateway"
        ]
    },
    "amplify": {
        "apps": [
            "createapp",
            "createbackendenvironment",
            "createbranch",
            "createdomainassociation",
            "deleteapp",
            "deletebackendenvironment",
            "deletewebhook",
            "generateaccesslogs",
            "getapp",
            "getartifacturl",
            "getbackendenvironment",
            "getwebhook",
            "listartifacts",
            "listbackendenvironments",
            "listbranches",
            "listdomainassociations",
            "listtagsforresource",
            "listwebhooks",
            "tagresource",
            "untagresource",
            "updateapp",
            "updatewebhook"
        ],
        "": [
            "createapp",
            "createbranch",
            "createdomainassociation",
            "listapps",
            "tagresource",
            "untagresource"
        ],
        "branches": [
            "createdeployment",
            "createwebhook",
            "deletebranch",
            "getbranch",
            "listjobs",
            "listtagsforresource",
            "startdeployment",
            "tagresource",
            "untagresource",
            "updatebranch"
        ],
        "domains": [
            "deletedomainassociation",
            "getdomainassociation",
            "updatedomainassociation"
        ],
        "jobs": [
            "deletejob",
            "getjob",
            "listtagsforresource",
            "startjob",
            "stopjob",
            "tagresource",
            "untagresource"
        ]
    },
    "amplifybackend": {
        "backend": [
            "clonebackend",
            "createbackend",
            "createbackendapi",
            "createbackendauth",
            "createbackendconfig",
            "createtoken",
            "deletebackend",
            "deletebackendapi",
            "deletebackendauth",
            "deletetoken",
            "generatebackendapimodels",
            "getbackend",
            "getbackendapi",
            "getbackendapimodels",
            "getbackendauth",
            "getbackendjob",
            "gettoken",
            "listbackendjobs",
            "removeallbackends",
            "removebackendconfig",
            "updatebackendapi",
            "updatebackendauth",
            "updatebackendconfig",
            "updatebackendjob"
        ],
        "api": [
            "createbackendapi",
            "deletebackendapi",
            "generatebackendapimodels",
            "getbackendapi",
            "getbackendapimodels",
            "updatebackendapi"
        ],
        "environment": [
            "createbackendapi",
            "createbackendauth",
            "deletebackend",
            "deletebackendapi",
            "deletebackendauth",
            "generatebackendapimodels",
            "getbackend",
            "getbackendapi",
            "getbackendapimodels",
            "getbackendauth",
            "removeallbackends",
            "updatebackendapi",
            "updatebackendauth"
        ],
        "auth": [
            "createbackendauth",
            "deletebackendauth",
            "getbackendauth",
            "updatebackendauth"
        ],
        "job": [
            "getbackendjob",
            "listbackendjobs",
            "updatebackendjob"
        ]
    },
    "execute-api": {
        "execute-api-general": [
            "invalidatecache",
            "invoke",
            "manageconnections"
        ]
    },
    "apigateway": {
        "AccessLogSettings": [
            "delete",
            "get"
        ],
        "Api": [
            "delete",
            "get",
            "patch"
        ],
        "ApiMapping": [
            "delete",
            "get",
            "patch"
        ],
        "Authorizer": [
            "delete",
            "get",
            "patch"
        ],
        "AuthorizersCache": [
            "delete",
            "get"
        ],
        "Cors": [
            "delete",
            "get"
        ],
        "Deployment": [
            "delete",
            "get",
            "patch"
        ],
        "Integration": [
            "delete",
            "get",
            "patch"
        ],
        "IntegrationResponse": [
            "delete",
            "get",
            "patch"
        ],
        "Model": [
            "delete",
            "get",
            "patch"
        ],
        "Route": [
            "delete",
            "get",
            "patch"
        ],
        "RouteRequestParameter": [
            "delete",
            "get",
            "patch"
        ],
        "RouteResponse": [
            "delete",
            "get",
            "patch"
        ],
        "RouteSettings": [
            "delete",
            "get"
        ],
        "Stage": [
            "delete",
            "get",
            "patch"
        ],
        "": [
            "delete",
            "patch",
            "post",
            "put"
        ],
        "ApiMappings": [
            "get",
            "post"
        ],
        "Apis": [
            "get",
            "post",
            "put"
        ],
        "Authorizers": [
            "get",
            "post"
        ],
        "Deployments": [
            "get",
            "post"
        ],
        "ExportedAPI": [
            "get"
        ],
        "IntegrationResponses": [
            "get",
            "post"
        ],
        "Integrations": [
            "get",
            "post"
        ],
        "ModelTemplate": [
            "get"
        ],
        "Models": [
            "get",
            "post"
        ],
        "RouteResponses": [
            "get",
            "post"
        ],
        "Routes": [
            "get",
            "post"
        ],
        "Stages": [
            "get",
            "post"
        ]
    },
    "appmesh": {
        "gatewayRoute": [
            "creategatewayroute",
            "deletegatewayroute",
            "describegatewayroute",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updategatewayroute"
        ],
        "virtualService": [
            "creategatewayroute",
            "createvirtualnode",
            "createvirtualservice",
            "deletevirtualservice",
            "describevirtualservice",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updategatewayroute",
            "updatevirtualservice"
        ],
        "": [
            "creategatewayroute",
            "createmesh",
            "createroute",
            "createvirtualgateway",
            "createvirtualnode",
            "createvirtualrouter",
            "createvirtualservice",
            "listmeshes",
            "tagresource",
            "untagresource"
        ],
        "mesh": [
            "createmesh",
            "deletemesh",
            "describemesh",
            "listtagsforresource",
            "listvirtualgateways",
            "listvirtualnodes",
            "listvirtualrouters",
            "listvirtualservices",
            "tagresource",
            "untagresource",
            "updatemesh"
        ],
        "route": [
            "createroute",
            "deleteroute",
            "describeroute",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateroute"
        ],
        "virtualNode": [
            "createroute",
            "createvirtualnode",
            "createvirtualservice",
            "deletevirtualnode",
            "describevirtualnode",
            "listtagsforresource",
            "streamaggregatedresources",
            "tagresource",
            "untagresource",
            "updateroute",
            "updatevirtualnode",
            "updatevirtualservice"
        ],
        "virtualGateway": [
            "createvirtualgateway",
            "deletevirtualgateway",
            "describevirtualgateway",
            "listgatewayroutes",
            "listtagsforresource",
            "streamaggregatedresources",
            "tagresource",
            "untagresource",
            "updatevirtualgateway"
        ],
        "virtualRouter": [
            "createvirtualrouter",
            "createvirtualservice",
            "deletevirtualrouter",
            "describevirtualrouter",
            "listroutes",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatevirtualrouter",
            "updatevirtualservice"
        ]
    },
    "appmesh-preview": {
        "gatewayRoute": [
            "creategatewayroute",
            "deletegatewayroute",
            "describegatewayroute",
            "updategatewayroute"
        ],
        "virtualService": [
            "creategatewayroute",
            "createvirtualnode",
            "createvirtualservice",
            "deletevirtualservice",
            "describevirtualservice",
            "updategatewayroute",
            "updatevirtualservice"
        ],
        "mesh": [
            "createmesh",
            "deletemesh",
            "describemesh",
            "listvirtualgateways",
            "listvirtualnodes",
            "listvirtualrouters",
            "listvirtualservices",
            "updatemesh"
        ],
        "route": [
            "createroute",
            "deleteroute",
            "describeroute",
            "updateroute"
        ],
        "virtualNode": [
            "createroute",
            "createvirtualnode",
            "createvirtualservice",
            "deletevirtualnode",
            "describevirtualnode",
            "streamaggregatedresources",
            "updateroute",
            "updatevirtualnode",
            "updatevirtualservice"
        ],
        "virtualGateway": [
            "createvirtualgateway",
            "deletevirtualgateway",
            "describevirtualgateway",
            "listgatewayroutes",
            "streamaggregatedresources",
            "updatevirtualgateway"
        ],
        "virtualRouter": [
            "createvirtualrouter",
            "createvirtualservice",
            "deletevirtualrouter",
            "describevirtualrouter",
            "listroutes",
            "updatevirtualrouter",
            "updatevirtualservice"
        ],
        "": [
            "listmeshes"
        ]
    },
    "appconfig": {
        "application": [
            "createapplication",
            "createconfigurationprofile",
            "createenvironment",
            "createhostedconfigurationversion",
            "deleteapplication",
            "deleteconfigurationprofile",
            "deleteenvironment",
            "deletehostedconfigurationversion",
            "getapplication",
            "getconfiguration",
            "getconfigurationprofile",
            "getdeployment",
            "getenvironment",
            "gethostedconfigurationversion",
            "listconfigurationprofiles",
            "listdeployments",
            "listenvironments",
            "listhostedconfigurationversions",
            "listtagsforresource",
            "startdeployment",
            "stopdeployment",
            "tagresource",
            "untagresource",
            "updateapplication",
            "updateconfigurationprofile",
            "updateenvironment",
            "validateconfiguration"
        ],
        "": [
            "createapplication",
            "createconfigurationprofile",
            "createdeploymentstrategy",
            "createenvironment",
            "getapplication",
            "getconfiguration",
            "getconfigurationprofile",
            "getdeployment",
            "getdeploymentstrategy",
            "getenvironment",
            "listapplications",
            "listdeploymentstrategies",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateapplication",
            "updateconfigurationprofile",
            "updatedeploymentstrategy",
            "updateenvironment"
        ],
        "configurationprofile": [
            "createconfigurationprofile",
            "createhostedconfigurationversion",
            "deleteconfigurationprofile",
            "deletehostedconfigurationversion",
            "getconfiguration",
            "getconfigurationprofile",
            "gethostedconfigurationversion",
            "listhostedconfigurationversions",
            "listtagsforresource",
            "startdeployment",
            "tagresource",
            "untagresource",
            "updateconfigurationprofile",
            "validateconfiguration"
        ],
        "deploymentstrategy": [
            "createdeploymentstrategy",
            "deletedeploymentstrategy",
            "getdeploymentstrategy",
            "listtagsforresource",
            "startdeployment",
            "tagresource",
            "untagresource",
            "updatedeploymentstrategy"
        ],
        "environment": [
            "createenvironment",
            "deleteenvironment",
            "getconfiguration",
            "getdeployment",
            "getenvironment",
            "listdeployments",
            "listtagsforresource",
            "startdeployment",
            "stopdeployment",
            "tagresource",
            "untagresource",
            "updateenvironment"
        ],
        "hostedconfigurationversion": [
            "createhostedconfigurationversion",
            "deletehostedconfigurationversion",
            "gethostedconfigurationversion"
        ],
        "deployment": [
            "getdeployment",
            "listtagsforresource",
            "startdeployment",
            "stopdeployment",
            "tagresource",
            "untagresource"
        ]
    },
    "appflow": {
        "": [
            "createconnectorprofile",
            "createflow",
            "deleteflow",
            "describeconnectorprofiles",
            "describeconnectors",
            "describeflow",
            "describeflows",
            "tagresource",
            "untagresource"
        ],
        "connectorprofile": [
            "deleteconnectorprofile",
            "describeconnectorentity",
            "describeconnectorfields",
            "listconnectorentities",
            "listconnectorfields"
        ],
        "flow": [
            "deleteflow",
            "describeflowexecution",
            "describeflowexecutionrecords",
            "listflows",
            "listtagsforresource",
            "runflow",
            "startflow",
            "stopflow",
            "tagresource",
            "untagresource",
            "updateconnectorprofile",
            "updateflow"
        ]
    },
    "app-integrations": {
        "event-integration": [
            "createeventintegration",
            "deleteeventintegration",
            "geteventintegration",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateeventintegration"
        ],
        "": [
            "createeventintegration",
            "deleteeventintegration",
            "geteventintegration",
            "listeventintegrationassociations",
            "listeventintegrations",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateeventintegration"
        ],
        "event-integration-association": [
            "createeventintegrationassociation",
            "deleteeventintegrationassociation",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ]
    },
    "application-autoscaling": {
        "": [
            "deletescalingpolicy",
            "deletescheduledaction",
            "deregisterscalabletarget",
            "describescalabletargets",
            "describescalingactivities",
            "describescalingpolicies",
            "describescheduledactions",
            "putscalingpolicy",
            "putscheduledaction",
            "registerscalabletarget"
        ]
    },
    "discovery": {
        "": [
            "associateconfigurationitemstoapplication",
            "batchdeleteimportdata",
            "createapplication",
            "createtags",
            "deleteapplications",
            "deletetags",
            "describeagents",
            "describeconfigurations",
            "describecontinuousexports",
            "describeexportconfigurations",
            "describeexporttasks",
            "describeimporttasks",
            "describetags",
            "disassociateconfigurationitemsfromapplication",
            "exportconfigurations",
            "getdiscoverysummary",
            "listconfigurations",
            "listserverneighbors",
            "startcontinuousexport",
            "startdatacollectionbyagentids",
            "startexporttask",
            "startimporttask",
            "stopcontinuousexport",
            "stopdatacollectionbyagentids",
            "updateapplication"
        ]
    },
    "arsenal": {
        "": [
            "registeronpremisesagent"
        ]
    },
    "mgn": {
        "SourceServerResource": [
            "batchcreatevolumesnapshotgroupformgn",
            "changeserverlifecyclestate",
            "deletesourceserver",
            "disconnectfromservice",
            "finalizecutover",
            "getagentcommandformgn",
            "getagentconfirmedresumeinfoformgn",
            "getagentreplicationinfoformgn",
            "getagentruntimeconfigurationformgn",
            "getagentsnapshotcreditsformgn",
            "getlaunchconfiguration",
            "getreplicationconfiguration",
            "markasarchived",
            "notifyagentauthenticationformgn",
            "notifyagentconnectedformgn",
            "notifyagentdisconnectedformgn",
            "notifyagentreplicationprogressformgn",
            "retrydatareplication",
            "sendagentlogsformgn",
            "sendagentmetricsformgn",
            "startcutover",
            "starttest",
            "terminatetargetinstances",
            "updateagentbacklogformgn",
            "updateagentconversioninfoformgn",
            "updateagentreplicationinfoformgn",
            "updateagentreplicationprocessstateformgn",
            "updateagentsourcepropertiesformgn",
            "updatelaunchconfiguration",
            "updatereplicationconfiguration"
        ],
        "": [
            "batchdeletesnapshotrequestformgn",
            "createreplicationconfigurationtemplate",
            "describejobs",
            "describereplicationconfigurationtemplates",
            "describereplicationserverassociationsformgn",
            "describesnapshotrequestsformgn",
            "describesourceservers",
            "getagentinstallationassetsformgn",
            "getchannelcommandsformgn",
            "initializeservice",
            "listtagsforresource",
            "registeragentformgn",
            "sendchannelcommandresultformgn",
            "sendclientlogsformgn",
            "sendclientmetricsformgn",
            "startcutover",
            "starttest",
            "tagresource",
            "terminatetargetinstances",
            "untagresource"
        ],
        "JobResource": [
            "deletejob",
            "describejoblogitems"
        ],
        "ReplicationConfigurationTemplateResource": [
            "deletereplicationconfigurationtemplate",
            "updatereplicationconfigurationtemplate"
        ]
    },
    "appstream": {
        "fleet": [
            "associatefleet",
            "createfleet",
            "createstreamingurl",
            "deletefleet",
            "describefleets",
            "describesessions",
            "disassociatefleet",
            "listassociatedstacks",
            "startfleet",
            "stopfleet",
            "tagresource",
            "untagresource",
            "updatefleet"
        ],
        "stack": [
            "associatefleet",
            "batchassociateuserstack",
            "batchdisassociateuserstack",
            "createstack",
            "createstreamingurl",
            "deletestack",
            "describesessions",
            "describestacks",
            "describeuserstackassociations",
            "disassociatefleet",
            "listassociatedfleets",
            "stream",
            "tagresource",
            "untagresource",
            "updatestack"
        ],
        "": [
            "associatefleet",
            "batchassociateuserstack",
            "batchdisassociateuserstack",
            "copyimage",
            "createdirectoryconfig",
            "createfleet",
            "createimagebuilder",
            "createimagebuilderstreamingurl",
            "createstack",
            "createstreamingurl",
            "createusagereportsubscription",
            "createuser",
            "deletedirectoryconfig",
            "deletefleet",
            "deleteimage",
            "deleteimagebuilder",
            "deleteimagepermissions",
            "deletestack",
            "deleteusagereportsubscription",
            "deleteuser",
            "describedirectoryconfigs",
            "describeusagereportsubscriptions",
            "describeusers",
            "disableuser",
            "disassociatefleet",
            "enableuser",
            "expiresession",
            "listtagsforresource",
            "startfleet",
            "startimagebuilder",
            "stopfleet",
            "stopimagebuilder",
            "stream",
            "tagresource",
            "untagresource",
            "updatedirectoryconfig",
            "updatefleet",
            "updateimagepermissions",
            "updatestack"
        ],
        "image": [
            "copyimage",
            "createfleet",
            "createimagebuilder",
            "deleteimage",
            "deleteimagepermissions",
            "describeimagepermissions",
            "describeimages",
            "tagresource",
            "untagresource",
            "updatefleet",
            "updateimagepermissions"
        ],
        "image-builder": [
            "createimagebuilder",
            "createimagebuilderstreamingurl",
            "deleteimagebuilder",
            "describeimagebuilders",
            "startimagebuilder",
            "stopimagebuilder",
            "tagresource",
            "untagresource"
        ]
    },
    "appsync": {
        "": [
            "createapicache",
            "createapikey",
            "createdatasource",
            "createfunction",
            "creategraphqlapi",
            "createresolver",
            "createtype",
            "deleteapicache",
            "deleteapikey",
            "deletedatasource",
            "deletefunction",
            "deletegraphqlapi",
            "deleteresolver",
            "deletetype",
            "flushapicache",
            "getapicache",
            "getdatasource",
            "getfunction",
            "getgraphqlapi",
            "getintrospectionschema",
            "getresolver",
            "getschemacreationstatus",
            "gettype",
            "listapikeys",
            "listdatasources",
            "listfunctions",
            "listgraphqlapis",
            "listresolvers",
            "listresolversbyfunction",
            "listtagsforresource",
            "listtypes",
            "setwebacl",
            "startschemacreation",
            "tagresource",
            "untagresource",
            "updateapicache",
            "updateapikey",
            "updatedatasource",
            "updatefunction",
            "updategraphqlapi",
            "updateresolver",
            "updatetype"
        ],
        "graphqlapi": [
            "deletegraphqlapi",
            "getgraphqlapi",
            "graphql",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updategraphqlapi"
        ],
        "field": [
            "graphql"
        ]
    },
    "artifact": {
        "agreement": [
            "acceptagreement",
            "downloadagreement"
        ],
        "customer-agreement": [
            "downloadagreement",
            "terminateagreement"
        ],
        "report-package": [
            "get"
        ]
    },
    "athena": {
        "workgroup": [
            "batchgetnamedquery",
            "batchgetqueryexecution",
            "createnamedquery",
            "createpreparedstatement",
            "createworkgroup",
            "deletenamedquery",
            "deletepreparedstatement",
            "deleteworkgroup",
            "getnamedquery",
            "getpreparedstatement",
            "getqueryexecution",
            "getqueryresults",
            "getqueryresultsstream",
            "getworkgroup",
            "listnamedqueries",
            "listpreparedstatements",
            "listqueryexecutions",
            "listtagsforresource",
            "startqueryexecution",
            "stopqueryexecution",
            "tagresource",
            "untagresource",
            "updatepreparedstatement",
            "updateworkgroup"
        ],
        "datacatalog": [
            "createdatacatalog",
            "deletedatacatalog",
            "getdatacatalog",
            "getdatabase",
            "gettablemetadata",
            "listdatabases",
            "listtablemetadata",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedatacatalog"
        ],
        "": [
            "createdatacatalog",
            "createworkgroup",
            "listdatacatalogs",
            "listengineversions",
            "listworkgroups",
            "tagresource",
            "untagresource"
        ]
    },
    "auditmanager": {
        "assessment": [
            "associateassessmentreportevidencefolder",
            "batchassociateassessmentreportevidence",
            "batchcreatedelegationbyassessment",
            "batchdeletedelegationbyassessment",
            "batchdisassociateassessmentreportevidence",
            "createassessmentreport",
            "deleteassessment",
            "deleteassessmentreport",
            "disassociateassessmentreportevidencefolder",
            "getassessment",
            "getassessmentreporturl",
            "getchangelogs",
            "getevidencefoldersbyassessment",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateassessment",
            "updateassessmentstatus"
        ],
        "assessmentControlSet": [
            "batchimportevidencetoassessmentcontrol",
            "getevidence",
            "getevidencebyevidencefolder",
            "getevidencefolder",
            "getevidencefoldersbyassessmentcontrol",
            "updateassessmentcontrol",
            "updateassessmentcontrolsetstatus"
        ],
        "": [
            "createassessment",
            "createassessmentframework",
            "createcontrol",
            "deleteassessment",
            "deleteassessmentframework",
            "deletecontrol",
            "deregisteraccount",
            "deregisterorganizationadminaccount",
            "getaccountstatus",
            "getdelegations",
            "getorganizationadminaccount",
            "getservicesinscope",
            "getsettings",
            "listassessmentframeworks",
            "listassessmentreports",
            "listassessments",
            "listcontrols",
            "listkeywordsfordatasource",
            "listnotifications",
            "registeraccount",
            "registerorganizationadminaccount",
            "tagresource",
            "untagresource",
            "updatesettings",
            "validateassessmentreportintegrity"
        ],
        "assessmentFramework": [
            "deleteassessmentframework",
            "getassessmentframework",
            "updateassessmentframework"
        ],
        "control": [
            "deletecontrol",
            "getcontrol",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatecontrol"
        ]
    },
    "autoscaling-plans": {
        "": [
            "createscalingplan",
            "deletescalingplan",
            "describescalingplanresources",
            "describescalingplans",
            "getscalingplanresourceforecastdata",
            "updatescalingplan"
        ]
    },
    "datasync": {
        "taskexecution": [
            "canceltaskexecution",
            "describetaskexecution",
            "updatetaskexecution"
        ],
        "": [
            "createagent",
            "createlocationefs",
            "createlocationfsxwindows",
            "createlocationnfs",
            "createlocationobjectstorage",
            "createlocations3",
            "createlocationsmb",
            "createtask",
            "listagents",
            "listlocations",
            "listtaskexecutions",
            "listtasks",
            "tagresource",
            "untagresource"
        ],
        "agent": [
            "deleteagent",
            "describeagent",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateagent"
        ],
        "location": [
            "deletelocation",
            "describelocationefs",
            "describelocationfsxwindows",
            "describelocationnfs",
            "describelocationobjectstorage",
            "describelocations3",
            "describelocationsmb",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "task": [
            "deletetask",
            "describetask",
            "listtagsforresource",
            "starttaskexecution",
            "tagresource",
            "untagresource",
            "updatetask"
        ]
    },
    "backup": {
        "": [
            "copyfrombackupvault",
            "copyintobackupvault",
            "createbackupplan",
            "createbackupvault",
            "describebackupjob",
            "describecopyjob",
            "describeglobalsettings",
            "describeprotectedresource",
            "describeregionsettings",
            "describerestorejob",
            "exportbackupplantemplate",
            "getbackupplanfromjson",
            "getbackupplanfromtemplate",
            "getsupportedresourcetypes",
            "listbackupjobs",
            "listbackupplantemplates",
            "listbackupplans",
            "listbackupvaults",
            "listcopyjobs",
            "listprotectedresources",
            "listrecoverypointsbyresource",
            "listrestorejobs",
            "startcopyjob",
            "stopbackupjob",
            "tagresource",
            "untagresource",
            "updateglobalsettings",
            "updateregionsettings"
        ],
        "backupPlan": [
            "createbackupplan",
            "createbackupselection",
            "deletebackupplan",
            "deletebackupselection",
            "getbackupplan",
            "getbackupselection",
            "listbackupplanversions",
            "listbackupselections",
            "listtags",
            "tagresource",
            "untagresource",
            "updatebackupplan"
        ],
        "backupVault": [
            "createbackupvault",
            "deletebackupvault",
            "deletebackupvaultaccesspolicy",
            "deletebackupvaultnotifications",
            "describebackupvault",
            "getbackupvaultaccesspolicy",
            "getbackupvaultnotifications",
            "listrecoverypointsbybackupvault",
            "listtags",
            "putbackupvaultaccesspolicy",
            "putbackupvaultnotifications",
            "startbackupjob",
            "tagresource",
            "untagresource"
        ],
        "recoveryPoint": [
            "deleterecoverypoint",
            "describerecoverypoint",
            "disassociaterecoverypoint",
            "getrecoverypointrestoremetadata",
            "listtags",
            "startcopyjob",
            "startrestorejob",
            "tagresource",
            "untagresource",
            "updaterecoverypointlifecycle"
        ]
    },
    "backup-storage": {
        "": [
            "mountcapsule"
        ]
    },
    "batch": {
        "job": [
            "canceljob",
            "listtagsforresource",
            "tagresource",
            "terminatejob",
            "untagresource"
        ],
        "": [
            "createcomputeenvironment",
            "createjobqueue",
            "describecomputeenvironments",
            "describejobdefinitions",
            "describejobqueues",
            "describejobs",
            "listjobs",
            "registerjobdefinition",
            "submitjob",
            "tagresource",
            "untagresource"
        ],
        "compute-environment": [
            "createjobqueue",
            "deletecomputeenvironment",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatecomputeenvironment"
        ],
        "job-queue": [
            "deletejobqueue",
            "listtagsforresource",
            "submitjob",
            "tagresource",
            "untagresource",
            "updatejobqueue"
        ],
        "job-definition": [
            "deregisterjobdefinition",
            "listtagsforresource",
            "submitjob",
            "tagresource",
            "untagresource"
        ]
    },
    "aws-portal": {
        "": [
            "modifyaccount",
            "modifybilling",
            "modifypaymentmethods",
            "viewaccount",
            "viewbilling",
            "viewpaymentmethods",
            "viewusage"
        ]
    },
    "braket": {
        "quantum-task": [
            "cancelquantumtask",
            "createquantumtask",
            "getquantumtask",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "": [
            "createquantumtask",
            "getdevice",
            "searchdevices",
            "searchquantumtasks",
            "tagresource",
            "untagresource"
        ]
    },
    "budgets": {
        "budgetAction": [
            "createbudgetaction",
            "deletebudgetaction",
            "describebudgetaction",
            "describebudgetactionhistories",
            "executebudgetaction",
            "updatebudgetaction"
        ],
        "": [
            "describebudgetactionsforaccount"
        ],
        "budget": [
            "describebudgetactionsforbudget",
            "modifybudget",
            "viewbudget"
        ]
    },
    "acm": {
        "certificate": [
            "addtagstocertificate",
            "deletecertificate",
            "describecertificate",
            "exportcertificate",
            "getcertificate",
            "importcertificate",
            "removetagsfromcertificate",
            "renewcertificate",
            "resendvalidationemail",
            "updatecertificateoptions"
        ],
        "": [
            "addtagstocertificate",
            "getaccountconfiguration",
            "importcertificate",
            "listcertificates",
            "listtagsforcertificate",
            "putaccountconfiguration",
            "removetagsfromcertificate",
            "requestcertificate"
        ]
    },
    "acm-pca": {
        "": [
            "createcertificateauthority",
            "issuecertificate",
            "listcertificateauthorities",
            "tagcertificateauthority",
            "untagcertificateauthority"
        ],
        "certificate-authority": [
            "createcertificateauthorityauditreport",
            "createpermission",
            "deletecertificateauthority",
            "deletepermission",
            "deletepolicy",
            "describecertificateauthority",
            "describecertificateauthorityauditreport",
            "getcertificate",
            "getcertificateauthoritycertificate",
            "getcertificateauthoritycsr",
            "getpolicy",
            "importcertificateauthoritycertificate",
            "issuecertificate",
            "listpermissions",
            "listtags",
            "putpolicy",
            "restorecertificateauthority",
            "revokecertificate",
            "tagcertificateauthority",
            "untagcertificateauthority",
            "updatecertificateauthority"
        ]
    },
    "chatbot": {
        "": [
            "createchimewebhookconfiguration",
            "createslackchannelconfiguration",
            "deletechimewebhookconfiguration",
            "deleteslackchannelconfiguration",
            "describechimewebhookconfigurations",
            "describeslackchannelconfigurations",
            "describeslackchannels",
            "describeslackworkspaces",
            "getslackoauthparameters",
            "redeemslackoauthcode",
            "updatechimewebhookconfiguration",
            "updateslackchannelconfiguration"
        ]
    },
    "chime": {
        "": [
            "acceptdelegate",
            "activateusers",
            "adddomain",
            "addorupdategroups",
            "associatephonenumberwithuser",
            "associatephonenumberswithvoiceconnector",
            "associatephonenumberswithvoiceconnectorgroup",
            "associatesignindelegategroupswithaccount",
            "authorizedirectory",
            "batchcreateroommembership",
            "batchdeletephonenumber",
            "batchsuspenduser",
            "batchunsuspenduser",
            "batchupdatephonenumber",
            "batchupdateuser",
            "connectdirectory",
            "createaccount",
            "createapikey",
            "createappinstance",
            "createappinstanceuser",
            "createbot",
            "createbotmembership",
            "createcdrbucket",
            "createchannel",
            "createmeeting",
            "createmeetingwithattendees",
            "createphonenumberorder",
            "createproxysession",
            "createroom",
            "createroommembership",
            "createsipmediaapplication",
            "createsipmediaapplicationcall",
            "createsiprule",
            "createuser",
            "createvoiceconnector",
            "createvoiceconnectorgroup",
            "deleteaccount",
            "deleteaccountopenidconfig",
            "deleteapikey",
            "deletecdrbucket",
            "deletedelegate",
            "deletedomain",
            "deleteeventsconfiguration",
            "deletegroups",
            "deletephonenumber",
            "deleteproxysession",
            "deleteroom",
            "deleteroommembership",
            "deletesipmediaapplication",
            "deletesiprule",
            "deletevoiceconnector",
            "deletevoiceconnectoremergencycallingconfiguration",
            "deletevoiceconnectorgroup",
            "deletevoiceconnectororigination",
            "deletevoiceconnectorproxy",
            "deletevoiceconnectorstreamingconfiguration",
            "deletevoiceconnectortermination",
            "deletevoiceconnectorterminationcredentials",
            "disassociatephonenumberfromuser",
            "disassociatephonenumbersfromvoiceconnector",
            "disassociatephonenumbersfromvoiceconnectorgroup",
            "disassociatesignindelegategroupsfromaccount",
            "disconnectdirectory",
            "getaccount",
            "getaccountresource",
            "getaccountsettings",
            "getaccountwithopenidconfig",
            "getbot",
            "getcdrbucket",
            "getdomain",
            "geteventsconfiguration",
            "getglobalsettings",
            "getmeetingdetail",
            "getmessagingsessionendpoint",
            "getphonenumber",
            "getphonenumberorder",
            "getphonenumbersettings",
            "getproxysession",
            "getretentionsettings",
            "getroom",
            "getsipmediaapplication",
            "getsipmediaapplicationloggingconfiguration",
            "getsiprule",
            "gettelephonylimits",
            "getuser",
            "getuseractivityreportdata",
            "getuserbyemail",
            "getusersettings",
            "getvoiceconnector",
            "getvoiceconnectoremergencycallingconfiguration",
            "getvoiceconnectorgroup",
            "getvoiceconnectorloggingconfiguration",
            "getvoiceconnectororigination",
            "getvoiceconnectorproxy",
            "getvoiceconnectorstreamingconfiguration",
            "getvoiceconnectortermination",
            "getvoiceconnectorterminationhealth",
            "invitedelegate",
            "inviteusers",
            "inviteusersfromprovider",
            "listaccountusagereportdata",
            "listaccounts",
            "listapikeys",
            "listbots",
            "listcdrbucket",
            "listcallingregions",
            "listdelegates",
            "listdirectories",
            "listdomains",
            "listgroups",
            "listmeetingevents",
            "listmeetings",
            "listmeetingsreportdata",
            "listphonenumberorders",
            "listphonenumbers",
            "listproxysessions",
            "listroommemberships",
            "listrooms",
            "listsipmediaapplications",
            "listsiprules",
            "listsupportedphonenumbercountries",
            "listusers",
            "listvoiceconnectorgroups",
            "listvoiceconnectorterminationcredentials",
            "listvoiceconnectors",
            "logoutuser",
            "puteventsconfiguration",
            "putretentionsettings",
            "putsipmediaapplicationloggingconfiguration",
            "putvoiceconnectoremergencycallingconfiguration",
            "putvoiceconnectorloggingconfiguration",
            "putvoiceconnectororigination",
            "putvoiceconnectorproxy",
            "putvoiceconnectorstreamingconfiguration",
            "putvoiceconnectortermination",
            "putvoiceconnectorterminationcredentials",
            "redactconversationmessage",
            "redactroommessage",
            "regeneratesecuritytoken",
            "renameaccount",
            "renewdelegate",
            "resetaccountresource",
            "resetpersonalpin",
            "restorephonenumber",
            "retrievedataexports",
            "searchavailablephonenumbers",
            "startdataexport",
            "submitsupportrequest",
            "suspendusers",
            "tagmeeting",
            "tagresource",
            "unauthorizedirectory",
            "updateaccount",
            "updateaccountopenidconfig",
            "updateaccountresource",
            "updateaccountsettings",
            "updatebot",
            "updatecdrsettings",
            "updateglobalsettings",
            "updatephonenumber",
            "updatephonenumbersettings",
            "updateproxysession",
            "updateroom",
            "updateroommembership",
            "updatesipmediaapplication",
            "updatesiprule",
            "updatesupportedlicenses",
            "updateuser",
            "updateuserlicenses",
            "updateusersettings",
            "updatevoiceconnector",
            "updatevoiceconnectorgroup",
            "validateaccountresource"
        ],
        "meeting": [
            "batchcreateattendee",
            "createattendee",
            "createmeetingdialout",
            "deleteattendee",
            "deletemeeting",
            "getattendee",
            "getmeeting",
            "listattendeetags",
            "listattendees",
            "listmeetingtags",
            "tagattendee",
            "tagmeeting",
            "untagattendee",
            "untagmeeting"
        ],
        "app-instance-user": [
            "connect",
            "createappinstanceadmin",
            "createchannel",
            "createchannelban",
            "createchannelmembership",
            "createchannelmoderator",
            "deleteappinstanceadmin",
            "deleteappinstanceuser",
            "deletechannel",
            "deletechannelban",
            "deletechannelmembership",
            "deletechannelmessage",
            "deletechannelmoderator",
            "describeappinstanceadmin",
            "describeappinstanceuser",
            "describechannel",
            "describechannelban",
            "describechannelmembership",
            "describechannelmembershipforappinstanceuser",
            "describechannelmoderatedbyappinstanceuser",
            "describechannelmoderator",
            "getchannelmessage",
            "listappinstanceadmins",
            "listappinstanceusers",
            "listchannelbans",
            "listchannelmemberships",
            "listchannelmembershipsforappinstanceuser",
            "listchannelmessages",
            "listchannelmoderators",
            "listchannels",
            "listchannelsmoderatedbyappinstanceuser",
            "redactchannelmessage",
            "sendchannelmessage",
            "updateappinstanceuser",
            "updatechannel",
            "updatechannelmessage",
            "updatechannelreadmarker"
        ],
        "app-instance": [
            "createappinstanceadmin",
            "deleteappinstance",
            "deleteappinstanceadmin",
            "deleteappinstancestreamingconfigurations",
            "describeappinstance",
            "describeappinstanceadmin",
            "getappinstanceretentionsettings",
            "getappinstancestreamingconfigurations",
            "listappinstanceadmins",
            "listappinstances",
            "putappinstanceretentionsettings",
            "putappinstancestreamingconfigurations",
            "updateappinstance"
        ],
        "channel": [
            "createchannelban",
            "createchannelmembership",
            "createchannelmoderator",
            "deletechannel",
            "deletechannelban",
            "deletechannelmembership",
            "deletechannelmessage",
            "deletechannelmoderator",
            "describechannel",
            "describechannelban",
            "describechannelmembership",
            "describechannelmembershipforappinstanceuser",
            "describechannelmoderatedbyappinstanceuser",
            "describechannelmoderator",
            "getchannelmessage",
            "listchannelbans",
            "listchannelmemberships",
            "listchannelmessages",
            "listchannelmoderators",
            "listchannels",
            "listtagsforresource",
            "redactchannelmessage",
            "sendchannelmessage",
            "tagresource",
            "untagresource",
            "updatechannel",
            "updatechannelmessage",
            "updatechannelreadmarker"
        ]
    },
    "clouddirectory": {
        "directory": [
            "addfacettoobject",
            "applyschema",
            "attachobject",
            "attachpolicy",
            "attachtoindex",
            "attachtypedlink",
            "batchread",
            "batchwrite",
            "createindex",
            "createobject",
            "deletedirectory",
            "deleteobject",
            "detachfromindex",
            "detachobject",
            "detachpolicy",
            "detachtypedlink",
            "disabledirectory",
            "enabledirectory",
            "getdirectory",
            "getlinkattributes",
            "getobjectattributes",
            "getobjectinformation",
            "listappliedschemaarns",
            "listattachedindices",
            "listincomingtypedlinks",
            "listindex",
            "listobjectattributes",
            "listobjectchildren",
            "listobjectparentpaths",
            "listobjectparents",
            "listobjectpolicies",
            "listoutgoingtypedlinks",
            "listpolicyattachments",
            "listtagsforresource",
            "lookuppolicy",
            "removefacetfromobject",
            "tagresource",
            "untagresource",
            "updatelinkattributes",
            "updateobjectattributes"
        ],
        "publishedSchema": [
            "applyschema",
            "createdirectory",
            "deleteschema",
            "getfacet",
            "getschemaasjson",
            "gettypedlinkfacetinformation",
            "listfacetattributes",
            "listfacetnames",
            "listtypedlinkfacetattributes",
            "listtypedlinkfacetnames"
        ],
        "appliedSchema": [
            "createfacet",
            "createtypedlinkfacet",
            "getfacet",
            "getschemaasjson",
            "gettypedlinkfacetinformation",
            "listfacetattributes",
            "listfacetnames",
            "listtypedlinkfacetattributes",
            "listtypedlinkfacetnames",
            "updatefacet"
        ],
        "developmentSchema": [
            "createfacet",
            "createtypedlinkfacet",
            "deletefacet",
            "deleteschema",
            "deletetypedlinkfacet",
            "getfacet",
            "getschemaasjson",
            "gettypedlinkfacetinformation",
            "listfacetattributes",
            "listfacetnames",
            "listtypedlinkfacetattributes",
            "listtypedlinkfacetnames",
            "publishschema",
            "updatefacet",
            "updateschema",
            "updatetypedlinkfacet"
        ],
        "": [
            "createschema",
            "listdevelopmentschemaarns",
            "listdirectories",
            "listmanagedschemaarns",
            "listpublishedschemaarns",
            "putschemafromjson"
        ]
    },
    "servicediscovery": {
        "": [
            "createhttpnamespace",
            "createprivatednsnamespace",
            "createpublicdnsnamespace",
            "createservice",
            "deregisterinstance",
            "discoverinstances",
            "getinstance",
            "getinstanceshealthstatus",
            "getoperation",
            "listinstances",
            "listnamespaces",
            "listoperations",
            "listservices",
            "listtagsforresource",
            "registerinstance",
            "tagresource",
            "untagresource",
            "updateinstancecustomhealthstatus"
        ],
        "namespace": [
            "createservice",
            "deletenamespace",
            "getnamespace"
        ],
        "service": [
            "deleteservice",
            "deregisterinstance",
            "getservice",
            "registerinstance",
            "updateservice"
        ]
    },
    "cloud9": {
        "": [
            "createenvironmentec2",
            "createenvironmentmembership",
            "describeenvironmentmemberships",
            "getusersettings",
            "listenvironments",
            "tagresource",
            "untagresource",
            "updateenvironmentmembership",
            "updateusersettings"
        ],
        "environment": [
            "createenvironmentmembership",
            "deleteenvironment",
            "deleteenvironmentmembership",
            "describeenvironmentmemberships",
            "describeenvironmentstatus",
            "describeenvironments",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateenvironment",
            "updateenvironmentmembership"
        ]
    },
    "cloudformation": {
        "stack": [
            "cancelupdatestack",
            "continueupdaterollback",
            "createchangeset",
            "createstack",
            "deletechangeset",
            "deletestack",
            "describechangeset",
            "describestackevents",
            "describestackresource",
            "describestackresourcedrifts",
            "describestackresources",
            "describestacks",
            "detectstackdrift",
            "detectstackresourcedrift",
            "executechangeset",
            "getstackpolicy",
            "gettemplate",
            "gettemplatesummary",
            "listchangesets",
            "liststackresources",
            "recordhandlerprogress",
            "setstackpolicy",
            "signalresource",
            "tagresource",
            "untagresource",
            "updatestack",
            "updateterminationprotection"
        ],
        "": [
            "continueupdaterollback",
            "createchangeset",
            "createstack",
            "createstackset",
            "createuploadbucket",
            "deletechangeset",
            "deletestack",
            "deregistertype",
            "describeaccountlimits",
            "describechangeset",
            "describestackdriftdetectionstatus",
            "describetype",
            "describetyperegistration",
            "estimatetemplatecost",
            "executechangeset",
            "listexports",
            "listimports",
            "liststacks",
            "listtyperegistrations",
            "listtypeversions",
            "listtypes",
            "registertype",
            "setstackpolicy",
            "settypedefaultversion",
            "updatestack",
            "updatestackset",
            "validatetemplate"
        ],
        "stackset": [
            "createstackinstances",
            "deletestackinstances",
            "deletestackset",
            "describestackinstance",
            "describestackset",
            "describestacksetoperation",
            "detectstacksetdrift",
            "gettemplatesummary",
            "liststackinstances",
            "liststacksetoperationresults",
            "liststacksetoperations",
            "liststacksets",
            "stopstacksetoperation",
            "tagresource",
            "untagresource",
            "updatestackinstances",
            "updatestackset"
        ],
        "stackset-target": [
            "createstackinstances",
            "deletestackinstances",
            "updatestackinstances",
            "updatestackset"
        ],
        "type": [
            "createstackinstances",
            "deletestackinstances",
            "updatestackinstances",
            "updatestackset"
        ]
    },
    "cloudfront": {
        "": [
            "createcachepolicy",
            "createdistributionwithtags",
            "createfieldlevelencryptionconfig",
            "createfieldlevelencryptionprofile",
            "createkeygroup",
            "createmonitoringsubscription",
            "createoriginrequestpolicy",
            "createpublickey",
            "createrealtimelogconfig",
            "createstreamingdistributionwithtags",
            "deletecachepolicy",
            "deletefieldlevelencryptionconfig",
            "deletefieldlevelencryptionprofile",
            "deletekeygroup",
            "deletemonitoringsubscription",
            "deleteoriginrequestpolicy",
            "deletepublickey",
            "deleterealtimelogconfig",
            "getcachepolicy",
            "getcachepolicyconfig",
            "getfieldlevelencryption",
            "getfieldlevelencryptionconfig",
            "getfieldlevelencryptionprofile",
            "getfieldlevelencryptionprofileconfig",
            "getkeygroup",
            "getkeygroupconfig",
            "getmonitoringsubscription",
            "getoriginrequestpolicy",
            "getoriginrequestpolicyconfig",
            "getpublickey",
            "getpublickeyconfig",
            "getrealtimelogconfig",
            "listcachepolicies",
            "listcloudfrontoriginaccessidentities",
            "listdistributions",
            "listdistributionsbycachepolicyid",
            "listdistributionsbykeygroup",
            "listdistributionsbyoriginrequestpolicyid",
            "listdistributionsbyrealtimelogconfig",
            "listdistributionsbywebaclid",
            "listfieldlevelencryptionconfigs",
            "listfieldlevelencryptionprofiles",
            "listkeygroups",
            "listoriginrequestpolicies",
            "listpublickeys",
            "listrealtimelogconfigs",
            "liststreamingdistributions",
            "tagresource",
            "untagresource",
            "updatecachepolicy",
            "updatefieldlevelencryptionconfig",
            "updatefieldlevelencryptionprofile",
            "updatekeygroup",
            "updateoriginrequestpolicy",
            "updatepublickey",
            "updaterealtimelogconfig"
        ],
        "origin-access-identity": [
            "createcloudfrontoriginaccessidentity",
            "deletecloudfrontoriginaccessidentity",
            "getcloudfrontoriginaccessidentity",
            "getcloudfrontoriginaccessidentityconfig",
            "updatecloudfrontoriginaccessidentity"
        ],
        "distribution": [
            "createdistribution",
            "createdistributionwithtags",
            "createinvalidation",
            "deletedistribution",
            "getdistribution",
            "getdistributionconfig",
            "getinvalidation",
            "listinvalidations",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedistribution"
        ],
        "streaming-distribution": [
            "createstreamingdistribution",
            "createstreamingdistributionwithtags",
            "deletestreamingdistribution",
            "getstreamingdistribution",
            "getstreamingdistributionconfig",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatestreamingdistribution"
        ]
    },
    "cloudhsm": {
        "": [
            "addtagstoresource",
            "copybackuptoregion",
            "createcluster",
            "createhapg",
            "createlunaclient",
            "deletehapg",
            "deletehsm",
            "deletelunaclient",
            "describebackups",
            "describeclusters",
            "describehapg",
            "describehsm",
            "describelunaclient",
            "getconfig",
            "listavailablezones",
            "listhapgs",
            "listhsms",
            "listlunaclients",
            "listtagsforresource",
            "modifyhapg",
            "modifyhsm",
            "modifylunaclient",
            "removetagsfromresource",
            "tagresource",
            "untagresource"
        ],
        "backup": [
            "copybackuptoregion",
            "createcluster",
            "deletebackup",
            "listtags",
            "modifybackupattributes",
            "restorebackup",
            "tagresource",
            "untagresource"
        ],
        "cluster": [
            "createhsm",
            "deletecluster",
            "initializecluster",
            "listtags",
            "modifycluster",
            "tagresource",
            "untagresource"
        ]
    },
    "cloudsearch": {
        "domain": [
            "addtags",
            "buildsuggesters",
            "createdomain",
            "defineanalysisscheme",
            "defineexpression",
            "defineindexfield",
            "definesuggester",
            "deleteanalysisscheme",
            "deletedomain",
            "deleteexpression",
            "deleteindexfield",
            "deletesuggester",
            "describeanalysisschemes",
            "describeavailabilityoptions",
            "describedomainendpointoptions",
            "describedomains",
            "describeexpressions",
            "describeindexfields",
            "describescalingparameters",
            "describeserviceaccesspolicies",
            "describesuggesters",
            "indexdocuments",
            "listdomainnames",
            "listtags",
            "removetags",
            "updateavailabilityoptions",
            "updatedomainendpointoptions",
            "updatescalingparameters",
            "updateserviceaccesspolicies",
            "document",
            "search",
            "suggest"
        ]
    },
    "cloudshell": {
        "": [
            "createenvironment"
        ],
        "Environment": [
            "createsession",
            "deleteenvironment",
            "getenvironmentstatus",
            "getfiledownloadurls",
            "getfileuploadurls",
            "putcredentials",
            "startenvironment",
            "stopenvironment"
        ]
    },
    "cloudtrail": {
        "trail": [
            "addtags",
            "createtrail",
            "deletetrail",
            "geteventselectors",
            "getinsightselectors",
            "gettrailstatus",
            "listtags",
            "puteventselectors",
            "putinsightselectors",
            "removetags",
            "startlogging",
            "stoplogging",
            "updatetrail"
        ],
        "": [
            "describetrails",
            "gettrail",
            "listpublickeys",
            "listtrails",
            "lookupevents"
        ]
    },
    "cloudwatch": {
        "alarm": [
            "deletealarms",
            "describealarmhistory",
            "describealarms",
            "disablealarmactions",
            "enablealarmactions",
            "listtagsforresource",
            "putcompositealarm",
            "putmetricalarm",
            "setalarmstate",
            "tagresource",
            "untagresource"
        ],
        "": [
            "deleteanomalydetector",
            "describealarmsformetric",
            "describeanomalydetectors",
            "describeinsightrules",
            "getmetricdata",
            "getmetricstatistics",
            "getmetricwidgetimage",
            "listdashboards",
            "listmetricstreams",
            "listmetrics",
            "scenario: cloudwatch-alarm",
            "scenario: cloudwatch-insightrule",
            "putanomalydetector",
            "putcompositealarm",
            "putinsightrule",
            "putmetricalarm",
            "putmetricdata",
            "tagresource",
            "scenario: cloudwatch-alarm",
            "scenario: cloudwatch-insightrule",
            "untagresource",
            "scenario: cloudwatch-alarm",
            "scenario: cloudwatch-insightrule"
        ],
        "dashboard": [
            "deletedashboards",
            "getdashboard",
            "putdashboard"
        ],
        "insight-rule": [
            "deleteinsightrules",
            "disableinsightrules",
            "enableinsightrules",
            "getinsightrulereport",
            "listtagsforresource",
            "putinsightrule",
            "tagresource",
            "untagresource"
        ],
        "metric-stream": [
            "deletemetricstream",
            "getmetricstream",
            "putmetricstream",
            "startmetricstreams",
            "stopmetricstreams"
        ]
    },
    "applicationinsights": {
        "": [
            "createapplication",
            "createcomponent",
            "createlogpattern",
            "deleteapplication",
            "deletecomponent",
            "deletelogpattern",
            "describeapplication",
            "describecomponent",
            "describecomponentconfiguration",
            "describecomponentconfigurationrecommendation",
            "describelogpattern",
            "describeobservation",
            "describeproblem",
            "describeproblemobservations",
            "listapplications",
            "listcomponents",
            "listconfigurationhistory",
            "listlogpatternsets",
            "listlogpatterns",
            "listproblems",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateapplication",
            "updatecomponent",
            "updatecomponentconfiguration",
            "updatelogpattern"
        ]
    },
    "logs": {
        "log-group": [
            "associatekmskey",
            "createexporttask",
            "createloggroup",
            "createlogstream",
            "deleteloggroup",
            "deletemetricfilter",
            "deleteretentionpolicy",
            "deletesubscriptionfilter",
            "describeloggroups",
            "describelogstreams",
            "describemetricfilters",
            "describesubscriptionfilters",
            "disassociatekmskey",
            "filterlogevents",
            "getloggroupfields",
            "listtagsloggroup",
            "putmetricfilter",
            "putretentionpolicy",
            "putsubscriptionfilter",
            "startquery",
            "tagloggroup",
            "untagloggroup"
        ],
        "": [
            "cancelexporttask",
            "createlogdelivery",
            "deletedestination",
            "deletelogdelivery",
            "deletequerydefinition",
            "deleteresourcepolicy",
            "describedestinations",
            "describeexporttasks",
            "describequeries",
            "describequerydefinitions",
            "describeresourcepolicies",
            "getlogdelivery",
            "getlogrecord",
            "getqueryresults",
            "listlogdeliveries",
            "putdestination",
            "putdestinationpolicy",
            "putquerydefinition",
            "putresourcepolicy",
            "stopquery",
            "testmetricfilter",
            "updatelogdelivery"
        ],
        "log-stream": [
            "deletelogstream",
            "getlogevents",
            "putlogevents"
        ]
    },
    "synthetics": {
        "": [
            "createcanary",
            "describecanaries",
            "describecanarieslastrun",
            "describeruntimeversions"
        ],
        "canary": [
            "deletecanary",
            "getcanary",
            "getcanaryruns",
            "listtagsforresource",
            "startcanary",
            "stopcanary",
            "tagresource",
            "untagresource",
            "updatecanary"
        ]
    },
    "codeartifact": {
        "repository": [
            "associateexternalconnection",
            "associatewithdownstreamrepository",
            "copypackageversions",
            "deleterepository",
            "deleterepositorypermissionspolicy",
            "describerepository",
            "disassociateexternalconnection",
            "getrepositoryendpoint",
            "getrepositorypermissionspolicy",
            "listpackages",
            "listtagsforresource",
            "putrepositorypermissionspolicy",
            "readfromrepository",
            "tagresource",
            "untagresource",
            "updaterepository"
        ],
        "package": [
            "copypackageversions",
            "deletepackageversions",
            "describepackageversion",
            "disposepackageversions",
            "getpackageversionasset",
            "getpackageversionreadme",
            "listpackageversionassets",
            "listpackageversiondependencies",
            "listpackageversions",
            "publishpackageversion",
            "putpackagemetadata",
            "updatepackageversionsstatus"
        ],
        "": [
            "createdomain",
            "createrepository",
            "listdomains",
            "listrepositories",
            "tagresource",
            "untagresource"
        ],
        "domain": [
            "deletedomain",
            "deletedomainpermissionspolicy",
            "describedomain",
            "getauthorizationtoken",
            "getdomainpermissionspolicy",
            "listrepositoriesindomain",
            "listtagsforresource",
            "putdomainpermissionspolicy",
            "tagresource",
            "untagresource"
        ]
    },
    "codebuild": {
        "project": [
            "batchdeletebuilds",
            "batchgetbuildbatches",
            "batchgetbuilds",
            "batchgetprojects",
            "createproject",
            "createwebhook",
            "deletebuildbatch",
            "deleteproject",
            "deleteresourcepolicy",
            "deletewebhook",
            "getresourcepolicy",
            "invalidateprojectcache",
            "listbuildbatchesforproject",
            "listbuildsforproject",
            "putresourcepolicy",
            "retrybuild",
            "retrybuildbatch",
            "startbuild",
            "startbuildbatch",
            "stopbuild",
            "stopbuildbatch",
            "updateproject",
            "updatewebhook"
        ],
        "report-group": [
            "batchgetreportgroups",
            "batchgetreports",
            "batchputcodecoverages",
            "batchputtestcases",
            "createreport",
            "createreportgroup",
            "deletereport",
            "deletereportgroup",
            "deleteresourcepolicy",
            "describecodecoverages",
            "describetestcases",
            "getreportgrouptrend",
            "getresourcepolicy",
            "listreportsforreportgroup",
            "putresourcepolicy",
            "updatereport",
            "updatereportgroup"
        ],
        "": [
            "createproject",
            "createreportgroup",
            "deleteoauthtoken",
            "deletesourcecredentials",
            "importsourcecredentials",
            "listbuildbatches",
            "listbuilds",
            "listconnectedoauthaccounts",
            "listcuratedenvironmentimages",
            "listprojects",
            "listreportgroups",
            "listreports",
            "listrepositories",
            "listsharedprojects",
            "listsharedreportgroups",
            "listsourcecredentials",
            "persistoauthtoken",
            "updateproject",
            "updatereportgroup"
        ]
    },
    "codecommit": {
        "repository": [
            "associateapprovalruletemplatewithrepository",
            "batchassociateapprovalruletemplatewithrepositories",
            "batchdescribemergeconflicts",
            "batchdisassociateapprovalruletemplatefromrepositories",
            "batchgetcommits",
            "batchgetpullrequests",
            "batchgetrepositories",
            "canceluploadarchive",
            "createbranch",
            "createcommit",
            "createpullrequest",
            "createpullrequestapprovalrule",
            "createrepository",
            "createunreferencedmergecommit",
            "deletebranch",
            "deletecommentcontent",
            "deletefile",
            "deletepullrequestapprovalrule",
            "deleterepository",
            "describemergeconflicts",
            "describepullrequestevents",
            "disassociateapprovalruletemplatefromrepository",
            "evaluatepullrequestapprovalrules",
            "getblob",
            "getbranch",
            "getcomment",
            "getcommentreactions",
            "getcommentsforcomparedcommit",
            "getcommentsforpullrequest",
            "getcommit",
            "getcommithistory",
            "getcommitsfrommergebase",
            "getdifferences",
            "getfile",
            "getfolder",
            "getmergecommit",
            "getmergeconflicts",
            "getmergeoptions",
            "getobjectidentifier",
            "getpullrequest",
            "getpullrequestapprovalstates",
            "getpullrequestoverridestate",
            "getreferences",
            "getrepository",
            "getrepositorytriggers",
            "gettree",
            "getuploadarchivestatus",
            "gitpull",
            "gitpush",
            "listassociatedapprovalruletemplatesforrepository",
            "listbranches",
            "listpullrequests",
            "listtagsforresource",
            "mergebranchesbyfastforward",
            "mergebranchesbysquash",
            "mergebranchesbythreeway",
            "mergepullrequestbyfastforward",
            "mergepullrequestbysquash",
            "mergepullrequestbythreeway",
            "overridepullrequestapprovalrules",
            "postcommentforcomparedcommit",
            "postcommentforpullrequest",
            "postcommentreply",
            "putcommentreaction",
            "putfile",
            "putrepositorytriggers",
            "tagresource",
            "testrepositorytriggers",
            "untagresource",
            "updatecomment",
            "updatedefaultbranch",
            "updatepullrequestapprovalrulecontent",
            "updatepullrequestapprovalstate",
            "updatepullrequestdescription",
            "updatepullrequeststatus",
            "updatepullrequesttitle",
            "updaterepositorydescription",
            "updaterepositoryname",
            "uploadarchive"
        ],
        "": [
            "createapprovalruletemplate",
            "createbranch",
            "createcommit",
            "createrepository",
            "createunreferencedmergecommit",
            "deleteapprovalruletemplate",
            "deletebranch",
            "deletefile",
            "getapprovalruletemplate",
            "getmergecommit",
            "gitpush",
            "listapprovalruletemplates",
            "listrepositories",
            "listrepositoriesforapprovalruletemplate",
            "mergebranchesbyfastforward",
            "mergebranchesbysquash",
            "mergebranchesbythreeway",
            "mergepullrequestbyfastforward",
            "mergepullrequestbysquash",
            "mergepullrequestbythreeway",
            "putfile",
            "tagresource",
            "untagresource",
            "updateapprovalruletemplatecontent",
            "updateapprovalruletemplatedescription",
            "updateapprovalruletemplatename"
        ]
    },
    "codedeploy": {
        "instance": [
            "addtagstoonpremisesinstances",
            "batchgetonpremisesinstances",
            "deregisteronpremisesinstance",
            "getonpremisesinstance",
            "registeronpremisesinstance",
            "removetagsfromonpremisesinstances"
        ],
        "application": [
            "batchgetapplicationrevisions",
            "batchgetapplications",
            "createapplication",
            "deleteapplication",
            "getapplication",
            "getapplicationrevision",
            "listapplicationrevisions",
            "listdeploymentgroups",
            "listtagsforresource",
            "registerapplicationrevision",
            "tagresource",
            "untagresource",
            "updateapplication"
        ],
        "deploymentgroup": [
            "batchgetdeploymentgroups",
            "batchgetdeploymentinstances",
            "batchgetdeployments",
            "createdeployment",
            "createdeploymentgroup",
            "deletedeploymentgroup",
            "getdeployment",
            "getdeploymentgroup",
            "getdeploymentinstance",
            "listdeploymentinstances",
            "listdeployments",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedeploymentgroup"
        ],
        "": [
            "batchgetdeploymenttargets",
            "continuedeployment",
            "createapplication",
            "createcloudformationdeployment",
            "createdeploymentgroup",
            "deletegithubaccounttoken",
            "deleteresourcesbyexternalid",
            "getdeploymenttarget",
            "listapplications",
            "listdeploymentconfigs",
            "listdeploymenttargets",
            "listgithubaccounttokennames",
            "listonpremisesinstances",
            "putlifecycleeventhookexecutionstatus",
            "skipwaittimeforinstancetermination",
            "stopdeployment",
            "tagresource",
            "untagresource"
        ],
        "deploymentconfig": [
            "createdeploymentconfig",
            "deletedeploymentconfig",
            "getdeploymentconfig"
        ]
    },
    "codeguru": {
        "": [
            "getcodegurufreetrialsummary"
        ]
    },
    "codeguru-profiler": {
        "ProfilingGroup": [
            "addnotificationchannels",
            "batchgetframemetricdata",
            "configureagent",
            "deleteprofilinggroup",
            "describeprofilinggroup",
            "getnotificationconfiguration",
            "getpolicy",
            "getprofile",
            "getrecommendations",
            "listfindingsreports",
            "listprofiletimes",
            "listtagsforresource",
            "postagentprofile",
            "putpermission",
            "removenotificationchannel",
            "removepermission",
            "submitfeedback",
            "tagresource",
            "untagresource",
            "updateprofilinggroup"
        ],
        "": [
            "createprofilinggroup",
            "getfindingsreportaccountsummary",
            "listprofilinggroups",
            "tagresource",
            "untagresource"
        ]
    },
    "codeguru-reviewer": {
        "association": [
            "associaterepository",
            "createcodereview",
            "describecodereview",
            "describerecommendationfeedback",
            "describerepositoryassociation",
            "disassociaterepository",
            "listrecommendationfeedback",
            "listrecommendations",
            "listtagsforresource",
            "putrecommendationfeedback",
            "tagresource",
            "untagresource"
        ],
        "connection": [
            "associaterepository"
        ],
        "repository": [
            "associaterepository"
        ],
        "": [
            "createconnectiontoken",
            "getmetricsdata",
            "listcodereviews",
            "listrepositoryassociations",
            "listthirdpartyrepositories"
        ]
    },
    "codepipeline": {
        "": [
            "acknowledgejob",
            "acknowledgethirdpartyjob",
            "createcustomactiontype",
            "createpipeline",
            "getjobdetails",
            "getthirdpartyjobdetails",
            "listactiontypes",
            "listpipelines",
            "pollforthirdpartyjobs",
            "putjobfailureresult",
            "putjobsuccessresult",
            "putthirdpartyjobfailureresult",
            "putthirdpartyjobsuccessresult",
            "putwebhook",
            "tagresource",
            "untagresource"
        ],
        "actiontype": [
            "createcustomactiontype",
            "deletecustomactiontype",
            "listtagsforresource",
            "pollforjobs",
            "tagresource",
            "untagresource"
        ],
        "pipeline": [
            "createpipeline",
            "deletepipeline",
            "getpipeline",
            "getpipelineexecution",
            "getpipelinestate",
            "listactionexecutions",
            "listpipelineexecutions",
            "listtagsforresource",
            "putwebhook",
            "startpipelineexecution",
            "stoppipelineexecution",
            "tagresource",
            "untagresource",
            "updatepipeline"
        ],
        "webhook": [
            "deletewebhook",
            "deregisterwebhookwiththirdparty",
            "listtagsforresource",
            "listwebhooks",
            "putwebhook",
            "registerwebhookwiththirdparty",
            "tagresource",
            "untagresource"
        ],
        "stage": [
            "disablestagetransition",
            "enablestagetransition",
            "retrystageexecution"
        ],
        "action": [
            "putactionrevision",
            "putapprovalresult"
        ]
    },
    "codestar": {
        "project": [
            "associateteammember",
            "deleteextendedaccess",
            "deleteproject",
            "describeproject",
            "disassociateteammember",
            "getextendedaccess",
            "listresources",
            "listtagsforproject",
            "listteammembers",
            "putextendedaccess",
            "tagproject",
            "untagproject",
            "updateproject",
            "updateteammember"
        ],
        "": [
            "createproject",
            "describeuserprofile",
            "listprojects",
            "listuserprofiles",
            "tagproject",
            "untagproject"
        ],
        "user": [
            "createuserprofile",
            "deleteuserprofile",
            "updateuserprofile"
        ]
    },
    "codestar-connections": {
        "": [
            "createconnection",
            "createhost",
            "getindividualaccesstoken",
            "getinstallationurl",
            "listconnections",
            "listhosts",
            "listinstallationtargets",
            "passconnection",
            "registerappcode",
            "startappregistrationhandshake",
            "startoauthhandshake",
            "tagresource",
            "untagresource",
            "updateconnectioninstallation",
            "useconnection"
        ],
        "Connection": [
            "deleteconnection",
            "getconnection",
            "listtagsforresource",
            "passconnection",
            "tagresource",
            "untagresource",
            "updateconnectioninstallation",
            "useconnection"
        ],
        "Host": [
            "deletehost",
            "gethost",
            "updatehost"
        ]
    },
    "codestar-notifications": {
        "notificationrule": [
            "createnotificationrule",
            "deletenotificationrule",
            "describenotificationrule",
            "listtagsforresource",
            "subscribe",
            "tagresource",
            "unsubscribe",
            "untagresource",
            "updatenotificationrule"
        ],
        "": [
            "createnotificationrule",
            "deletenotificationrule",
            "deletetarget",
            "describenotificationrule",
            "listeventtypes",
            "listnotificationrules",
            "listtagsforresource",
            "listtargets",
            "subscribe",
            "tagresource",
            "unsubscribe",
            "untagresource",
            "updatenotificationrule"
        ]
    },
    "cognito-identity": {
        "": [
            "createidentitypool",
            "deleteidentities",
            "describeidentity",
            "getcredentialsforidentity",
            "getid",
            "getopenidtoken",
            "listidentitypools",
            "setidentitypoolroles",
            "setprincipaltagattributemap",
            "tagresource",
            "unlinkidentity",
            "untagresource"
        ],
        "identitypool": [
            "deleteidentitypool",
            "describeidentitypool",
            "getidentitypoolroles",
            "getopenidtokenfordeveloperidentity",
            "getprincipaltagattributemap",
            "listidentities",
            "listtagsforresource",
            "lookupdeveloperidentity",
            "mergedeveloperidentities",
            "tagresource",
            "unlinkdeveloperidentity",
            "untagresource",
            "updateidentitypool"
        ]
    },
    "cognito-sync": {
        "identitypool": [
            "bulkpublish",
            "describeidentitypoolusage",
            "getbulkpublishdetails",
            "getcognitoevents",
            "getidentitypoolconfiguration",
            "listidentitypoolusage",
            "setcognitoevents",
            "setidentitypoolconfiguration"
        ],
        "dataset": [
            "deletedataset",
            "describedataset",
            "listdatasets",
            "listrecords",
            "setdatasetconfiguration",
            "subscribetodataset",
            "unsubscribefromdataset",
            "updaterecords"
        ],
        "identity": [
            "describeidentityusage",
            "registerdevice"
        ],
        "": [
            "queryrecords"
        ]
    },
    "cognito-idp": {
        "userpool": [
            "addcustomattributes",
            "adminaddusertogroup",
            "adminconfirmsignup",
            "admincreateuser",
            "admindeleteuser",
            "admindeleteuserattributes",
            "admindisableproviderforuser",
            "admindisableuser",
            "adminenableuser",
            "adminforgetdevice",
            "admingetdevice",
            "admingetuser",
            "admininitiateauth",
            "adminlinkproviderforuser",
            "adminlistdevices",
            "adminlistgroupsforuser",
            "adminlistuserauthevents",
            "adminremoveuserfromgroup",
            "adminresetuserpassword",
            "adminrespondtoauthchallenge",
            "adminsetusermfapreference",
            "adminsetuserpassword",
            "adminsetusersettings",
            "adminupdateautheventfeedback",
            "adminupdatedevicestatus",
            "adminupdateuserattributes",
            "adminuserglobalsignout",
            "creategroup",
            "createidentityprovider",
            "createresourceserver",
            "createuserimportjob",
            "createuserpoolclient",
            "createuserpooldomain",
            "deletegroup",
            "deleteidentityprovider",
            "deleteresourceserver",
            "deleteuserpool",
            "deleteuserpoolclient",
            "deleteuserpooldomain",
            "describeidentityprovider",
            "describeresourceserver",
            "describeriskconfiguration",
            "describeuserimportjob",
            "describeuserpool",
            "describeuserpoolclient",
            "getcsvheader",
            "getgroup",
            "getidentityproviderbyidentifier",
            "getsigningcertificate",
            "getuicustomization",
            "getuserpoolmfaconfig",
            "listgroups",
            "listidentityproviders",
            "listresourceservers",
            "listtagsforresource",
            "listuserimportjobs",
            "listuserpoolclients",
            "listusers",
            "listusersingroup",
            "setriskconfiguration",
            "setuicustomization",
            "setuserpoolmfaconfig",
            "startuserimportjob",
            "stopuserimportjob",
            "tagresource",
            "untagresource",
            "updateautheventfeedback",
            "updategroup",
            "updateidentityprovider",
            "updateresourceserver",
            "updateuserpool",
            "updateuserpoolclient",
            "updateuserpooldomain"
        ],
        "": [
            "associatesoftwaretoken",
            "changepassword",
            "confirmdevice",
            "confirmforgotpassword",
            "confirmsignup",
            "createuserpool",
            "deleteuser",
            "deleteuserattributes",
            "describeuserpooldomain",
            "forgetdevice",
            "forgotpassword",
            "getdevice",
            "getuser",
            "getuserattributeverificationcode",
            "globalsignout",
            "initiateauth",
            "listdevices",
            "listuserpools",
            "resendconfirmationcode",
            "respondtoauthchallenge",
            "setusermfapreference",
            "setusersettings",
            "signup",
            "tagresource",
            "untagresource",
            "updatedevicestatus",
            "updateuserattributes",
            "updateuserpool",
            "verifysoftwaretoken",
            "verifyuserattribute"
        ]
    },
    "comprehend": {
        "": [
            "batchdetectdominantlanguage",
            "batchdetectentities",
            "batchdetectkeyphrases",
            "batchdetectsentiment",
            "batchdetectsyntax",
            "containspiientities",
            "createdocumentclassifier",
            "createendpoint",
            "createentityrecognizer",
            "describedocumentclassificationjob",
            "describedominantlanguagedetectionjob",
            "describeentitiesdetectionjob",
            "describeeventsdetectionjob",
            "describekeyphrasesdetectionjob",
            "describepiientitiesdetectionjob",
            "describesentimentdetectionjob",
            "describetopicsdetectionjob",
            "detectdominantlanguage",
            "detectkeyphrases",
            "detectpiientities",
            "detectsentiment",
            "detectsyntax",
            "listdocumentclassificationjobs",
            "listdocumentclassifiers",
            "listdominantlanguagedetectionjobs",
            "listendpoints",
            "listentitiesdetectionjobs",
            "listentityrecognizers",
            "listeventsdetectionjobs",
            "listkeyphrasesdetectionjobs",
            "listpiientitiesdetectionjobs",
            "listsentimentdetectionjobs",
            "listtopicsdetectionjobs",
            "startdocumentclassificationjob",
            "startdominantlanguagedetectionjob",
            "startentitiesdetectionjob",
            "starteventsdetectionjob",
            "startkeyphrasesdetectionjob",
            "startpiientitiesdetectionjob",
            "startsentimentdetectionjob",
            "starttopicsdetectionjob",
            "stopdominantlanguagedetectionjob",
            "stopentitiesdetectionjob",
            "stopeventsdetectionjob",
            "stopkeyphrasesdetectionjob",
            "stoppiientitiesdetectionjob",
            "stopsentimentdetectionjob",
            "tagresource",
            "untagresource"
        ],
        "document-classifier-endpoint": [
            "classifydocument",
            "deleteendpoint",
            "describeendpoint",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateendpoint"
        ],
        "document-classifier": [
            "createendpoint",
            "deletedocumentclassifier",
            "describedocumentclassifier",
            "listtagsforresource",
            "startdocumentclassificationjob",
            "stoptrainingdocumentclassifier",
            "tagresource",
            "untagresource"
        ],
        "entity-recognizer": [
            "createendpoint",
            "deleteentityrecognizer",
            "describeentityrecognizer",
            "listtagsforresource",
            "startentitiesdetectionjob",
            "stoptrainingentityrecognizer",
            "tagresource",
            "untagresource"
        ],
        "entity-recognizer-endpoint": [
            "deleteendpoint",
            "describeendpoint",
            "detectentities",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateendpoint"
        ]
    },
    "comprehendmedical": {
        "": [
            "describeentitiesdetectionv2job",
            "describeicd10cminferencejob",
            "describephidetectionjob",
            "describerxnorminferencejob",
            "detectentitiesv2",
            "detectphi",
            "infericd10cm",
            "inferrxnorm",
            "listentitiesdetectionv2jobs",
            "listicd10cminferencejobs",
            "listphidetectionjobs",
            "listrxnorminferencejobs",
            "startentitiesdetectionv2job",
            "starticd10cminferencejob",
            "startphidetectionjob",
            "startrxnorminferencejob",
            "stopentitiesdetectionv2job",
            "stopicd10cminferencejob",
            "stopphidetectionjob",
            "stoprxnorminferencejob"
        ]
    },
    "compute-optimizer": {
        "": [
            "describerecommendationexportjobs",
            "exportautoscalinggrouprecommendations",
            "exportec2instancerecommendations",
            "getautoscalinggrouprecommendations",
            "getebsvolumerecommendations",
            "getec2instancerecommendations",
            "getec2recommendationprojectedmetrics",
            "getenrollmentstatus",
            "getlambdafunctionrecommendations",
            "getrecommendationsummaries",
            "updateenrollmentstatus"
        ]
    },
    "config": {
        "ConfigurationAggregator": [
            "batchgetaggregateresourceconfig",
            "deleteconfigurationaggregator",
            "describeaggregatecompliancebyconfigrules",
            "describeaggregatecompliancebyconformancepacks",
            "describeconfigurationaggregatorsourcesstatus",
            "getaggregatecompliancedetailsbyconfigrule",
            "getaggregateconfigrulecompliancesummary",
            "getaggregateconformancepackcompliancesummary",
            "getaggregatediscoveredresourcecounts",
            "getaggregateresourceconfig",
            "listaggregatediscoveredresources",
            "listtagsforresource",
            "putconfigurationaggregator",
            "tagresource",
            "untagresource"
        ],
        "": [
            "batchgetresourceconfig",
            "deleteconfigurationrecorder",
            "deleteconformancepack",
            "deletedeliverychannel",
            "deleteorganizationconfigrule",
            "deleteorganizationconformancepack",
            "deletependingaggregationrequest",
            "deleteremediationexceptions",
            "deleteresourceconfig",
            "deleteretentionconfiguration",
            "deliverconfigsnapshot",
            "describeaggregationauthorizations",
            "describecompliancebyresource",
            "describeconfigurationaggregators",
            "describeconfigurationrecorderstatus",
            "describeconfigurationrecorders",
            "describeconformancepackcompliance",
            "describeconformancepackstatus",
            "describeconformancepacks",
            "describedeliverychannelstatus",
            "describedeliverychannels",
            "describeorganizationconfigrulestatuses",
            "describeorganizationconfigrules",
            "describeorganizationconformancepackstatuses",
            "describeorganizationconformancepacks",
            "describependingaggregationrequests",
            "describeremediationexceptions",
            "describeretentionconfigurations",
            "getcompliancedetailsbyresource",
            "getcompliancesummarybyconfigrule",
            "getcompliancesummarybyresourcetype",
            "getconformancepackcompliancedetails",
            "getconformancepackcompliancesummary",
            "getdiscoveredresourcecounts",
            "getorganizationconfigruledetailedstatus",
            "getorganizationconformancepackdetailedstatus",
            "getresourceconfighistory",
            "listdiscoveredresources",
            "putaggregationauthorization",
            "putconfigrule",
            "putconfigurationaggregator",
            "putconfigurationrecorder",
            "putconformancepack",
            "putdeliverychannel",
            "putevaluations",
            "putexternalevaluation",
            "putorganizationconfigrule",
            "putorganizationconformancepack",
            "putremediationexceptions",
            "putresourceconfig",
            "putretentionconfiguration",
            "selectaggregateresourceconfig",
            "selectresourceconfig",
            "startconfigurationrecorder",
            "stopconfigurationrecorder",
            "tagresource",
            "untagresource"
        ],
        "AggregationAuthorization": [
            "deleteaggregationauthorization",
            "listtagsforresource",
            "putaggregationauthorization",
            "tagresource",
            "untagresource"
        ],
        "ConfigRule": [
            "deleteconfigrule",
            "deleteevaluationresults",
            "describecompliancebyconfigrule",
            "describeconfigruleevaluationstatus",
            "describeconfigrules",
            "getcompliancedetailsbyconfigrule",
            "listtagsforresource",
            "putconfigrule",
            "startconfigrulesevaluation",
            "tagresource",
            "untagresource"
        ],
        "RemediationConfiguration": [
            "deleteremediationconfiguration",
            "describeremediationconfigurations",
            "describeremediationexecutionstatus",
            "putremediationconfigurations",
            "startremediationexecution"
        ],
        "StoredQuery": [
            "deletestoredquery",
            "getstoredquery",
            "liststoredqueries",
            "putstoredquery"
        ],
        "ConformancePack": [
            "tagresource",
            "untagresource"
        ]
    },
    "connect": {
        "instance": [
            "associateapprovedorigin",
            "associatecustomerprofilesdomain",
            "associateinstancestorageconfig",
            "associatelambdafunction",
            "associatelexbot",
            "associatesecuritykey",
            "createintegrationassociation",
            "createusecase",
            "deleteinstance",
            "deleteintegrationassociation",
            "deleteusecase",
            "describeinstance",
            "describeinstanceattribute",
            "describeinstancestorageconfig",
            "describeuserhierarchystructure",
            "disassociateapprovedorigin",
            "disassociatecustomerprofilesdomain",
            "disassociateinstancestorageconfig",
            "disassociatelambdafunction",
            "disassociatelexbot",
            "disassociatesecuritykey",
            "getfederationtoken",
            "getfederationtokens",
            "listapprovedorigins",
            "listcontactflows",
            "listhoursofoperations",
            "listinstanceattributes",
            "listinstancestorageconfigs",
            "listintegrationassociations",
            "listlambdafunctions",
            "listlexbots",
            "listphonenumbers",
            "listprompts",
            "listqueues",
            "listquickconnects",
            "listroutingprofiles",
            "listsecuritykeys",
            "listsecurityprofiles",
            "listusecases",
            "listuserhierarchygroups",
            "listusers",
            "updateinstanceattribute",
            "updateinstancestorageconfig",
            "updateuserhierarchystructure"
        ],
        "": [
            "associateinstancestorageconfig",
            "associatequeuequickconnects",
            "associateroutingprofilequeues",
            "createcontactflow",
            "createinstance",
            "createqueue",
            "createquickconnect",
            "createroutingprofile",
            "createuser",
            "deletequickconnect",
            "deleteuser",
            "describecontactflow",
            "describeinstanceattribute",
            "describeinstancestorageconfig",
            "describequeue",
            "describequickconnect",
            "describeroutingprofile",
            "describeuser",
            "disassociateinstancestorageconfig",
            "disassociatequeuequickconnects",
            "disassociateroutingprofilequeues",
            "getfederationtoken",
            "listinstances",
            "listqueuequickconnects",
            "listroutingprofilequeues",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatecontactflowcontent",
            "updatecontactflowname",
            "updateinstanceattribute",
            "updateinstancestorageconfig",
            "updatequeuehoursofoperation",
            "updatequeuemaxcontacts",
            "updatequeuename",
            "updatequeueoutboundcallerconfig",
            "updatequeuestatus",
            "updatequickconnectconfig",
            "updatequickconnectname",
            "updateroutingprofileconcurrency",
            "updateroutingprofiledefaultoutboundqueue",
            "updateroutingprofilename",
            "updateroutingprofilequeues",
            "updateuserhierarchy",
            "updateuseridentityinfo",
            "updateuserphoneconfig",
            "updateuserroutingprofile",
            "updateusersecurityprofiles"
        ],
        "queue": [
            "associatequeuequickconnects",
            "associateroutingprofilequeues",
            "createqueue",
            "createquickconnect",
            "createroutingprofile",
            "describequeue",
            "disassociatequeuequickconnects",
            "getcurrentmetricdata",
            "getmetricdata",
            "listqueuequickconnects",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatequeuehoursofoperation",
            "updatequeuemaxcontacts",
            "updatequeuename",
            "updatequeueoutboundcallerconfig",
            "updatequeuestatus",
            "updatequickconnectconfig",
            "updateroutingprofiledefaultoutboundqueue"
        ],
        "quick-connect": [
            "associatequeuequickconnects",
            "createqueue",
            "createquickconnect",
            "deletequickconnect",
            "describequickconnect",
            "disassociatequeuequickconnects",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatequickconnectconfig",
            "updatequickconnectname"
        ],
        "routing-profile": [
            "associateroutingprofilequeues",
            "createroutingprofile",
            "createuser",
            "describeroutingprofile",
            "disassociateroutingprofilequeues",
            "listroutingprofilequeues",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateroutingprofileconcurrency",
            "updateroutingprofiledefaultoutboundqueue",
            "updateroutingprofilename",
            "updateroutingprofilequeues",
            "updateuserroutingprofile"
        ],
        "contact-flow": [
            "createcontactflow",
            "createqueue",
            "createquickconnect",
            "describecontactflow",
            "listtagsforresource",
            "startchatcontact",
            "starttaskcontact",
            "tagresource",
            "untagresource",
            "updatecontactflowcontent",
            "updatecontactflowname",
            "updatequeueoutboundcallerconfig",
            "updatequickconnectconfig"
        ],
        "integration-association": [
            "createintegrationassociation",
            "createusecase",
            "deleteintegrationassociation"
        ],
        "hours-of-operation": [
            "createqueue",
            "describehoursofoperation",
            "updatequeuehoursofoperation"
        ],
        "phone-number": [
            "createqueue",
            "updatequeueoutboundcallerconfig"
        ],
        "user": [
            "createquickconnect",
            "createuser",
            "deleteuser",
            "describeuser",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatequickconnectconfig",
            "updateuserhierarchy",
            "updateuseridentityinfo",
            "updateuserphoneconfig",
            "updateuserroutingprofile",
            "updateusersecurityprofiles"
        ],
        "use-case": [
            "createusecase",
            "deleteusecase"
        ],
        "security-profile": [
            "createuser",
            "updateusersecurityprofiles"
        ],
        "hierarchy-group": [
            "createuser",
            "createuserhierarchygroup",
            "deleteuserhierarchygroup",
            "describeuserhierarchygroup",
            "updateuserhierarchy",
            "updateuserhierarchygroupname"
        ],
        "contact": [
            "getcontactattributes",
            "listrealtimecontactanalysissegments",
            "resumecontactrecording",
            "startcontactrecording",
            "startoutboundvoicecontact",
            "stopcontact",
            "stopcontactrecording",
            "suspendcontactrecording",
            "updatecontactattributes"
        ]
    },
    "profile": {
        "domains": [
            "addprofilekey",
            "createprofile",
            "deletedomain",
            "deleteintegration",
            "deleteprofile",
            "deleteprofilekey",
            "deleteprofileobject",
            "deleteprofileobjecttype",
            "getdomain",
            "getintegration",
            "getprofileobjecttype",
            "listintegrations",
            "listprofileobjecttypes",
            "listprofileobjects",
            "putintegration",
            "putprofileobject",
            "putprofileobjecttype",
            "searchprofiles",
            "updatedomain",
            "updateprofile"
        ],
        "": [
            "createdomain",
            "getprofileobjecttypetemplate",
            "listaccountintegrations",
            "listdomains",
            "listprofileobjecttypetemplates",
            "listtagsforresource",
            "putintegration",
            "putprofileobjecttype",
            "tagresource",
            "untagresource"
        ],
        "integrations": [
            "deleteintegration",
            "getintegration",
            "putintegration"
        ],
        "object-types": [
            "deleteprofileobject",
            "deleteprofileobjecttype",
            "getprofileobjecttype",
            "listprofileobjects",
            "putprofileobject",
            "putprofileobjecttype"
        ]
    },
    "awsconnector": {
        "": [
            "getconnectorhealth",
            "registerconnector",
            "validateconnectorid"
        ]
    },
    "controltower": {
        "": [
            "createmanagedaccount",
            "deregistermanagedaccount",
            "deregisterorganizationalunit",
            "describeaccountfactoryconfig",
            "describecoreservice",
            "describeguardrail",
            "describeguardrailfortarget",
            "describemanagedaccount",
            "describemanagedorganizationalunit",
            "describesinglesignon",
            "disableguardrail",
            "enableguardrail",
            "getavailableupdates",
            "getguardrailcompliancestatus",
            "gethomeregion",
            "getlandingzonestatus",
            "listdirectorygroups",
            "listenabledguardrails",
            "listguardrailviolations",
            "listguardrails",
            "listguardrailsfortarget",
            "listmanagedaccounts",
            "listmanagedaccountsforguardrail",
            "listmanagedaccountsforparent",
            "listmanagedorganizationalunits",
            "listmanagedorganizationalunitsforguardrail",
            "manageorganizationalunit",
            "setuplandingzone",
            "updateaccountfactoryconfig"
        ]
    },
    "cur": {
        "cur": [
            "deletereportdefinition",
            "modifyreportdefinition",
            "putreportdefinition"
        ],
        "": [
            "describereportdefinitions"
        ]
    },
    "ce": {
        "": [
            "createanomalymonitor",
            "createanomalysubscription",
            "createcostcategorydefinition",
            "createnotificationsubscription",
            "createreport",
            "deleteanomalymonitor",
            "deleteanomalysubscription",
            "deletecostcategorydefinition",
            "deletenotificationsubscription",
            "deletereport",
            "describecostcategorydefinition",
            "describenotificationsubscription",
            "describereport",
            "getanomalies",
            "getanomalymonitors",
            "getanomalysubscriptions",
            "getcostandusage",
            "getcostandusagewithresources",
            "getcostcategories",
            "getcostforecast",
            "getdimensionvalues",
            "getpreferences",
            "getreservationcoverage",
            "getreservationpurchaserecommendation",
            "getreservationutilization",
            "getrightsizingrecommendation",
            "getsavingsplanscoverage",
            "getsavingsplanspurchaserecommendation",
            "getsavingsplansutilization",
            "getsavingsplansutilizationdetails",
            "gettags",
            "getusageforecast",
            "listcostcategorydefinitions",
            "provideanomalyfeedback",
            "updateanomalymonitor",
            "updateanomalysubscription",
            "updatecostcategorydefinition",
            "updatenotificationsubscription",
            "updatepreferences",
            "updatereport"
        ]
    },
    "dataexchange": {
        "jobs": [
            "canceljob",
            "createjob",
            "getjob",
            "listjobs",
            "startjob"
        ],
        "": [
            "createasset",
            "createdataset",
            "createrevision",
            "tagresource",
            "untagresource"
        ],
        "assets": [
            "deleteasset",
            "getasset",
            "listrevisionassets",
            "updateasset"
        ],
        "data-sets": [
            "deletedataset",
            "getdataset",
            "listdatasets",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedataset"
        ],
        "revisions": [
            "deleterevision",
            "getrevision",
            "listdatasetrevisions",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updaterevision"
        ]
    },
    "dlm": {
        "": [
            "createlifecyclepolicy",
            "getlifecyclepolicies"
        ],
        "policy": [
            "deletelifecyclepolicy",
            "getlifecyclepolicy",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatelifecyclepolicy"
        ]
    },
    "datapipeline": {
        "": [
            "activatepipeline",
            "addtags",
            "createpipeline",
            "deactivatepipeline",
            "deletepipeline",
            "describeobjects",
            "describepipelines",
            "evaluateexpression",
            "getaccountlimits",
            "getpipelinedefinition",
            "listpipelines",
            "pollfortask",
            "putaccountlimits",
            "putpipelinedefinition",
            "queryobjects",
            "removetags",
            "reporttaskprogress",
            "reporttaskrunnerheartbeat",
            "setstatus",
            "settaskstatus",
            "validatepipelinedefinition"
        ]
    },
    "dms": {
        "Certificate": [
            "addtagstoresource",
            "deletecertificate",
            "listtagsforresource",
            "modifyendpoint",
            "removetagsfromresource"
        ],
        "Endpoint": [
            "addtagstoresource",
            "createreplicationtask",
            "deleteconnection",
            "deleteendpoint",
            "describerefreshschemasstatus",
            "describeschemas",
            "listtagsforresource",
            "modifyendpoint",
            "refreshschemas",
            "removetagsfromresource",
            "testconnection"
        ],
        "EventSubscription": [
            "addtagstoresource",
            "deleteeventsubscription",
            "listtagsforresource",
            "removetagsfromresource"
        ],
        "ReplicationInstance": [
            "addtagstoresource",
            "applypendingmaintenanceaction",
            "createreplicationtask",
            "deleteconnection",
            "deletereplicationinstance",
            "describeapplicableindividualassessments",
            "describereplicationinstancetasklogs",
            "describereplicationtaskassessmentruns",
            "listtagsforresource",
            "modifyreplicationinstance",
            "movereplicationtask",
            "rebootreplicationinstance",
            "refreshschemas",
            "removetagsfromresource",
            "testconnection"
        ],
        "ReplicationSubnetGroup": [
            "addtagstoresource",
            "deletereplicationsubnetgroup",
            "listtagsforresource",
            "removetagsfromresource"
        ],
        "ReplicationTask": [
            "addtagstoresource",
            "deletereplicationtask",
            "describeapplicableindividualassessments",
            "describereplicationtaskassessmentresults",
            "describereplicationtaskassessmentruns",
            "describereplicationtaskindividualassessments",
            "describetablestatistics",
            "listtagsforresource",
            "modifyreplicationtask",
            "movereplicationtask",
            "reloadtables",
            "removetagsfromresource",
            "startreplicationtask",
            "startreplicationtaskassessment",
            "startreplicationtaskassessmentrun",
            "stopreplicationtask"
        ],
        "": [
            "addtagstoresource",
            "createendpoint",
            "createeventsubscription",
            "createreplicationinstance",
            "createreplicationsubnetgroup",
            "createreplicationtask",
            "describeaccountattributes",
            "describecertificates",
            "describeconnections",
            "describeendpointtypes",
            "describeendpoints",
            "describeeventcategories",
            "describeeventsubscriptions",
            "describeevents",
            "describeorderablereplicationinstances",
            "describereplicationinstancetasklogs",
            "describereplicationinstances",
            "describereplicationsubnetgroups",
            "describereplicationtasks",
            "importcertificate",
            "modifyeventsubscription",
            "modifyreplicationsubnetgroup",
            "removetagsfromresource"
        ],
        "ReplicationTaskAssessmentRun": [
            "cancelreplicationtaskassessmentrun",
            "deletereplicationtaskassessmentrun",
            "describereplicationtaskassessmentruns",
            "describereplicationtaskindividualassessments"
        ]
    },
    "dbqms": {
        "": [
            "createfavoritequery",
            "createqueryhistory",
            "createtab",
            "deletefavoritequeries",
            "deletequeryhistory",
            "deletetab",
            "describefavoritequeries",
            "describequeryhistory",
            "describetabs",
            "getquerystring",
            "updatefavoritequery",
            "updatequeryhistory",
            "updatetab"
        ]
    },
    "deepcomposer": {
        "": [
            "associatecoupon",
            "createcomposition",
            "createmodel",
            "getcomposition",
            "getmodel",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "audio": [
            "createaudio"
        ],
        "composition": [
            "createcomposition",
            "deletecomposition",
            "getcomposition",
            "listcompositions",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatecomposition"
        ],
        "model": [
            "createmodel",
            "deletemodel",
            "getmodel",
            "getsamplemodel",
            "listmodels",
            "listsamplemodels",
            "listtagsforresource",
            "listtrainingtopics",
            "tagresource",
            "untagresource",
            "updatemodel"
        ]
    },
    "deeplens": {
        "": [
            "associateserviceroletoaccount",
            "createdevicecertificates",
            "createmodel",
            "createproject",
            "getassociatedresources",
            "getdeploymentstatus",
            "importprojectfromtemplate",
            "listdeployments",
            "listdevices",
            "listmodels",
            "listprojects",
            "registerdevice"
        ],
        "device": [
            "batchgetdevice",
            "deployproject",
            "deregisterdevice",
            "getdevice",
            "removeproject"
        ],
        "model": [
            "batchgetmodel",
            "deletemodel",
            "getmodel"
        ],
        "project": [
            "batchgetproject",
            "deleteproject",
            "deployproject",
            "getproject",
            "updateproject"
        ]
    },
    "deepracer": {
        "reinforcement_learning_model": [
            "clonereinforcementlearningmodel",
            "createleaderboardsubmission",
            "deletemodel",
            "getmodel",
            "listevaluations",
            "listtrainingjobs",
            "startevaluation",
            "stoptrainingreinforcementlearningmodel"
        ],
        "track": [
            "clonereinforcementlearningmodel",
            "createreinforcementlearningmodel",
            "gettrack",
            "startevaluation"
        ],
        "": [
            "createaccountresources",
            "deleteaccountresources",
            "getaccountresources",
            "getalias",
            "listleaderboards",
            "listmodels",
            "listtracks",
            "setalias",
            "testrewardfunction"
        ],
        "leaderboard": [
            "createleaderboardsubmission",
            "getlatestusersubmission",
            "getleaderboard",
            "getrankedusersubmission",
            "listleaderboardsubmissions"
        ],
        "evaluation_job": [
            "getevaluation",
            "stopevaluation"
        ],
        "training_job": [
            "gettrainingjob"
        ]
    },
    "detective": {
        "Graph": [
            "acceptinvitation",
            "createmembers",
            "deletegraph",
            "deletemembers",
            "disassociatemembership",
            "getfreetrialeligibility",
            "getgraphingeststate",
            "getmembers",
            "getusageinformation",
            "listmembers",
            "listtagsforresource",
            "rejectinvitation",
            "searchgraph",
            "startmonitoringmember",
            "tagresource",
            "untagresource"
        ],
        "": [
            "creategraph",
            "getpricinginformation",
            "listgraphs",
            "listinvitations",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ]
    },
    "devicefarm": {
        "project": [
            "createdevicepool",
            "createnetworkprofile",
            "createremoteaccesssession",
            "createupload",
            "deleteproject",
            "getproject",
            "listdevicepools",
            "listnetworkprofiles",
            "listremoteaccesssessions",
            "listruns",
            "listtagsforresource",
            "listuploads",
            "schedulerun",
            "tagresource",
            "untagresource",
            "updateproject"
        ],
        "": [
            "createinstanceprofile",
            "createproject",
            "createtestgridproject",
            "createvpceconfiguration",
            "getaccountsettings",
            "getofferingstatus",
            "listdeviceinstances",
            "listdevices",
            "listinstanceprofiles",
            "listofferingpromotions",
            "listofferingtransactions",
            "listofferings",
            "listprojects",
            "listtestgridprojects",
            "listvpceconfigurations",
            "purchaseoffering",
            "renewoffering",
            "scenario: device pool as filter",
            "scenario: device selection configuration as filter",
            "tagresource",
            "untagresource"
        ],
        "device": [
            "createremoteaccesssession",
            "getdevice",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "deviceinstance": [
            "createremoteaccesssession",
            "getdeviceinstance",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedeviceinstance"
        ],
        "upload": [
            "createremoteaccesssession",
            "deleteupload",
            "getdevicepoolcompatibility",
            "getupload",
            "installtoremoteaccesssession",
            "schedulerun",
            "updateupload"
        ],
        "testgrid-project": [
            "createtestgridurl",
            "deletetestgridproject",
            "gettestgridproject",
            "gettestgridsession",
            "listtagsforresource",
            "listtestgridsessions",
            "tagresource",
            "untagresource",
            "updatetestgridproject"
        ],
        "devicepool": [
            "deletedevicepool",
            "getdevicepool",
            "getdevicepoolcompatibility",
            "listtagsforresource",
            "schedulerun",
            "tagresource",
            "untagresource",
            "updatedevicepool"
        ],
        "instanceprofile": [
            "deleteinstanceprofile",
            "getinstanceprofile",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedeviceinstance",
            "updateinstanceprofile"
        ],
        "networkprofile": [
            "deletenetworkprofile",
            "getnetworkprofile",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatenetworkprofile"
        ],
        "session": [
            "deleteremoteaccesssession",
            "getremoteaccesssession",
            "installtoremoteaccesssession",
            "listtagsforresource",
            "stopremoteaccesssession",
            "tagresource",
            "untagresource"
        ],
        "run": [
            "deleterun",
            "getrun",
            "listartifacts",
            "listjobs",
            "listtagsforresource",
            "listuniqueproblems",
            "stoprun",
            "tagresource",
            "untagresource"
        ],
        "vpceconfiguration": [
            "deletevpceconfiguration",
            "getvpceconfiguration",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatevpceconfiguration"
        ],
        "job": [
            "getjob",
            "listartifacts",
            "listsamples",
            "listsuites",
            "stopjob"
        ],
        "suite": [
            "getsuite",
            "listartifacts",
            "listtests"
        ],
        "test": [
            "gettest",
            "listartifacts"
        ],
        "testgrid-session": [
            "gettestgridsession",
            "listtagsforresource",
            "listtestgridsessionactions",
            "listtestgridsessionartifacts",
            "tagresource",
            "untagresource"
        ]
    },
    "devops-guru": {
        "topic": [
            "addnotificationchannel",
            "removenotificationchannel"
        ],
        "": [
            "describeaccounthealth",
            "describeaccountoverview",
            "describeanomaly",
            "describefeedback",
            "describeinsight",
            "describeresourcecollectionhealth",
            "describeserviceintegration",
            "getcostestimation",
            "getresourcecollection",
            "listanomaliesforinsight",
            "listevents",
            "listinsights",
            "listnotificationchannels",
            "listrecommendations",
            "putfeedback",
            "searchinsights",
            "startcostestimation",
            "updateresourcecollection",
            "updateserviceintegration"
        ]
    },
    "directconnect": {
        "dx-gateway": [
            "acceptdirectconnectgatewayassociationproposal",
            "createdirectconnectgatewayassociation",
            "createdirectconnectgatewayassociationproposal",
            "deletedirectconnectgateway",
            "deletedirectconnectgatewayassociation",
            "describedirectconnectgatewayassociationproposals",
            "describedirectconnectgatewayassociations",
            "describedirectconnectgatewayattachments",
            "describedirectconnectgateways"
        ],
        "dxcon": [
            "allocateconnectiononinterconnect",
            "allocatehostedconnection",
            "allocateprivatevirtualinterface",
            "allocatepublicvirtualinterface",
            "allocatetransitvirtualinterface",
            "associateconnectionwithlag",
            "associatehostedconnection",
            "associatehostedconnection",
            "associatevirtualinterface",
            "confirmconnection",
            "createlag",
            "createprivatevirtualinterface",
            "createpublicvirtualinterface",
            "createtransitvirtualinterface",
            "deleteconnection",
            "deleteinterconnect",
            "describeconnectionloa",
            "describeconnections",
            "describeconnectionsoninterconnect",
            "describehostedconnections",
            "describeinterconnectloa",
            "describeinterconnects",
            "describeloa",
            "describetags",
            "describevirtualinterfaces",
            "disassociateconnectionfromlag",
            "tagresource",
            "untagresource"
        ],
        "dxlag": [
            "allocatehostedconnection",
            "allocateprivatevirtualinterface",
            "allocatepublicvirtualinterface",
            "allocatetransitvirtualinterface",
            "associateconnectionwithlag",
            "associatehostedconnection",
            "associatevirtualinterface",
            "createconnection",
            "createinterconnect",
            "createprivatevirtualinterface",
            "createpublicvirtualinterface",
            "createtransitvirtualinterface",
            "deletelag",
            "describehostedconnections",
            "describelags",
            "describeloa",
            "describetags",
            "describevirtualinterfaces",
            "disassociateconnectionfromlag",
            "tagresource",
            "untagresource",
            "updatelag"
        ],
        "": [
            "allocatehostedconnection",
            "allocateprivatevirtualinterface",
            "allocatepublicvirtualinterface",
            "allocatetransitvirtualinterface",
            "createconnection",
            "createdirectconnectgateway",
            "createinterconnect",
            "createlag",
            "createprivatevirtualinterface",
            "createpublicvirtualinterface",
            "createtransitvirtualinterface",
            "deletedirectconnectgatewayassociationproposal",
            "describelocations",
            "describevirtualgateways",
            "tagresource",
            "untagresource",
            "updatedirectconnectgatewayassociation"
        ],
        "dxvif": [
            "associatevirtualinterface",
            "confirmprivatevirtualinterface",
            "confirmpublicvirtualinterface",
            "confirmtransitvirtualinterface",
            "createbgppeer",
            "deletebgppeer",
            "deletevirtualinterface",
            "describetags",
            "describevirtualinterfaces",
            "listvirtualinterfacetesthistory",
            "startbgpfailovertest",
            "stopbgpfailovertest",
            "tagresource",
            "untagresource",
            "updatevirtualinterfaceattributes"
        ]
    },
    "ds": {
        "directory": [
            "acceptshareddirectory",
            "addiproutes",
            "addregion",
            "addtagstoresource",
            "authorizeapplication",
            "cancelschemaextension",
            "createalias",
            "createcomputer",
            "createconditionalforwarder",
            "createlogsubscription",
            "createsnapshot",
            "createtrust",
            "deleteconditionalforwarder",
            "deletedirectory",
            "deletelogsubscription",
            "deletesnapshot",
            "deletetrust",
            "deregistercertificate",
            "deregistereventtopic",
            "describecertificate",
            "describeconditionalforwarders",
            "describedomaincontrollers",
            "describeeventtopics",
            "describeldapssettings",
            "describeregions",
            "describeshareddirectories",
            "disableclientauthentication",
            "disableldaps",
            "disableradius",
            "disablesso",
            "enableclientauthentication",
            "enableldaps",
            "enableradius",
            "enablesso",
            "getauthorizedapplicationdetails",
            "getsnapshotlimits",
            "listauthorizedapplications",
            "listcertificates",
            "listiproutes",
            "listschemaextensions",
            "listtagsforresource",
            "registercertificate",
            "registereventtopic",
            "rejectshareddirectory",
            "removeiproutes",
            "removeregion",
            "removetagsfromresource",
            "resetuserpassword",
            "restorefromsnapshot",
            "sharedirectory",
            "startschemaextension",
            "unauthorizeapplication",
            "unsharedirectory",
            "updateconditionalforwarder",
            "updatenumberofdomaincontrollers",
            "updateradius",
            "updatetrust",
            "verifytrust"
        ],
        "": [
            "addtagstoresource",
            "checkalias",
            "connectdirectory",
            "createdirectory",
            "createidentitypooldirectory",
            "createmicrosoftad",
            "describedirectories",
            "describesnapshots",
            "describetrusts",
            "getdirectorylimits",
            "listlogsubscriptions",
            "removetagsfromresource"
        ]
    },
    "dynamodb": {
        "table": [
            "batchgetitem",
            "batchwriteitem",
            "conditioncheckitem",
            "createbackup",
            "createglobaltable",
            "createtable",
            "createtablereplica",
            "deleteitem",
            "deletetable",
            "deletetablereplica",
            "describecontinuousbackups",
            "describecontributorinsights",
            "describekinesisstreamingdestination",
            "describetable",
            "describetablereplicaautoscaling",
            "describetimetolive",
            "disablekinesisstreamingdestination",
            "enablekinesisstreamingdestination",
            "exporttabletopointintime",
            "getitem",
            "listtagsofresource",
            "partiqldelete",
            "partiqlinsert",
            "partiqlselect",
            "partiqlupdate",
            "putitem",
            "query",
            "restoretablefrombackup",
            "restoretabletopointintime",
            "scan",
            "tagresource",
            "untagresource",
            "updatecontinuousbackups",
            "updatecontributorinsights",
            "updateglobaltable",
            "updateglobaltablesettings",
            "updateitem",
            "updatetable",
            "updatetablereplicaautoscaling",
            "updatetimetolive"
        ],
        "": [
            "batchgetitem",
            "batchwriteitem",
            "conditioncheckitem",
            "deleteitem",
            "describelimits",
            "describereservedcapacity",
            "describereservedcapacityofferings",
            "getitem",
            "listbackups",
            "listcontributorinsights",
            "listexports",
            "listglobaltables",
            "liststreams",
            "listtables",
            "partiqldelete",
            "partiqlinsert",
            "partiqlselect",
            "partiqlupdate",
            "purchasereservedcapacityofferings",
            "putitem",
            "query",
            "scan",
            "updateitem"
        ],
        "global-table": [
            "createglobaltable",
            "describeglobaltable",
            "describeglobaltablesettings",
            "updateglobaltable",
            "updateglobaltablesettings"
        ],
        "backup": [
            "deletebackup",
            "describebackup",
            "restoretablefrombackup"
        ],
        "index": [
            "describecontributorinsights",
            "partiqlselect",
            "query",
            "scan",
            "updatecontributorinsights"
        ],
        "export": [
            "describeexport"
        ],
        "stream": [
            "describestream",
            "getrecords",
            "getsharditerator"
        ]
    },
    "dax": {
        "application": [
            "batchgetitem",
            "batchwriteitem",
            "conditioncheckitem",
            "createcluster",
            "decreasereplicationfactor",
            "deletecluster",
            "deleteitem",
            "describeclusters",
            "getitem",
            "increasereplicationfactor",
            "listtags",
            "putitem",
            "query",
            "rebootnode",
            "scan",
            "tagresource",
            "untagresource",
            "updatecluster",
            "updateitem"
        ],
        "": [
            "createparametergroup",
            "createsubnetgroup",
            "deleteitem",
            "deleteparametergroup",
            "deletesubnetgroup",
            "describedefaultparameters",
            "describeevents",
            "describeparametergroups",
            "describeparameters",
            "describesubnetgroups",
            "getitem",
            "putitem",
            "updateitem",
            "updateparametergroup",
            "updatesubnetgroup"
        ]
    },
    "ec2": {
        "reserved-instances": [
            "acceptreservedinstancesexchangequote",
            "createreservedinstanceslisting",
            "createtags",
            "deletequeuedreservedinstances",
            "deletetags",
            "getreservedinstancesexchangequote",
            "modifyreservedinstances",
            "purchasereservedinstancesoffering"
        ],
        "subnet": [
            "accepttransitgatewaymulticastdomainassociations",
            "associateclientvpntargetnetwork",
            "associateroutetable",
            "associatesubnetcidrblock",
            "associatetransitgatewaymulticastdomain",
            "createclientvpnroute",
            "createfleet",
            "createflowlogs",
            "createlaunchtemplate",
            "createlaunchtemplateversion",
            "createnatgateway",
            "createnetworkinterface",
            "createsubnet",
            "createtags",
            "createtransitgatewayvpcattachment",
            "createvpcendpoint",
            "deleteclientvpnroute",
            "deletesubnet",
            "deletetags",
            "disassociateroutetable",
            "disassociatesubnetcidrblock",
            "disassociatetransitgatewaymulticastdomain",
            "importinstance",
            "modifyfleet",
            "modifysubnetattribute",
            "modifytransitgatewayvpcattachment",
            "modifyvpcendpoint",
            "rejecttransitgatewaymulticastdomainassociations",
            "requestspotinstances",
            "runinstances",
            "runscheduledinstances"
        ],
        "transit-gateway-attachment": [
            "accepttransitgatewaymulticastdomainassociations",
            "accepttransitgatewaypeeringattachment",
            "accepttransitgatewayvpcattachment",
            "associatetransitgatewaymulticastdomain",
            "associatetransitgatewayroutetable",
            "createtags",
            "createtransitgatewayconnect",
            "createtransitgatewayconnectpeer",
            "createtransitgatewaypeeringattachment",
            "createtransitgatewayprefixlistreference",
            "createtransitgatewayroute",
            "createtransitgatewayvpcattachment",
            "deletetags",
            "deletetransitgatewayconnect",
            "deletetransitgatewaypeeringattachment",
            "deletetransitgatewayvpcattachment",
            "disabletransitgatewayroutetablepropagation",
            "disassociatetransitgatewaymulticastdomain",
            "disassociatetransitgatewayroutetable",
            "enabletransitgatewayroutetablepropagation",
            "gettransitgatewayattachmentpropagations",
            "modifytransitgatewayprefixlistreference",
            "modifytransitgatewayvpcattachment",
            "rejecttransitgatewaymulticastdomainassociations",
            "rejecttransitgatewaypeeringattachment",
            "rejecttransitgatewayvpcattachment",
            "replacetransitgatewayroute"
        ],
        "transit-gateway-multicast-domain": [
            "accepttransitgatewaymulticastdomainassociations",
            "associatetransitgatewaymulticastdomain",
            "createtags",
            "createtransitgatewaymulticastdomain",
            "deletetags",
            "deletetransitgatewaymulticastdomain",
            "deregistertransitgatewaymulticastgroupmembers",
            "deregistertransitgatewaymulticastgroupsources",
            "disassociatetransitgatewaymulticastdomain",
            "gettransitgatewaymulticastdomainassociations",
            "registertransitgatewaymulticastgroupmembers",
            "registertransitgatewaymulticastgroupsources",
            "rejecttransitgatewaymulticastdomainassociations",
            "searchtransitgatewaymulticastgroups"
        ],
        "vpc-endpoint": [
            "acceptvpcendpointconnections",
            "createroute",
            "createtags",
            "createvpcendpoint",
            "createvpcendpointconnectionnotification",
            "deletetags",
            "deletevpcendpointconnectionnotifications",
            "deletevpcendpoints",
            "modifyvpcendpoint",
            "modifyvpcendpointconnectionnotification",
            "rejectvpcendpointconnections",
            "replaceroute"
        ],
        "vpc-endpoint-service": [
            "acceptvpcendpointconnections",
            "createtags",
            "createvpcendpointconnectionnotification",
            "createvpcendpointserviceconfiguration",
            "deletetags",
            "deletevpcendpointconnectionnotifications",
            "deletevpcendpointserviceconfigurations",
            "modifyvpcendpointconnectionnotification",
            "modifyvpcendpointserviceconfiguration",
            "modifyvpcendpointservicepermissions",
            "rejectvpcendpointconnections",
            "startvpcendpointserviceprivatednsverification"
        ],
        "vpc": [
            "acceptvpcpeeringconnection",
            "applysecuritygroupstoclientvpntargetnetwork",
            "associatedhcpoptions",
            "associatevpccidrblock",
            "attachclassiclinkvpc",
            "attachinternetgateway",
            "attachvpngateway",
            "createcarriergateway",
            "createclientvpnendpoint",
            "createegressonlyinternetgateway",
            "createflowlogs",
            "createlocalgatewayroutetablevpcassociation",
            "createnetworkacl",
            "createroutetable",
            "createsecuritygroup",
            "createsubnet",
            "createtags",
            "createtransitgatewayvpcattachment",
            "createvpc",
            "createvpcendpoint",
            "createvpcpeeringconnection",
            "deletetags",
            "deletevpc",
            "detachclassiclinkvpc",
            "detachinternetgateway",
            "detachvpngateway",
            "disablevpcclassiclink",
            "disablevpcclassiclinkdnssupport",
            "enablevpcclassiclink",
            "enablevpcclassiclinkdnssupport",
            "modifyclientvpnendpoint",
            "modifyvpcattribute",
            "modifyvpctenancy"
        ],
        "vpc-peering-connection": [
            "acceptvpcpeeringconnection",
            "createroute",
            "createtags",
            "createvpcpeeringconnection",
            "deletetags",
            "deletevpcpeeringconnection",
            "modifyvpcpeeringconnectionoptions",
            "rejectvpcpeeringconnection",
            "replaceroute"
        ],
        "": [
            "advertisebyoipcidr",
            "cancelbundletask",
            "cancelconversiontask",
            "cancelreservedinstanceslisting",
            "createdefaultsubnet",
            "createdefaultvpc",
            "createspotdatafeedsubscription",
            "createtags",
            "deletenetworkinterfacepermission",
            "deleteplacementgroup",
            "deletespotdatafeedsubscription",
            "deprovisionbyoipcidr",
            "deregisterinstanceeventnotificationattributes",
            "describeaccountattributes",
            "describeaddresses",
            "describeaddressesattribute",
            "describeaggregateidformat",
            "describeavailabilityzones",
            "describebundletasks",
            "describebyoipcidrs",
            "describecapacityreservations",
            "describecarriergateways",
            "describeclassiclinkinstances",
            "describeclientvpnauthorizationrules",
            "describeclientvpnconnections",
            "describeclientvpnendpoints",
            "describeclientvpnroutes",
            "describeclientvpntargetnetworks",
            "describecoippools",
            "describeconversiontasks",
            "describecustomergateways",
            "describedhcpoptions",
            "describeegressonlyinternetgateways",
            "describeelasticgpus",
            "describeexportimagetasks",
            "describeexporttasks",
            "describefastsnapshotrestores",
            "describefleethistory",
            "describefleetinstances",
            "describefleets",
            "describeflowlogs",
            "describefpgaimageattribute",
            "describefpgaimages",
            "describehostreservationofferings",
            "describehostreservations",
            "describehosts",
            "describeiaminstanceprofileassociations",
            "describeidformat",
            "describeidentityidformat",
            "describeimageattribute",
            "describeimages",
            "describeimportimagetasks",
            "describeimportsnapshottasks",
            "describeinstanceattribute",
            "describeinstancecreditspecifications",
            "describeinstanceeventnotificationattributes",
            "describeinstancestatus",
            "describeinstancetypeofferings",
            "describeinstancetypes",
            "describeinstances",
            "describeinternetgateways",
            "describeipv6pools",
            "describekeypairs",
            "describelaunchtemplateversions",
            "describelaunchtemplates",
            "describelocalgatewayroutetablevirtualinterfacegroupassociations",
            "describelocalgatewayroutetablevpcassociations",
            "describelocalgatewayroutetables",
            "describelocalgatewayvirtualinterfacegroups",
            "describelocalgatewayvirtualinterfaces",
            "describelocalgateways",
            "describemanagedprefixlists",
            "describemovingaddresses",
            "describenatgateways",
            "describenetworkacls",
            "describenetworkinsightsanalyses",
            "describenetworkinsightspaths",
            "describenetworkinterfaceattribute",
            "describenetworkinterfacepermissions",
            "describenetworkinterfaces",
            "describeplacementgroups",
            "describeprefixlists",
            "describeprincipalidformat",
            "describepublicipv4pools",
            "describeregions",
            "describereservedinstances",
            "describereservedinstanceslistings",
            "describereservedinstancesmodifications",
            "describereservedinstancesofferings",
            "describeroutetables",
            "describescheduledinstanceavailability",
            "describescheduledinstances",
            "describesecuritygroupreferences",
            "describesecuritygroups",
            "describesnapshotattribute",
            "describesnapshots",
            "describespotdatafeedsubscription",
            "describespotfleetinstances",
            "describespotfleetrequesthistory",
            "describespotfleetrequests",
            "describespotinstancerequests",
            "describespotpricehistory",
            "describestalesecuritygroups",
            "describesubnets",
            "describetags",
            "describetrafficmirrorfilters",
            "describetrafficmirrorsessions",
            "describetrafficmirrortargets",
            "describetransitgatewayattachments",
            "describetransitgatewayconnectpeers",
            "describetransitgatewayconnects",
            "describetransitgatewaymulticastdomains",
            "describetransitgatewaypeeringattachments",
            "describetransitgatewayroutetables",
            "describetransitgatewayvpcattachments",
            "describetransitgateways",
            "describevolumeattribute",
            "describevolumestatus",
            "describevolumes",
            "describevolumesmodifications",
            "describevpcattribute",
            "describevpcclassiclink",
            "describevpcclassiclinkdnssupport",
            "describevpcendpointconnectionnotifications",
            "describevpcendpointconnections",
            "describevpcendpointserviceconfigurations",
            "describevpcendpointservicepermissions",
            "describevpcendpointservices",
            "describevpcendpoints",
            "describevpcpeeringconnections",
            "describevpcs",
            "describevpnconnections",
            "describevpngateways",
            "disableebsencryptionbydefault",
            "disableserialconsoleaccess",
            "disassociatevpccidrblock",
            "enableebsencryptionbydefault",
            "enableserialconsoleaccess",
            "getcoippoolusage",
            "getdefaultcreditspecification",
            "getebsdefaultkmskeyid",
            "getebsencryptionbydefault",
            "getserialconsoleaccessstatus",
            "importvolume",
            "modifyaddressattribute",
            "modifyavailabilityzonegroup",
            "modifydefaultcreditspecification",
            "modifyebsdefaultkmskeyid",
            "modifyidformat",
            "modifyidentityidformat",
            "moveaddresstovpc",
            "provisionbyoipcidr",
            "purchasescheduledinstances",
            "registerimage",
            "registerinstanceeventnotificationattributes",
            "resetaddressattribute",
            "resetebsdefaultkmskeyid",
            "restoreaddresstoclassic",
            "scenario: ec2-classic-ebs",
            "scenario: ec2-classic-instancestore",
            "scenario: ec2-vpc-ebs",
            "scenario: ec2-vpc-ebs-subnet",
            "scenario: ec2-vpc-instancestore",
            "scenario: ec2-vpc-instancestore-subnet",
            "withdrawbyoipcidr"
        ],
        "ipv4pool-ec2": [
            "allocateaddress",
            "createtags",
            "deletetags"
        ],
        "dedicated-host": [
            "allocatehosts",
            "createlaunchtemplate",
            "createlaunchtemplateversion",
            "createtags",
            "deletetags",
            "gethostreservationpurchasepreview",
            "modifyhosts",
            "modifyinstanceplacement",
            "purchasehostreservation",
            "releasehosts"
        ],
        "client-vpn-endpoint": [
            "applysecuritygroupstoclientvpntargetnetwork",
            "associateclientvpntargetnetwork",
            "authorizeclientvpningress",
            "createclientvpnendpoint",
            "createclientvpnroute",
            "createtags",
            "deleteclientvpnendpoint",
            "deleteclientvpnroute",
            "deletetags",
            "disassociateclientvpntargetnetwork",
            "exportclientvpnclientcertificaterevocationlist",
            "exportclientvpnclientconfiguration",
            "importclientvpnclientcertificaterevocationlist",
            "modifyclientvpnendpoint",
            "revokeclientvpningress",
            "terminateclientvpnconnections"
        ],
        "security-group": [
            "applysecuritygroupstoclientvpntargetnetwork",
            "attachclassiclinkvpc",
            "authorizesecuritygroupegress",
            "authorizesecuritygroupingress",
            "createclientvpnendpoint",
            "createfleet",
            "createlaunchtemplate",
            "createlaunchtemplateversion",
            "createnetworkinterface",
            "createsecuritygroup",
            "createtags",
            "createvpcendpoint",
            "deletesecuritygroup",
            "deletetags",
            "importinstance",
            "modifyclientvpnendpoint",
            "modifyfleet",
            "modifyinstanceattribute",
            "modifynetworkinterfaceattribute",
            "modifyvpcendpoint",
            "requestspotfleet",
            "requestspotinstances",
            "revokesecuritygroupegress",
            "revokesecuritygroupingress",
            "runinstances",
            "runscheduledinstances",
            "updatesecuritygroupruledescriptionsegress",
            "updatesecuritygroupruledescriptionsingress"
        ],
        "network-interface": [
            "assignipv6addresses",
            "assignprivateipaddresses",
            "associateaddress",
            "attachnetworkinterface",
            "createfleet",
            "createflowlogs",
            "createlaunchtemplate",
            "createlaunchtemplateversion",
            "createnetworkinterface",
            "createnetworkinterfacepermission",
            "createroute",
            "createtags",
            "createtrafficmirrorsession",
            "createtrafficmirrortarget",
            "deletenetworkinterface",
            "deletetags",
            "deregistertransitgatewaymulticastgroupmembers",
            "deregistertransitgatewaymulticastgroupsources",
            "detachnetworkinterface",
            "disassociateaddress",
            "modifyfleet",
            "modifynetworkinterfaceattribute",
            "registertransitgatewaymulticastgroupmembers",
            "registertransitgatewaymulticastgroupsources",
            "replaceroute",
            "resetnetworkinterfaceattribute",
            "runinstances",
            "runscheduledinstances",
            "unassignipv6addresses",
            "unassignprivateipaddresses"
        ],
        "elastic-ip": [
            "associateaddress",
            "createnatgateway",
            "createtags",
            "deletetags",
            "disassociateaddress",
            "releaseaddress"
        ],
        "instance": [
            "associateaddress",
            "associateiaminstanceprofile",
            "attachclassiclinkvpc",
            "attachnetworkinterface",
            "attachvolume",
            "bundleinstance",
            "confirmproductinstance",
            "createimage",
            "createinstanceexporttask",
            "createroute",
            "createsnapshots",
            "createtags",
            "deletetags",
            "detachclassiclinkvpc",
            "detachnetworkinterface",
            "detachvolume",
            "disassociateaddress",
            "disassociateiaminstanceprofile",
            "getconsoleoutput",
            "getconsolescreenshot",
            "getlaunchtemplatedata",
            "getpassworddata",
            "modifyinstanceattribute",
            "modifyinstancecapacityreservationattributes",
            "modifyinstancecreditspecification",
            "modifyinstanceeventstarttime",
            "modifyinstancemetadataoptions",
            "modifyinstanceplacement",
            "modifynetworkinterfaceattribute",
            "monitorinstances",
            "rebootinstances",
            "replaceiaminstanceprofileassociation",
            "replaceroute",
            "reportinstancestatus",
            "resetinstanceattribute",
            "runinstances",
            "senddiagnosticinterrupt",
            "startinstances",
            "stopinstances",
            "terminateinstances",
            "unmonitorinstances"
        ],
        "certificate": [
            "associateenclavecertificateiamrole",
            "disassociateenclavecertificateiamrole",
            "getassociatedenclavecertificateiamroles"
        ],
        "role": [
            "associateenclavecertificateiamrole",
            "disassociateenclavecertificateiamrole"
        ],
        "route-table": [
            "associateroutetable",
            "createroute",
            "createroutetable",
            "createtags",
            "createvpcendpoint",
            "deleteroute",
            "deleteroutetable",
            "deletetags",
            "disablevgwroutepropagation",
            "disassociateroutetable",
            "enablevgwroutepropagation",
            "modifyvpcendpoint",
            "replaceroute",
            "replaceroutetableassociation"
        ],
        "internet-gateway": [
            "associateroutetable",
            "attachinternetgateway",
            "createinternetgateway",
            "createroute",
            "createtags",
            "deleteinternetgateway",
            "deletetags",
            "detachinternetgateway",
            "replaceroute"
        ],
        "vpn-gateway": [
            "associateroutetable",
            "attachvpngateway",
            "createroute",
            "createtags",
            "createvpnconnection",
            "createvpngateway",
            "deletetags",
            "deletevpngateway",
            "detachvpngateway",
            "disablevgwroutepropagation",
            "enablevgwroutepropagation",
            "modifyvpnconnection",
            "replaceroute"
        ],
        "transit-gateway-route-table": [
            "associatetransitgatewayroutetable",
            "createtags",
            "createtransitgatewayprefixlistreference",
            "createtransitgatewayroute",
            "createtransitgatewayroutetable",
            "deletetags",
            "deletetransitgatewayprefixlistreference",
            "deletetransitgatewayroute",
            "deletetransitgatewayroutetable",
            "disabletransitgatewayroutetablepropagation",
            "disassociatetransitgatewayroutetable",
            "enabletransitgatewayroutetablepropagation",
            "exporttransitgatewayroutes",
            "gettransitgatewayprefixlistreferences",
            "gettransitgatewayroutetableassociations",
            "gettransitgatewayroutetablepropagations",
            "modifytransitgateway",
            "modifytransitgatewayprefixlistreference",
            "replacetransitgatewayroute",
            "searchtransitgatewayroutes"
        ],
        "ipv6pool-ec2": [
            "associatevpccidrblock",
            "createtags",
            "createvpc",
            "deletetags",
            "getassociatedipv6poolcidrs"
        ],
        "volume": [
            "attachvolume",
            "createsnapshot",
            "createsnapshots",
            "createtags",
            "createvolume",
            "deletetags",
            "deletevolume",
            "detachvolume",
            "enablevolumeio",
            "modifyinstanceattribute",
            "modifyvolume",
            "modifyvolumeattribute",
            "runinstances"
        ],
        "capacity-reservation": [
            "cancelcapacityreservation",
            "createcapacityreservation",
            "createlaunchtemplate",
            "createlaunchtemplateversion",
            "createtags",
            "deletetags",
            "getcapacityreservationusage",
            "getgroupsforcapacityreservation",
            "modifycapacityreservation",
            "modifyinstancecapacityreservationattributes",
            "runinstances"
        ],
        "export-image-task": [
            "cancelexporttask",
            "createtags",
            "deletetags"
        ],
        "export-instance-task": [
            "cancelexporttask",
            "createinstanceexporttask",
            "createtags",
            "deletetags"
        ],
        "import-image-task": [
            "cancelimporttask",
            "createtags",
            "deletetags"
        ],
        "import-snapshot-task": [
            "cancelimporttask",
            "createtags",
            "deletetags"
        ],
        "spot-fleet-request": [
            "cancelspotfleetrequests",
            "createtags",
            "deletetags",
            "modifyspotfleetrequest"
        ],
        "spot-instances-request": [
            "cancelspotinstancerequests",
            "createtags",
            "deletetags",
            "requestspotinstances"
        ],
        "fpga-image": [
            "copyfpgaimage",
            "createfpgaimage",
            "createtags",
            "deletefpgaimage",
            "deletetags",
            "modifyfpgaimageattribute",
            "resetfpgaimageattribute"
        ],
        "image": [
            "copyimage",
            "createfleet",
            "createimage",
            "createlaunchtemplate",
            "createlaunchtemplateversion",
            "createtags",
            "deletetags",
            "deregisterimage",
            "exportimage",
            "importimage",
            "modifyfleet",
            "modifyimageattribute",
            "requestspotinstances",
            "resetimageattribute",
            "runinstances",
            "runscheduledinstances"
        ],
        "snapshot": [
            "copysnapshot",
            "createfleet",
            "createlaunchtemplate",
            "createlaunchtemplateversion",
            "createsnapshot",
            "createsnapshots",
            "createtags",
            "createvolume",
            "deletesnapshot",
            "deletetags",
            "disablefastsnapshotrestores",
            "enablefastsnapshotrestores",
            "importimage",
            "importsnapshot",
            "modifyfleet",
            "modifysnapshotattribute",
            "resetsnapshotattribute",
            "runinstances",
            "runscheduledinstances"
        ],
        "carrier-gateway": [
            "createcarriergateway",
            "createroute",
            "deletecarriergateway",
            "replaceroute"
        ],
        "customer-gateway": [
            "createcustomergateway",
            "createtags",
            "createvpnconnection",
            "deletecustomergateway",
            "deletetags",
            "modifyvpnconnection"
        ],
        "dhcp-options": [
            "createdhcpoptions",
            "createtags",
            "deletedhcpoptions",
            "deletetags"
        ],
        "egress-only-internet-gateway": [
            "createegressonlyinternetgateway",
            "createroute",
            "createtags",
            "deleteegressonlyinternetgateway",
            "deletetags",
            "replaceroute"
        ],
        "fleet": [
            "createfleet",
            "createtags",
            "deletefleets",
            "deletetags",
            "modifyfleet"
        ],
        "key-pair": [
            "createfleet",
            "createkeypair",
            "createlaunchtemplate",
            "createlaunchtemplateversion",
            "createtags",
            "deletekeypair",
            "deletetags",
            "importkeypair",
            "modifyfleet",
            "requestspotinstances",
            "runinstances",
            "runscheduledinstances"
        ],
        "launch-template": [
            "createfleet",
            "createlaunchtemplate",
            "createlaunchtemplateversion",
            "createtags",
            "deletelaunchtemplate",
            "deletelaunchtemplateversions",
            "deletetags",
            "modifyfleet",
            "modifylaunchtemplate",
            "runinstances"
        ],
        "vpc-flow-log": [
            "createflowlogs",
            "createtags",
            "deleteflowlogs",
            "deletetags"
        ],
        "placement-group": [
            "createlaunchtemplate",
            "createlaunchtemplateversion",
            "createplacementgroup",
            "createtags",
            "deletetags",
            "modifyinstanceplacement",
            "runinstances",
            "runscheduledinstances"
        ],
        "local-gateway-route-table": [
            "createlocalgatewayroute",
            "createlocalgatewayroutetablevpcassociation",
            "createtags",
            "deletelocalgatewayroute",
            "deletetags",
            "searchlocalgatewayroutes"
        ],
        "local-gateway-virtual-interface-group": [
            "createlocalgatewayroute",
            "createtags",
            "deletetags"
        ],
        "local-gateway-route-table-vpc-association": [
            "createlocalgatewayroutetablevpcassociation",
            "createtags",
            "deletelocalgatewayroutetablevpcassociation",
            "deletetags"
        ],
        "prefix-list": [
            "createmanagedprefixlist",
            "createroute",
            "createtags",
            "createtransitgatewayprefixlistreference",
            "deletemanagedprefixlist",
            "deleteroute",
            "deletetags",
            "deletetransitgatewayprefixlistreference",
            "getmanagedprefixlistassociations",
            "getmanagedprefixlistentries",
            "modifymanagedprefixlist",
            "modifytransitgatewayprefixlistreference",
            "replaceroute",
            "restoremanagedprefixlistversion"
        ],
        "natgateway": [
            "createnatgateway",
            "createroute",
            "createtags",
            "deletenatgateway",
            "deletetags",
            "replaceroute"
        ],
        "network-acl": [
            "createnetworkacl",
            "createnetworkaclentry",
            "createtags",
            "deletenetworkacl",
            "deletenetworkaclentry",
            "deletetags",
            "replacenetworkaclassociation",
            "replacenetworkaclentry"
        ],
        "network-insights-path": [
            "createnetworkinsightspath",
            "deletenetworkinsightspath",
            "startnetworkinsightsanalysis"
        ],
        "local-gateway": [
            "createroute",
            "createtags",
            "deletetags",
            "replaceroute"
        ],
        "transit-gateway": [
            "createroute",
            "createtags",
            "createtransitgateway",
            "createtransitgatewaymulticastdomain",
            "createtransitgatewaypeeringattachment",
            "createtransitgatewayroutetable",
            "createtransitgatewayvpcattachment",
            "createvpnconnection",
            "deletetags",
            "deletetransitgateway",
            "modifytransitgateway",
            "modifyvpnconnection",
            "replaceroute"
        ],
        "elastic-gpu": [
            "createtags",
            "deletetags",
            "runinstances"
        ],
        "host-reservation": [
            "createtags",
            "deletetags"
        ],
        "local-gateway-route-table-virtual-interface-group-association": [
            "createtags",
            "deletetags"
        ],
        "local-gateway-virtual-interface": [
            "createtags",
            "deletetags"
        ],
        "traffic-mirror-filter": [
            "createtags",
            "createtrafficmirrorfilter",
            "createtrafficmirrorfilterrule",
            "createtrafficmirrorsession",
            "deletetags",
            "deletetrafficmirrorfilter",
            "modifytrafficmirrorfilternetworkservices",
            "modifytrafficmirrorfilterrule",
            "modifytrafficmirrorsession"
        ],
        "traffic-mirror-session": [
            "createtags",
            "createtrafficmirrorsession",
            "deletetags",
            "deletetrafficmirrorsession",
            "modifytrafficmirrorsession"
        ],
        "traffic-mirror-target": [
            "createtags",
            "createtrafficmirrorsession",
            "createtrafficmirrortarget",
            "deletetags",
            "deletetrafficmirrortarget",
            "modifytrafficmirrorsession"
        ],
        "transit-gateway-connect-peer": [
            "createtags",
            "deletetags",
            "deletetransitgatewayconnectpeer"
        ],
        "vpn-connection": [
            "createtags",
            "createvpnconnection",
            "createvpnconnectionroute",
            "deletetags",
            "deletevpnconnection",
            "deletevpnconnectionroute",
            "modifyvpnconnection",
            "modifyvpnconnectionoptions",
            "modifyvpntunnelcertificate",
            "modifyvpntunneloptions",
            "terminateclientvpnconnections"
        ],
        "traffic-mirror-filter-rule": [
            "createtrafficmirrorfilterrule",
            "deletetrafficmirrorfilterrule",
            "modifytrafficmirrorfilterrule"
        ],
        "network-insights-analysis": [
            "deletenetworkinsightsanalysis"
        ],
        "elastic-inference": [
            "runinstances"
        ]
    },
    "autoscaling": {
        "autoScalingGroup": [
            "attachinstances",
            "attachloadbalancertargetgroups",
            "attachloadbalancers",
            "batchdeletescheduledaction",
            "batchputscheduledupdategroupaction",
            "cancelinstancerefresh",
            "completelifecycleaction",
            "createautoscalinggroup",
            "createorupdatetags",
            "deleteautoscalinggroup",
            "deletelifecyclehook",
            "deletenotificationconfiguration",
            "deletepolicy",
            "deletescheduledaction",
            "deletetags",
            "detachinstances",
            "detachloadbalancertargetgroups",
            "detachloadbalancers",
            "disablemetricscollection",
            "enablemetricscollection",
            "enterstandby",
            "executepolicy",
            "exitstandby",
            "putlifecyclehook",
            "putnotificationconfiguration",
            "putscalingpolicy",
            "putscheduledupdategroupaction",
            "recordlifecycleactionheartbeat",
            "resumeprocesses",
            "setdesiredcapacity",
            "setinstancehealth",
            "setinstanceprotection",
            "startinstancerefresh",
            "suspendprocesses",
            "terminateinstanceinautoscalinggroup",
            "updateautoscalinggroup"
        ],
        "": [
            "attachloadbalancertargetgroups",
            "attachloadbalancers",
            "createautoscalinggroup",
            "createlaunchconfiguration",
            "createorupdatetags",
            "deletetags",
            "describeaccountlimits",
            "describeadjustmenttypes",
            "describeautoscalinggroups",
            "describeautoscalinginstances",
            "describeautoscalingnotificationtypes",
            "describeinstancerefreshes",
            "describelaunchconfigurations",
            "describelifecyclehooktypes",
            "describelifecyclehooks",
            "describeloadbalancertargetgroups",
            "describeloadbalancers",
            "describemetriccollectiontypes",
            "describenotificationconfigurations",
            "describepolicies",
            "describescalingactivities",
            "describescalingprocesstypes",
            "describescheduledactions",
            "describetags",
            "describeterminationpolicytypes",
            "detachloadbalancertargetgroups",
            "detachloadbalancers",
            "putscheduledupdategroupaction",
            "updateautoscalinggroup"
        ],
        "launchConfiguration": [
            "createlaunchconfiguration",
            "deletelaunchconfiguration"
        ]
    },
    "imagebuilder": {
        "image": [
            "cancelimagecreation",
            "createimage",
            "deleteimage",
            "getimage",
            "getimagepolicy",
            "listimagepackages",
            "listtagsforresource",
            "putimagepolicy",
            "tagresource",
            "untagresource"
        ],
        "component": [
            "createcomponent",
            "deletecomponent",
            "getcomponent",
            "getcomponentpolicy",
            "importcomponent",
            "listtagsforresource",
            "putcomponentpolicy",
            "tagresource",
            "untagresource"
        ],
        "kmsKey": [
            "createcomponent",
            "importcomponent"
        ],
        "": [
            "createcomponent",
            "createcontainerrecipe",
            "createdistributionconfiguration",
            "createimage",
            "createimagepipeline",
            "createimagerecipe",
            "createinfrastructureconfiguration",
            "getimage",
            "importcomponent",
            "listcomponents",
            "listcontainerrecipes",
            "listdistributionconfigurations",
            "listimagepackages",
            "listimagepipelines",
            "listimagerecipes",
            "listimages",
            "listinfrastructureconfigurations",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateinfrastructureconfiguration"
        ],
        "containerRecipe": [
            "createcontainerrecipe",
            "deletecontainerrecipe",
            "getcontainerrecipe",
            "getcontainerrecipepolicy",
            "putcontainerrecipepolicy",
            "tagresource",
            "untagresource"
        ],
        "distributionConfiguration": [
            "createdistributionconfiguration",
            "deletedistributionconfiguration",
            "getdistributionconfiguration",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedistributionconfiguration"
        ],
        "imagePipeline": [
            "createimagepipeline",
            "deleteimagepipeline",
            "getimagepipeline",
            "listimagepipelineimages",
            "listtagsforresource",
            "startimagepipelineexecution",
            "tagresource",
            "untagresource",
            "updateimagepipeline"
        ],
        "imageRecipe": [
            "createimagerecipe",
            "deleteimagerecipe",
            "getimagerecipe",
            "getimagerecipepolicy",
            "listtagsforresource",
            "putimagerecipepolicy",
            "tagresource",
            "untagresource"
        ],
        "infrastructureConfiguration": [
            "createinfrastructureconfiguration",
            "deleteinfrastructureconfiguration",
            "getinfrastructureconfiguration",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateinfrastructureconfiguration"
        ],
        "componentVersion": [
            "listcomponentbuildversions"
        ],
        "imageVersion": [
            "listimagebuildversions"
        ]
    },
    "ec2-instance-connect": {
        "instance": [
            "sendsshpublickey",
            "sendserialconsolesshpublickey"
        ],
        "": [
            "sendsshpublickey"
        ]
    },
    "elasticbeanstalk": {
        "environment": [
            "abortenvironmentupdate",
            "addtags",
            "applyenvironmentmanagedaction",
            "associateenvironmentoperationsrole",
            "createenvironment",
            "deleteenvironmentconfiguration",
            "describeconfigurationoptions",
            "describeconfigurationsettings",
            "describeenvironmenthealth",
            "describeenvironmentmanagedactionhistory",
            "describeenvironmentmanagedactions",
            "describeenvironmentresources",
            "describeenvironments",
            "describeevents",
            "describeinstanceshealth",
            "disassociateenvironmentoperationsrole",
            "listtagsforresource",
            "putinstancestatistics",
            "rebuildenvironment",
            "removetags",
            "requestenvironmentinfo",
            "restartappserver",
            "retrieveenvironmentinfo",
            "swapenvironmentcnames",
            "terminateenvironment",
            "updateenvironment",
            "validateconfigurationsettings"
        ],
        "application": [
            "addtags",
            "composeenvironments",
            "createapplication",
            "createapplicationversion",
            "deleteapplication",
            "describeapplications",
            "describeevents",
            "listtagsforresource",
            "putinstancestatistics",
            "removetags",
            "updateapplication",
            "updateapplicationresourcelifecycle"
        ],
        "applicationversion": [
            "addtags",
            "composeenvironments",
            "createapplicationversion",
            "deleteapplicationversion",
            "describeapplicationversions",
            "describeevents",
            "listtagsforresource",
            "removetags",
            "updateapplicationversion"
        ],
        "configurationtemplate": [
            "addtags",
            "createconfigurationtemplate",
            "deleteconfigurationtemplate",
            "describeconfigurationoptions",
            "describeconfigurationsettings",
            "describeevents",
            "listtagsforresource",
            "removetags",
            "updateconfigurationtemplate",
            "validateconfigurationsettings"
        ],
        "platform": [
            "addtags",
            "createplatformversion",
            "deleteplatformversion",
            "describeplatformversion",
            "listplatformversions",
            "listtagsforresource",
            "removetags"
        ],
        "": [
            "addtags",
            "checkdnsavailability",
            "createapplication",
            "createapplicationversion",
            "createconfigurationtemplate",
            "createenvironment",
            "createplatformversion",
            "createstoragelocation",
            "describeaccountattributes",
            "listplatformbranches",
            "removetags",
            "swapenvironmentcnames",
            "updateconfigurationtemplate",
            "updateenvironment"
        ],
        "solutionstack": [
            "describeconfigurationoptions",
            "listavailablesolutionstacks"
        ]
    },
    "ebs": {
        "snapshot": [
            "completesnapshot",
            "getsnapshotblock",
            "listchangedblocks",
            "listsnapshotblocks",
            "putsnapshotblock",
            "startsnapshot"
        ],
        "": [
            "startsnapshot"
        ]
    },
    "ecr": {
        "repository": [
            "batchchecklayeravailability",
            "batchdeleteimage",
            "batchgetimage",
            "completelayerupload",
            "createrepository",
            "deletelifecyclepolicy",
            "deleterepository",
            "deleterepositorypolicy",
            "describeimagescanfindings",
            "describeimages",
            "describerepositories",
            "getdownloadurlforlayer",
            "getlifecyclepolicy",
            "getlifecyclepolicypreview",
            "getrepositorypolicy",
            "initiatelayerupload",
            "listimages",
            "listtagsforresource",
            "putimage",
            "putimagescanningconfiguration",
            "putimagetagmutability",
            "putlifecyclepolicy",
            "replicateimage",
            "setrepositorypolicy",
            "startimagescan",
            "startlifecyclepolicypreview",
            "tagresource",
            "untagresource",
            "uploadlayerpart"
        ],
        "": [
            "createrepository",
            "deleteregistrypolicy",
            "describeregistry",
            "getauthorizationtoken",
            "getregistrypolicy",
            "putregistrypolicy",
            "putreplicationconfiguration",
            "tagresource"
        ]
    },
    "ecr-public": {
        "repository": [
            "batchchecklayeravailability",
            "batchdeleteimage",
            "completelayerupload",
            "createrepository",
            "deleterepository",
            "deleterepositorypolicy",
            "describeimagetags",
            "describeimages",
            "describerepositories",
            "getrepositorycatalogdata",
            "getrepositorypolicy",
            "initiatelayerupload",
            "listtagsforresource",
            "putimage",
            "putrepositorycatalogdata",
            "setrepositorypolicy",
            "tagresource",
            "untagresource",
            "uploadlayerpart"
        ],
        "": [
            "createrepository",
            "getauthorizationtoken",
            "tagresource",
            "untagresource"
        ],
        "registry": [
            "describeregistries",
            "getregistrycatalogdata",
            "putregistrycatalogdata"
        ]
    },
    "ecs": {
        "": [
            "createcapacityprovider",
            "createcluster",
            "createservice",
            "createtaskset",
            "deleteaccountsetting",
            "deleteattributes",
            "deleteservice",
            "deletetaskset",
            "deregistertaskdefinition",
            "describecontainerinstances",
            "describeservices",
            "describetaskdefinition",
            "describetasksets",
            "describetasks",
            "discoverpollendpoint",
            "listaccountsettings",
            "listclusters",
            "listservices",
            "listtaskdefinitionfamilies",
            "listtaskdefinitions",
            "listtasks",
            "poll",
            "putaccountsetting",
            "putaccountsettingdefault",
            "putattributes",
            "putclustercapacityproviders",
            "registercontainerinstance",
            "registertaskdefinition",
            "runtask",
            "starttask",
            "starttelemetrysession",
            "stoptask",
            "tagresource",
            "untagresource",
            "updatecontaineragent",
            "updatecontainerinstancesstate",
            "updateservice",
            "updateserviceprimarytaskset",
            "updatetaskset"
        ],
        "service": [
            "createservice",
            "deleteservice",
            "describeservices",
            "tagresource",
            "untagresource",
            "updateservice",
            "updateserviceprimarytaskset"
        ],
        "container-instance": [
            "deleteattributes",
            "describecontainerinstances",
            "listtagsforresource",
            "listtasks",
            "poll",
            "putattributes",
            "starttelemetrysession",
            "tagresource",
            "untagresource",
            "updatecontaineragent",
            "updatecontainerinstancesstate"
        ],
        "capacity-provider": [
            "deletecapacityprovider",
            "describecapacityproviders",
            "putclustercapacityproviders"
        ],
        "cluster": [
            "deletecluster",
            "deregistercontainerinstance",
            "describeclusters",
            "listattributes",
            "listcontainerinstances",
            "listtagsforresource",
            "registercontainerinstance",
            "submitattachmentstatechanges",
            "submitcontainerstatechange",
            "submittaskstatechange",
            "tagresource",
            "untagresource",
            "updateclustersettings"
        ],
        "task-set": [
            "deletetaskset",
            "describetasksets",
            "updatetaskset"
        ],
        "task": [
            "describetasks",
            "listtagsforresource",
            "stoptask",
            "tagresource",
            "untagresource"
        ],
        "task-definition": [
            "listtagsforresource",
            "runtask",
            "starttask",
            "tagresource",
            "untagresource"
        ]
    },
    "elasticfilesystem": {
        "file-system": [
            "backup",
            "clientmount",
            "clientrootaccess",
            "clientwrite",
            "createaccesspoint",
            "createmounttarget",
            "createtags",
            "deletefilesystem",
            "deletefilesystempolicy",
            "deletemounttarget",
            "deletetags",
            "describeaccesspoints",
            "describebackuppolicy",
            "describefilesystempolicy",
            "describefilesystems",
            "describelifecycleconfiguration",
            "describemounttargets",
            "describetags",
            "listtagsforresource",
            "putbackuppolicy",
            "putfilesystempolicy",
            "putlifecycleconfiguration",
            "restore",
            "tagresource",
            "untagresource",
            "updatefilesystem"
        ],
        "": [
            "clientmount",
            "clientrootaccess",
            "clientwrite",
            "createfilesystem",
            "createtags",
            "deletetags",
            "describemounttargetsecuritygroups",
            "modifymounttargetsecuritygroups"
        ],
        "access-point": [
            "deleteaccesspoint",
            "describeaccesspoints",
            "describemounttargets",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ]
    },
    "elastic-inference": {
        "accelerator": [
            "connect"
        ],
        "": [
            "describeacceleratorofferings",
            "describeacceleratortypes",
            "describeaccelerators",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ]
    },
    "eks": {
        "cluster": [
            "accesskubernetesapi",
            "associateencryptionconfig",
            "associateidentityproviderconfig",
            "createaddon",
            "createfargateprofile",
            "createnodegroup",
            "deletecluster",
            "describecluster",
            "describeupdate",
            "listaddons",
            "listfargateprofiles",
            "listidentityproviderconfigs",
            "listnodegroups",
            "listtagsforresource",
            "listupdates",
            "tagresource",
            "untagresource",
            "updateclusterconfig",
            "updateclusterversion"
        ],
        "": [
            "associateidentityproviderconfig",
            "createaddon",
            "createcluster",
            "createfargateprofile",
            "createnodegroup",
            "describeaddonversions",
            "listclusters",
            "tagresource",
            "untagresource"
        ],
        "addon": [
            "deleteaddon",
            "describeaddon",
            "describeupdate",
            "listtagsforresource",
            "listupdates",
            "tagresource",
            "untagresource",
            "updateaddon"
        ],
        "fargateprofile": [
            "deletefargateprofile",
            "describefargateprofile",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "nodegroup": [
            "deletenodegroup",
            "describenodegroup",
            "describeupdate",
            "listtagsforresource",
            "listupdates",
            "tagresource",
            "untagresource",
            "updatenodegroupconfig",
            "updatenodegroupversion"
        ],
        "identityproviderconfig": [
            "describeidentityproviderconfig",
            "disassociateidentityproviderconfig",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ]
    },
    "elasticloadbalancing": {
        "listener/app": [
            "addlistenercertificates",
            "addtags",
            "createrule",
            "deletelistener",
            "describetags",
            "modifylistener",
            "removelistenercertificates",
            "removetags"
        ],
        "listener/net": [
            "addlistenercertificates",
            "addtags",
            "createrule",
            "deletelistener",
            "describetags",
            "modifylistener",
            "removelistenercertificates",
            "removetags"
        ],
        "listener-rule/app": [
            "addtags",
            "deleterule",
            "describetags",
            "modifyrule",
            "removetags",
            "setrulepriorities"
        ],
        "listener-rule/net": [
            "addtags",
            "deleterule",
            "describetags",
            "modifyrule",
            "removetags",
            "setrulepriorities"
        ],
        "loadbalancer/app/": [
            "addtags",
            "createlistener",
            "createloadbalancer",
            "deleteloadbalancer",
            "describetags",
            "modifyloadbalancerattributes",
            "removetags",
            "setipaddresstype",
            "setsecuritygroups",
            "setsubnets"
        ],
        "loadbalancer/net/": [
            "addtags",
            "createlistener",
            "createloadbalancer",
            "deleteloadbalancer",
            "describetags",
            "modifyloadbalancerattributes",
            "removetags",
            "setipaddresstype",
            "setsecuritygroups",
            "setsubnets"
        ],
        "targetgroup": [
            "addtags",
            "createtargetgroup",
            "deletetargetgroup",
            "deregistertargets",
            "describetags",
            "modifytargetgroup",
            "modifytargetgroupattributes",
            "registertargets",
            "removetags"
        ],
        "": [
            "addtags",
            "createlistener",
            "createloadbalancer",
            "createrule",
            "createtargetgroup",
            "describeaccountlimits",
            "describelistenercertificates",
            "describelisteners",
            "describeloadbalancerattributes",
            "describeloadbalancers",
            "describerules",
            "describesslpolicies",
            "describetargetgroupattributes",
            "describetargetgroups",
            "describetargethealth",
            "removetags",
            "setwebacl"
        ]
    },
    "elasticmapreduce": {
        "cluster": [
            "addinstancefleet",
            "addinstancegroups",
            "addjobflowsteps",
            "addtags",
            "cancelsteps",
            "createeditor",
            "describecluster",
            "describejobflows",
            "describestep",
            "getmanagedscalingpolicy",
            "listbootstrapactions",
            "listinstancefleets",
            "listinstancegroups",
            "listinstances",
            "liststeps",
            "modifycluster",
            "modifyinstancefleet",
            "modifyinstancegroups",
            "openeditorinconsole",
            "putautoscalingpolicy",
            "putmanagedscalingpolicy",
            "removeautoscalingpolicy",
            "removemanagedscalingpolicy",
            "removetags",
            "setterminationprotection",
            "starteditor",
            "startnotebookexecution",
            "terminatejobflows"
        ],
        "editor": [
            "addtags",
            "deleteeditor",
            "describeeditor",
            "openeditorinconsole",
            "removetags",
            "starteditor",
            "startnotebookexecution",
            "stopeditor"
        ],
        "": [
            "addtags",
            "createeditor",
            "createrepository",
            "createsecurityconfiguration",
            "createstudio",
            "deleterepository",
            "deletesecurityconfiguration",
            "describerepository",
            "describesecurityconfiguration",
            "getblockpublicaccessconfiguration",
            "linkrepository",
            "listclusters",
            "listeditors",
            "listnotebookexecutions",
            "listrepositories",
            "listsecurityconfigurations",
            "liststudiosessionmappings",
            "liststudios",
            "putblockpublicaccessconfiguration",
            "removetags",
            "runjobflow",
            "startnotebookexecution",
            "unlinkrepository",
            "updaterepository",
            "vieweventsfromallclustersinconsole"
        ],
        "studio": [
            "createstudiosessionmapping",
            "deletestudio",
            "deletestudiosessionmapping",
            "describestudio",
            "getstudiosessionmapping",
            "updatestudio",
            "updatestudiosessionmapping"
        ],
        "notebook-execution": [
            "describenotebookexecution",
            "stopnotebookexecution"
        ]
    },
    "elastictranscoder": {
        "job": [
            "canceljob",
            "readjob"
        ],
        "pipeline": [
            "createjob",
            "createpipeline",
            "deletepipeline",
            "listjobsbypipeline",
            "readpipeline",
            "updatepipeline",
            "updatepipelinenotifications",
            "updatepipelinestatus"
        ],
        "preset": [
            "createjob",
            "createpreset",
            "deletepreset",
            "readpreset"
        ],
        "": [
            "listjobsbystatus",
            "listpipelines",
            "listpresets",
            "testrole"
        ]
    },
    "elasticache": {
        "cluster": [
            "addtagstoresource",
            "batchapplyupdateaction",
            "batchstopupdateaction",
            "completemigration",
            "createcachecluster",
            "createreplicationgroup",
            "createsnapshot",
            "deletecachecluster",
            "describecacheclusters",
            "describeupdateactions",
            "listallowednodetypemodifications",
            "listtagsforresource",
            "modifycachecluster",
            "rebootcachecluster",
            "removetagsfromresource"
        ],
        "parametergroup": [
            "addtagstoresource",
            "createcachecluster",
            "createcacheparametergroup",
            "createreplicationgroup",
            "deletecacheparametergroup",
            "describecacheparametergroups",
            "describecacheparameters",
            "modifycachecluster",
            "modifycacheparametergroup",
            "modifyreplicationgroup",
            "removetagsfromresource",
            "resetcacheparametergroup"
        ],
        "replicationgroup": [
            "addtagstoresource",
            "batchapplyupdateaction",
            "batchstopupdateaction",
            "completemigration",
            "createcachecluster",
            "createglobalreplicationgroup",
            "createreplicationgroup",
            "createsnapshot",
            "decreasereplicacount",
            "deletereplicationgroup",
            "describereplicationgroups",
            "describeupdateactions",
            "increasereplicacount",
            "listallowednodetypemodifications",
            "modifyreplicationgroup",
            "modifyreplicationgroupshardconfiguration",
            "removetagsfromresource",
            "startmigration",
            "testfailover"
        ],
        "reserved-instance": [
            "addtagstoresource",
            "describereservedcachenodes",
            "purchasereservedcachenodesoffering",
            "removetagsfromresource"
        ],
        "securitygroup": [
            "addtagstoresource",
            "authorizecachesecuritygroupingress",
            "createcachecluster",
            "createcachesecuritygroup",
            "createreplicationgroup",
            "deletecachesecuritygroup",
            "describecachesecuritygroups",
            "modifycachecluster",
            "modifyreplicationgroup",
            "removetagsfromresource",
            "revokecachesecuritygroupingress"
        ],
        "snapshot": [
            "addtagstoresource",
            "copysnapshot",
            "createcachecluster",
            "createreplicationgroup",
            "createsnapshot",
            "deletecachecluster",
            "deletereplicationgroup",
            "deletesnapshot",
            "describesnapshots",
            "listtagsforresource",
            "removetagsfromresource"
        ],
        "subnetgroup": [
            "addtagstoresource",
            "createcachecluster",
            "createcachesubnetgroup",
            "createreplicationgroup",
            "deletecachesubnetgroup",
            "describecachesubnetgroups",
            "modifycachesubnetgroup",
            "removetagsfromresource"
        ],
        "user": [
            "addtagstoresource",
            "createuser",
            "createusergroup",
            "deleteuser",
            "describeusers",
            "modifyuser",
            "modifyusergroup",
            "removetagsfromresource"
        ],
        "usergroup": [
            "addtagstoresource",
            "createreplicationgroup",
            "createusergroup",
            "deleteusergroup",
            "describeusergroups",
            "modifyreplicationgroup",
            "modifyusergroup",
            "removetagsfromresource"
        ],
        "": [
            "addtagstoresource",
            "authorizecachesecuritygroupingress",
            "batchapplyupdateaction",
            "batchstopupdateaction",
            "completemigration",
            "copysnapshot",
            "createcachecluster",
            "createcacheparametergroup",
            "createcachesecuritygroup",
            "createcachesubnetgroup",
            "createglobalreplicationgroup",
            "createreplicationgroup",
            "createsnapshot",
            "createuser",
            "createusergroup",
            "decreasenodegroupsinglobalreplicationgroup",
            "decreasereplicacount",
            "deletecachecluster",
            "deletecacheparametergroup",
            "deletecachesecuritygroup",
            "deletecachesubnetgroup",
            "deletereplicationgroup",
            "deletesnapshot",
            "deleteuser",
            "deleteusergroup",
            "describecacheclusters",
            "describecacheengineversions",
            "describecacheparametergroups",
            "describecacheparameters",
            "describecachesecuritygroups",
            "describecachesubnetgroups",
            "describeenginedefaultparameters",
            "describeevents",
            "describereplicationgroups",
            "describereservedcachenodes",
            "describereservedcachenodesofferings",
            "describeserviceupdates",
            "describesnapshots",
            "describeupdateactions",
            "describeusergroups",
            "describeusers",
            "increasenodegroupsinglobalreplicationgroup",
            "increasereplicacount",
            "listallowednodetypemodifications",
            "listtagsforresource",
            "modifycachecluster",
            "modifycacheparametergroup",
            "modifycachesubnetgroup",
            "modifyglobalreplicationgroup",
            "modifyreplicationgroup",
            "modifyreplicationgroupshardconfiguration",
            "modifyuser",
            "modifyusergroup",
            "purchasereservedcachenodesoffering",
            "rebootcachecluster",
            "removetagsfromresource",
            "resetcacheparametergroup",
            "revokecachesecuritygroupingress",
            "startmigration",
            "testfailover"
        ],
        "globalreplicationgroup": [
            "createglobalreplicationgroup",
            "createreplicationgroup",
            "decreasenodegroupsinglobalreplicationgroup",
            "deleteglobalreplicationgroup",
            "describeglobalreplicationgroups",
            "disassociateglobalreplicationgroup",
            "failoverglobalreplicationgroup",
            "increasenodegroupsinglobalreplicationgroup",
            "modifyglobalreplicationgroup",
            "rebalanceslotsinglobalreplicationgroup"
        ]
    },
    "es": {
        "": [
            "acceptinboundcrossclustersearchconnection",
            "createelasticsearchservicerole",
            "createpackage",
            "deleteelasticsearchservicerole",
            "deleteinboundcrossclustersearchconnection",
            "deleteoutboundcrossclustersearchconnection",
            "deletepackage",
            "describeelasticsearchinstancetypelimits",
            "describeinboundcrossclustersearchconnections",
            "describeoutboundcrossclustersearchconnections",
            "describepackages",
            "describereservedelasticsearchinstanceofferings",
            "describereservedelasticsearchinstances",
            "getpackageversionhistory",
            "listdomainnames",
            "listdomainsforpackage",
            "listelasticsearchinstancetypedetails",
            "listelasticsearchinstancetypes",
            "listelasticsearchversions",
            "purchasereservedelasticsearchinstanceoffering",
            "rejectinboundcrossclustersearchconnection",
            "updatepackage"
        ],
        "domain": [
            "addtags",
            "associatepackage",
            "createelasticsearchdomain",
            "createoutboundcrossclustersearchconnection",
            "deleteelasticsearchdomain",
            "describeelasticsearchdomain",
            "describeelasticsearchdomainconfig",
            "describeelasticsearchdomains",
            "dissociatepackage",
            "escrossclusterget",
            "eshttpdelete",
            "eshttpget",
            "eshttphead",
            "eshttppatch",
            "eshttppost",
            "eshttpput",
            "getcompatibleelasticsearchversions",
            "getupgradehistory",
            "getupgradestatus",
            "listpackagesfordomain",
            "listtags",
            "removetags",
            "updateelasticsearchdomainconfig",
            "upgradeelasticsearchdomain"
        ]
    },
    "elemental-appliances-software": {
        "quote": [
            "createquote",
            "getquote",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatequote"
        ],
        "": [
            "createquote",
            "listquotes",
            "tagresource",
            "untagresource"
        ]
    },
    "elemental-activations": {
        "": [
            "completeaccountregistration",
            "completefileupload",
            "downloadsoftware",
            "generatelicenses",
            "startaccountregistration",
            "startfileupload",
            "tagresource",
            "untagresource"
        ],
        "activation": [
            "getactivation",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ]
    },
    "mediaconnect": {
        "": [
            "addflowoutputs",
            "addflowsources",
            "addflowvpcinterfaces",
            "createflow",
            "deleteflow",
            "describeflow",
            "describeoffering",
            "describereservation",
            "grantflowentitlements",
            "listentitlements",
            "listflows",
            "listofferings",
            "listreservations",
            "listtagsforresource",
            "purchaseoffering",
            "removeflowoutput",
            "removeflowsource",
            "removeflowvpcinterface",
            "revokeflowentitlement",
            "startflow",
            "stopflow",
            "tagresource",
            "untagresource",
            "updateflow",
            "updateflowentitlement",
            "updateflowoutput",
            "updateflowsource"
        ]
    },
    "mediaconvert": {
        "": [
            "associatecertificate",
            "createjobtemplate",
            "createpreset",
            "createqueue",
            "describeendpoints",
            "disassociatecertificate",
            "listjobtemplates",
            "listpresets",
            "listqueues",
            "tagresource",
            "untagresource"
        ],
        "Job": [
            "canceljob",
            "getjob"
        ],
        "JobTemplate": [
            "createjob",
            "deletejobtemplate",
            "getjobtemplate",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatejobtemplate"
        ],
        "Preset": [
            "createjob",
            "createjobtemplate",
            "deletepreset",
            "getpreset",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatejobtemplate",
            "updatepreset"
        ],
        "Queue": [
            "createjob",
            "createjobtemplate",
            "deletequeue",
            "getqueue",
            "listjobs",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatejobtemplate",
            "updatequeue"
        ]
    },
    "medialive": {
        "input-device": [
            "acceptinputdevicetransfer",
            "cancelinputdevicetransfer",
            "describeinputdevice",
            "describeinputdevicethumbnail",
            "rejectinputdevicetransfer",
            "transferinputdevice",
            "updateinputdevice"
        ],
        "channel": [
            "batchdelete",
            "batchstart",
            "batchstop",
            "batchupdateschedule",
            "createchannel",
            "createtags",
            "deletechannel",
            "deleteschedule",
            "deletetags",
            "describechannel",
            "describeschedule",
            "listtagsforresource",
            "startchannel",
            "stopchannel",
            "updatechannel",
            "updatechannelclass"
        ],
        "input": [
            "batchdelete",
            "createchannel",
            "createinput",
            "createtags",
            "deleteinput",
            "deletetags",
            "describeinput",
            "listtagsforresource",
            "updateinput"
        ],
        "input-security-group": [
            "batchdelete",
            "createinput",
            "createinputsecuritygroup",
            "createtags",
            "deleteinputsecuritygroup",
            "deletetags",
            "describeinputsecuritygroup",
            "listtagsforresource",
            "updateinputsecuritygroup"
        ],
        "multiplex": [
            "batchdelete",
            "batchstart",
            "batchstop",
            "createmultiplex",
            "createmultiplexprogram",
            "createtags",
            "deletemultiplex",
            "deletemultiplexprogram",
            "deletetags",
            "describemultiplex",
            "describemultiplexprogram",
            "listtagsforresource",
            "startmultiplex",
            "stopmultiplex",
            "updatemultiplex",
            "updatemultiplexprogram"
        ],
        "": [
            "createchannel",
            "createinput",
            "createinputsecuritygroup",
            "createmultiplex",
            "createtags",
            "deletetags",
            "listchannels",
            "listinputdevicetransfers",
            "listinputdevices",
            "listinputsecuritygroups",
            "listinputs",
            "listmultiplexprograms",
            "listmultiplexes",
            "listofferings",
            "listreservations",
            "purchaseoffering"
        ],
        "reservation": [
            "createtags",
            "deletereservation",
            "deletetags",
            "describereservation",
            "listtagsforresource",
            "purchaseoffering",
            "updatereservation"
        ],
        "offering": [
            "describeoffering",
            "purchaseoffering"
        ]
    },
    "mediapackage": {
        "": [
            "createchannel",
            "createharvestjob",
            "createoriginendpoint",
            "listchannels",
            "listharvestjobs",
            "listoriginendpoints",
            "tagresource",
            "untagresource"
        ],
        "channels": [
            "deletechannel",
            "describechannel",
            "listtagsforresource",
            "rotatechannelcredentials",
            "rotateingestendpointcredentials",
            "tagresource",
            "untagresource",
            "updatechannel"
        ],
        "origin_endpoints": [
            "deleteoriginendpoint",
            "describeoriginendpoint",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateoriginendpoint"
        ],
        "harvest_jobs": [
            "describeharvestjob",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ]
    },
    "mediapackage-vod": {
        "": [
            "createasset",
            "createpackagingconfiguration",
            "createpackaginggroup",
            "listassets",
            "listpackagingconfigurations",
            "listpackaginggroups",
            "tagresource",
            "untagresource"
        ],
        "assets": [
            "deleteasset",
            "describeasset",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "packaging-configurations": [
            "deletepackagingconfiguration",
            "describepackagingconfiguration",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "packaging-groups": [
            "deletepackaginggroup",
            "describepackaginggroup",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatepackaginggroup"
        ]
    },
    "mediastore": {
        "": [
            "createcontainer",
            "deletecontainer",
            "deletecontainerpolicy",
            "deletecorspolicy",
            "deletelifecyclepolicy",
            "deletemetricpolicy",
            "deleteobject",
            "describecontainer",
            "describeobject",
            "getcontainerpolicy",
            "getcorspolicy",
            "getlifecyclepolicy",
            "getmetricpolicy",
            "getobject",
            "listcontainers",
            "listitems",
            "listtagsforresource",
            "putcontainerpolicy",
            "putcorspolicy",
            "putlifecyclepolicy",
            "putmetricpolicy",
            "putobject",
            "startaccesslogging",
            "stopaccesslogging",
            "tagresource",
            "untagresource"
        ]
    },
    "mediatailor": {
        "playbackConfiguration": [
            "deleteplaybackconfiguration",
            "getplaybackconfiguration",
            "putplaybackconfiguration"
        ],
        "": [
            "listplaybackconfigurations",
            "listtagsforresource",
            "putplaybackconfiguration",
            "tagresource",
            "untagresource"
        ]
    },
    "elemental-support-cases": {
        "": [
            "checkcasepermission",
            "createcase",
            "getcase",
            "getcases",
            "updatecase"
        ]
    },
    "elemental-support-content": {
        "": [
            "query"
        ]
    },
    "emr-containers": {
        "jobRun": [
            "canceljobrun",
            "describejobrun",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "virtualCluster": [
            "createmanagedendpoint",
            "deletevirtualcluster",
            "describevirtualcluster",
            "listjobruns",
            "listmanagedendpoints",
            "listtagsforresource",
            "startjobrun",
            "tagresource",
            "untagresource"
        ],
        "": [
            "createmanagedendpoint",
            "createvirtualcluster",
            "listvirtualclusters",
            "startjobrun",
            "tagresource",
            "untagresource"
        ],
        "managedEndpoint": [
            "deletemanagedendpoint",
            "describemanagedendpoint",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ]
    },
    "events": {
        "event-source": [
            "activateeventsource",
            "createpartnereventsource",
            "deactivateeventsource",
            "deletepartnereventsource",
            "describeeventsource",
            "describepartnereventsource",
            "listpartnereventsourceaccounts"
        ],
        "replay": [
            "cancelreplay",
            "describereplay"
        ],
        "api-destination": [
            "createapidestination",
            "deleteapidestination",
            "describeapidestination",
            "invokeapidestination",
            "updateapidestination"
        ],
        "connection": [
            "createapidestination",
            "createconnection",
            "deauthorizeconnection",
            "deleteconnection",
            "describeapidestination",
            "describeconnection",
            "updateconnection"
        ],
        "archive": [
            "createarchive",
            "deletearchive",
            "describearchive",
            "startreplay",
            "updatearchive"
        ],
        "event-bus": [
            "createeventbus",
            "deleteeventbus",
            "describeeventbus",
            "listtagsforresource",
            "putevents",
            "tagresource",
            "untagresource"
        ],
        "": [
            "createeventbus",
            "deleterule",
            "describerule",
            "disablerule",
            "enablerule",
            "listapidestinations",
            "listarchives",
            "listconnections",
            "listeventbuses",
            "listeventsources",
            "listpartnereventsources",
            "listreplays",
            "listrulenamesbytarget",
            "listrules",
            "listtagsforresource",
            "listtargetsbyrule",
            "putevents",
            "putpartnerevents",
            "putpermission",
            "putrule",
            "puttargets",
            "removepermission",
            "removetargets",
            "tagresource",
            "testeventpattern",
            "untagresource"
        ],
        "rule": [
            "deleterule",
            "describerule",
            "disablerule",
            "enablerule",
            "listtagsforresource",
            "listtargetsbyrule",
            "putrule",
            "puttargets",
            "removetargets",
            "tagresource",
            "untagresource"
        ]
    },
    "schemas": {
        "discoverer": [
            "creatediscoverer",
            "deletediscoverer",
            "describediscoverer",
            "listdiscoverers",
            "listtagsforresource",
            "startdiscoverer",
            "stopdiscoverer",
            "tagresource",
            "untagresource",
            "updatediscoverer"
        ],
        "registry": [
            "createregistry",
            "deleteregistry",
            "deleteresourcepolicy",
            "describeregistry",
            "exportschema",
            "getresourcepolicy",
            "listregistries",
            "listtagsforresource",
            "putresourcepolicy",
            "tagresource",
            "untagresource",
            "updateregistry"
        ],
        "schema": [
            "createschema",
            "deleteschema",
            "deleteschemaversion",
            "describecodebinding",
            "describeschema",
            "exportschema",
            "getcodebindingsource",
            "listschemaversions",
            "listschemas",
            "listtagsforresource",
            "putcodebinding",
            "searchschemas",
            "tagresource",
            "untagresource",
            "updateschema"
        ],
        "": [
            "getdiscoveredschema",
            "tagresource",
            "untagresource"
        ]
    },
    "fis": {
        "action": [
            "createexperimenttemplate",
            "getaction",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateexperimenttemplate"
        ],
        "experiment-template": [
            "createexperimenttemplate",
            "deleteexperimenttemplate",
            "getexperimenttemplate",
            "listtagsforresource",
            "startexperiment",
            "tagresource",
            "untagresource",
            "updateexperimenttemplate"
        ],
        "": [
            "createexperimenttemplate",
            "getaction",
            "getexperiment",
            "getexperimenttemplate",
            "injectapiinternalerror",
            "injectapithrottleerror",
            "injectapiunavailableerror",
            "listactions",
            "listexperimenttemplates",
            "listexperiments",
            "startexperiment",
            "tagresource",
            "untagresource",
            "updateexperimenttemplate"
        ],
        "experiment": [
            "getexperiment",
            "injectapiinternalerror",
            "injectapithrottleerror",
            "injectapiunavailableerror",
            "listtagsforresource",
            "startexperiment",
            "stopexperiment",
            "tagresource",
            "untagresource"
        ]
    },
    "fms": {
        "": [
            "associateadminaccount",
            "deletenotificationchannel",
            "deletepolicy",
            "disassociateadminaccount",
            "getadminaccount",
            "getnotificationchannel",
            "listappslists",
            "listmemberaccounts",
            "listpolicies",
            "listprotocolslists",
            "putappslist",
            "putnotificationchannel",
            "putpolicy",
            "putprotocolslist",
            "tagresource",
            "untagresource"
        ],
        "applications-list": [
            "deleteappslist",
            "getappslist",
            "putappslist"
        ],
        "policy": [
            "deletepolicy",
            "getcompliancedetail",
            "getpolicy",
            "getprotectionstatus",
            "getviolationdetails",
            "listcompliancestatus",
            "listtagsforresource",
            "putpolicy",
            "tagresource",
            "untagresource"
        ],
        "protocols-list": [
            "deleteprotocolslist",
            "getprotocolslist",
            "putprotocolslist"
        ]
    },
    "forecast": {
        "dataset": [
            "createdataset",
            "deletedataset",
            "describedataset",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedatasetgroup"
        ],
        "": [
            "createdataset",
            "createdatasetgroup",
            "createdatasetimportjob",
            "createforecast",
            "createforecastexportjob",
            "createpredictor",
            "createpredictorbacktestexportjob",
            "listdatasetgroups",
            "listdatasetimportjobs",
            "listdatasets",
            "listforecastexportjobs",
            "listforecasts",
            "listpredictorbacktestexportjobs",
            "listpredictors",
            "stopresource",
            "tagresource",
            "untagresource"
        ],
        "datasetGroup": [
            "createdatasetgroup",
            "createpredictor",
            "deletedatasetgroup",
            "describedatasetgroup",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedatasetgroup"
        ],
        "datasetImportJob": [
            "createdatasetimportjob",
            "deletedatasetimportjob",
            "describedatasetimportjob",
            "listtagsforresource",
            "stopresource",
            "tagresource",
            "untagresource"
        ],
        "predictor": [
            "createforecast",
            "createpredictorbacktestexportjob",
            "deletepredictor",
            "describepredictor",
            "getaccuracymetrics",
            "listtagsforresource",
            "stopresource",
            "tagresource",
            "untagresource"
        ],
        "forecast": [
            "createforecastexportjob",
            "deleteforecast",
            "describeforecast",
            "listtagsforresource",
            "queryforecast",
            "stopresource",
            "tagresource",
            "untagresource"
        ],
        "forecastExport": [
            "deleteforecastexportjob",
            "describeforecastexportjob",
            "listtagsforresource",
            "stopresource",
            "tagresource",
            "untagresource"
        ],
        "predictorBacktestExportJob": [
            "deletepredictorbacktestexportjob",
            "describepredictorbacktestexportjob",
            "listtagsforresource",
            "stopresource",
            "tagresource",
            "untagresource"
        ]
    },
    "frauddetector": {
        "": [
            "batchcreatevariable",
            "createbatchpredictionjob",
            "createdetectorversion",
            "createmodel",
            "createmodelversion",
            "createrule",
            "createvariable",
            "deleteevent",
            "geteventprediction",
            "getkmsencryptionkey",
            "putdetector",
            "putentitytype",
            "puteventtype",
            "putexternalmodel",
            "putkmsencryptionkey",
            "putlabel",
            "putoutcome",
            "tagresource",
            "untagresource",
            "updatemodelversion",
            "updatemodelversionstatus",
            "updateruleversion"
        ],
        "variable": [
            "batchgetvariable",
            "deletevariable",
            "getvariables",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatevariable"
        ],
        "batch-prediction": [
            "cancelbatchpredictionjob",
            "createbatchpredictionjob",
            "deletebatchpredictionjob",
            "getbatchpredictionjobs"
        ],
        "detector": [
            "createbatchpredictionjob",
            "createdetectorversion",
            "createrule",
            "deletedetector",
            "describedetector",
            "getdetectors",
            "listtagsforresource",
            "putdetector",
            "tagresource",
            "untagresource",
            "updatedetectorversion"
        ],
        "detector-version": [
            "createbatchpredictionjob",
            "deletedetectorversion",
            "getdetectorversion",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedetectorversionmetadata",
            "updatedetectorversionstatus"
        ],
        "event-type": [
            "createbatchpredictionjob",
            "deleteeventtype",
            "geteventtypes",
            "listtagsforresource",
            "puteventtype",
            "tagresource",
            "untagresource"
        ],
        "model": [
            "createmodel",
            "createmodelversion",
            "deletemodel",
            "getmodels",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatemodel",
            "updatemodelversion"
        ],
        "entity-type": [
            "deleteentitytype",
            "getentitytypes",
            "listtagsforresource",
            "putentitytype",
            "tagresource",
            "untagresource"
        ],
        "external-model": [
            "deleteexternalmodel",
            "getexternalmodels",
            "listtagsforresource",
            "putexternalmodel",
            "tagresource",
            "untagresource"
        ],
        "label": [
            "deletelabel",
            "getlabels",
            "listtagsforresource",
            "putlabel",
            "tagresource",
            "untagresource"
        ],
        "model-version": [
            "deletemodelversion",
            "describemodelversions",
            "getmodelversion",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "outcome": [
            "deleteoutcome",
            "getoutcomes",
            "listtagsforresource",
            "putoutcome",
            "tagresource",
            "untagresource"
        ],
        "rule": [
            "deleterule",
            "getrules",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updaterulemetadata",
            "updateruleversion"
        ]
    },
    "freertos": {
        "configuration": [
            "createsoftwareconfiguration",
            "deletesoftwareconfiguration",
            "describesoftwareconfiguration",
            "updatesoftwareconfiguration"
        ],
        "": [
            "createsoftwareconfiguration",
            "describehardwareplatform",
            "getsoftwareurl",
            "getsoftwareurlforconfiguration",
            "listfreertosversions",
            "listhardwareplatforms",
            "listhardwarevendors",
            "listsoftwareconfigurations"
        ]
    },
    "fsx": {
        "file-system": [
            "associatefilegateway",
            "associatefilesystemaliases",
            "createbackup",
            "createdatarepositorytask",
            "createfilesystem",
            "createfilesystemfrombackup",
            "deletefilesystem",
            "describeassociatedfilegateways",
            "describefilesystemaliases",
            "disassociatefilegateway",
            "disassociatefilesystemaliases",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatefilesystem"
        ],
        "task": [
            "canceldatarepositorytask",
            "createdatarepositorytask",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "backup": [
            "copybackup",
            "createbackup",
            "createfilesystemfrombackup",
            "deletebackup",
            "listtagsforresource",
            "managebackupprincipalassociations",
            "tagresource",
            "untagresource"
        ],
        "": [
            "copybackup",
            "createbackup",
            "createdatarepositorytask",
            "createfilesystem",
            "createfilesystemfrombackup",
            "describebackups",
            "describedatarepositorytasks",
            "describefilesystems",
            "tagresource",
            "untagresource"
        ]
    },
    "gamelift": {
        "": [
            "acceptmatch",
            "createalias",
            "createbuild",
            "createfleet",
            "creategameservergroup",
            "creategamesession",
            "creategamesessionqueue",
            "creatematchmakingconfiguration",
            "creatematchmakingruleset",
            "createplayersession",
            "createplayersessions",
            "createscript",
            "createvpcpeeringauthorization",
            "createvpcpeeringconnection",
            "deletevpcpeeringauthorization",
            "deletevpcpeeringconnection",
            "describeec2instancelimits",
            "describefleetattributes",
            "describefleetcapacity",
            "describefleetutilization",
            "describegamesessiondetails",
            "describegamesessionplacement",
            "describegamesessionqueues",
            "describegamesessions",
            "describematchmaking",
            "describematchmakingconfigurations",
            "describematchmakingrulesets",
            "describeplayersessions",
            "describevpcpeeringauthorizations",
            "describevpcpeeringconnections",
            "getgamesessionlogurl",
            "listaliases",
            "listbuilds",
            "listfleets",
            "listgameservergroups",
            "listscripts",
            "searchgamesessions",
            "startmatchbackfill",
            "startmatchmaking",
            "stopgamesessionplacement",
            "stopmatchmaking",
            "tagresource",
            "untagresource",
            "updategamesession",
            "validatematchmakingruleset"
        ],
        "gameServerGroup": [
            "claimgameserver",
            "deletegameservergroup",
            "deregistergameserver",
            "describegameserver",
            "describegameservergroup",
            "describegameserverinstances",
            "listgameservers",
            "listtagsforresource",
            "registergameserver",
            "resumegameservergroup",
            "suspendgameservergroup",
            "tagresource",
            "untagresource",
            "updategameserver",
            "updategameservergroup"
        ],
        "fleet": [
            "createfleetlocations",
            "deletefleet",
            "deletefleetlocations",
            "deletescalingpolicy",
            "describefleetevents",
            "describefleetlocationattributes",
            "describefleetlocationcapacity",
            "describefleetlocationutilization",
            "describefleetportsettings",
            "describeinstances",
            "describeruntimeconfiguration",
            "describescalingpolicies",
            "getinstanceaccess",
            "listtagsforresource",
            "putscalingpolicy",
            "startfleetactions",
            "stopfleetactions",
            "tagresource",
            "untagresource",
            "updatefleetattributes",
            "updatefleetcapacity",
            "updatefleetportsettings",
            "updateruntimeconfiguration"
        ],
        "alias": [
            "deletealias",
            "describealias",
            "listtagsforresource",
            "resolvealias",
            "tagresource",
            "untagresource",
            "updatealias"
        ],
        "build": [
            "deletebuild",
            "describebuild",
            "listtagsforresource",
            "requestuploadcredentials",
            "tagresource",
            "untagresource",
            "updatebuild"
        ],
        "gameSessionQueue": [
            "deletegamesessionqueue",
            "listtagsforresource",
            "startgamesessionplacement",
            "tagresource",
            "untagresource",
            "updategamesessionqueue"
        ],
        "matchmakingConfiguration": [
            "deletematchmakingconfiguration",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatematchmakingconfiguration"
        ],
        "matchmakingRuleSet": [
            "deletematchmakingruleset",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "script": [
            "deletescript",
            "describescript",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatescript"
        ]
    },
    "glacier": {
        "vault": [
            "abortmultipartupload",
            "abortvaultlock",
            "addtagstovault",
            "completemultipartupload",
            "completevaultlock",
            "createvault",
            "deletearchive",
            "deletevault",
            "deletevaultaccesspolicy",
            "deletevaultnotifications",
            "describejob",
            "describevault",
            "getjoboutput",
            "getvaultaccesspolicy",
            "getvaultlock",
            "getvaultnotifications",
            "initiatejob",
            "initiatemultipartupload",
            "initiatevaultlock",
            "listjobs",
            "listmultipartuploads",
            "listparts",
            "listtagsforvault",
            "removetagsfromvault",
            "setvaultaccesspolicy",
            "setvaultnotifications",
            "uploadarchive",
            "uploadmultipartpart"
        ],
        "": [
            "deletearchive",
            "getdataretrievalpolicy",
            "initiatejob",
            "listprovisionedcapacity",
            "listvaults",
            "purchaseprovisionedcapacity",
            "setdataretrievalpolicy"
        ]
    },
    "globalaccelerator": {
        "endpointgroup": [
            "addcustomroutingendpoints",
            "allowcustomroutingtraffic",
            "deletecustomroutingendpointgroup",
            "deleteendpointgroup",
            "denycustomroutingtraffic",
            "describecustomroutingendpointgroup",
            "describeendpointgroup",
            "removecustomroutingendpoints",
            "updateendpointgroup"
        ],
        "": [
            "advertisebyoipcidr",
            "createaccelerator",
            "createcustomroutingaccelerator",
            "deprovisionbyoipcidr",
            "listaccelerators",
            "listbyoipcidrs",
            "listcustomroutingaccelerators",
            "listcustomroutingportmappingsbydestination",
            "provisionbyoipcidr",
            "tagresource",
            "untagresource",
            "withdrawbyoipcidr"
        ],
        "listener": [
            "createcustomroutingendpointgroup",
            "createendpointgroup",
            "deletecustomroutinglistener",
            "deletelistener",
            "describecustomroutinglistener",
            "describelistener",
            "listcustomroutingendpointgroups",
            "listendpointgroups",
            "updatecustomroutinglistener",
            "updatelistener"
        ],
        "accelerator": [
            "createcustomroutinglistener",
            "createlistener",
            "deleteaccelerator",
            "deletecustomroutingaccelerator",
            "describeaccelerator",
            "describeacceleratorattributes",
            "describecustomroutingaccelerator",
            "describecustomroutingacceleratorattributes",
            "listcustomroutinglisteners",
            "listcustomroutingportmappings",
            "listlisteners",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateaccelerator",
            "updateacceleratorattributes",
            "updatecustomroutingaccelerator",
            "updatecustomroutingacceleratorattributes"
        ]
    },
    "glue": {
        "catalog": [
            "batchcreatepartition",
            "batchdeleteconnection",
            "batchdeletepartition",
            "batchdeletetable",
            "batchdeletetableversion",
            "batchgetpartition",
            "createconnection",
            "createdatabase",
            "createpartition",
            "createtable",
            "createuserdefinedfunction",
            "deleteconnection",
            "deletedatabase",
            "deletepartition",
            "deleteresourcepolicy",
            "deletetable",
            "deletetableversion",
            "deleteuserdefinedfunction",
            "getcatalogimportstatus",
            "getconnection",
            "getconnections",
            "getdatabase",
            "getdatabases",
            "getpartition",
            "getpartitions",
            "getresourcepolicies",
            "getresourcepolicy",
            "gettable",
            "gettableversion",
            "gettableversions",
            "gettables",
            "getuserdefinedfunction",
            "getuserdefinedfunctions",
            "importcatalogtoglue",
            "putresourcepolicy",
            "searchtables",
            "updateconnection",
            "updatedatabase",
            "updatepartition",
            "updatetable",
            "updateuserdefinedfunction"
        ],
        "database": [
            "batchcreatepartition",
            "batchdeletepartition",
            "batchdeletetable",
            "batchdeletetableversion",
            "batchgetpartition",
            "createdatabase",
            "createpartition",
            "createtable",
            "createuserdefinedfunction",
            "deletedatabase",
            "deletepartition",
            "deletetable",
            "deletetableversion",
            "deleteuserdefinedfunction",
            "getdatabase",
            "getdatabases",
            "getpartition",
            "getpartitions",
            "gettable",
            "gettableversion",
            "gettableversions",
            "gettables",
            "getuserdefinedfunction",
            "getuserdefinedfunctions",
            "searchtables",
            "updatedatabase",
            "updatepartition",
            "updatetable",
            "updateuserdefinedfunction"
        ],
        "table": [
            "batchcreatepartition",
            "batchdeletepartition",
            "batchdeletetable",
            "batchdeletetableversion",
            "batchgetpartition",
            "createpartition",
            "createtable",
            "deletepartition",
            "deletetable",
            "deletetableversion",
            "getpartition",
            "getpartitions",
            "gettable",
            "gettableversion",
            "gettableversions",
            "gettables",
            "searchtables",
            "updatepartition",
            "updatetable"
        ],
        "connection": [
            "batchdeleteconnection",
            "createconnection",
            "deleteconnection",
            "getconnection",
            "getconnections",
            "updateconnection"
        ],
        "tableversion": [
            "batchdeletetableversion",
            "deletetableversion",
            "gettableversion",
            "gettableversions"
        ],
        "": [
            "batchgetcrawlers",
            "batchgetdevendpoints",
            "batchgetjobs",
            "batchgettriggers",
            "batchgetworkflows",
            "batchstopjobrun",
            "checkschemaversionvalidity",
            "createclassifier",
            "createcrawler",
            "createdevendpoint",
            "createjob",
            "createmltransform",
            "createscript",
            "createsecurityconfiguration",
            "createtrigger",
            "createworkflow",
            "deleteclassifier",
            "deletecrawler",
            "deletedevendpoint",
            "deletejob",
            "deletesecurityconfiguration",
            "deletetrigger",
            "deleteworkflow",
            "getclassifier",
            "getclassifiers",
            "getcrawler",
            "getcrawlermetrics",
            "getcrawlers",
            "getdatacatalogencryptionsettings",
            "getdataflowgraph",
            "getdevendpoint",
            "getdevendpoints",
            "getjob",
            "getjobbookmark",
            "getjobrun",
            "getjobruns",
            "getjobs",
            "getmltransforms",
            "getmapping",
            "getplan",
            "getsecurityconfiguration",
            "getsecurityconfigurations",
            "gettrigger",
            "gettriggers",
            "getworkflow",
            "getworkflowrun",
            "getworkflowrunproperties",
            "getworkflowruns",
            "listcrawlers",
            "listdevendpoints",
            "listjobs",
            "listmltransforms",
            "listregistries",
            "listtriggers",
            "listworkflows",
            "putdatacatalogencryptionsettings",
            "putworkflowrunproperties",
            "resetjobbookmark",
            "resumeworkflowrun",
            "startcrawler",
            "startcrawlerschedule",
            "startjobrun",
            "starttrigger",
            "startworkflowrun",
            "stopcrawler",
            "stopcrawlerschedule",
            "stoptrigger",
            "stopworkflowrun",
            "tagresource",
            "untagresource",
            "updateclassifier",
            "updatecrawler",
            "updatecrawlerschedule",
            "updatedevendpoint",
            "updatejob",
            "updatetrigger",
            "updateworkflow"
        ],
        "mlTransform": [
            "cancelmltaskrun",
            "deletemltransform",
            "getmltaskrun",
            "getmltaskruns",
            "getmltransform",
            "startexportlabelstaskrun",
            "startimportlabelstaskrun",
            "startmlevaluationtaskrun",
            "startmllabelingsetgenerationtaskrun",
            "updatemltransform",
            "usemltransforms"
        ],
        "registry": [
            "createregistry",
            "createschema",
            "deleteregistry",
            "deleteschema",
            "deleteschemaversions",
            "getregistry",
            "getschema",
            "getschemabydefinition",
            "getschemaversion",
            "getschemaversionsdiff",
            "listschemaversions",
            "listschemas",
            "putschemaversionmetadata",
            "queryschemaversionmetadata",
            "registerschemaversion",
            "removeschemaversionmetadata",
            "updateregistry",
            "updateschema"
        ],
        "schema": [
            "createschema",
            "deleteschema",
            "deleteschemaversions",
            "getschema",
            "getschemabydefinition",
            "getschemaversion",
            "getschemaversionsdiff",
            "listschemaversions",
            "putschemaversionmetadata",
            "queryschemaversionmetadata",
            "registerschemaversion",
            "removeschemaversionmetadata",
            "updateschema"
        ],
        "userdefinedfunction": [
            "createuserdefinedfunction",
            "deleteuserdefinedfunction",
            "getuserdefinedfunction",
            "getuserdefinedfunctions",
            "updateuserdefinedfunction"
        ],
        "crawler": [
            "gettags",
            "tagresource",
            "untagresource"
        ],
        "devendpoint": [
            "gettags",
            "tagresource",
            "untagresource"
        ],
        "job": [
            "gettags",
            "tagresource",
            "untagresource"
        ],
        "trigger": [
            "gettags",
            "tagresource",
            "untagresource"
        ],
        "workflow": [
            "gettags",
            "tagresource",
            "untagresource"
        ]
    },
    "databrew": {
        "Recipe": [
            "batchdeleterecipeversion",
            "deleterecipeversion",
            "describerecipe",
            "listrecipeversions",
            "listtagsforresource",
            "publishrecipe",
            "tagresource",
            "untagresource",
            "updaterecipe"
        ],
        "": [
            "createdataset",
            "createprofilejob",
            "createproject",
            "createrecipe",
            "createrecipejob",
            "createschedule",
            "listdatasets",
            "listjobs",
            "listprojects",
            "listrecipes",
            "tagresource",
            "untagresource"
        ],
        "Dataset": [
            "deletedataset",
            "describedataset",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedataset"
        ],
        "Job": [
            "deletejob",
            "describejob",
            "describejobrun",
            "listjobruns",
            "listtagsforresource",
            "startjobrun",
            "stopjobrun",
            "tagresource",
            "untagresource",
            "updateprofilejob",
            "updaterecipejob"
        ],
        "Project": [
            "deleteproject",
            "describeproject",
            "listtagsforresource",
            "sendprojectsessionaction",
            "startprojectsession",
            "tagresource",
            "untagresource",
            "updateproject"
        ],
        "Schedule": [
            "deleteschedule",
            "describeschedule",
            "listschedules",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateschedule"
        ]
    },
    "groundstation": {
        "Contact": [
            "cancelcontact",
            "describecontact",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "": [
            "createconfig",
            "createdataflowendpointgroup",
            "createmissionprofile",
            "getminuteusage",
            "listconfigs",
            "listcontacts",
            "listdataflowendpointgroups",
            "listgroundstations",
            "listmissionprofiles",
            "listsatellites",
            "reservecontact",
            "tagresource",
            "untagresource"
        ],
        "Config": [
            "deleteconfig",
            "getconfig",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateconfig"
        ],
        "DataflowEndpointGroup": [
            "deletedataflowendpointgroup",
            "getdataflowendpointgroup",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "MissionProfile": [
            "deletemissionprofile",
            "getmissionprofile",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatemissionprofile"
        ],
        "Satellite": [
            "getsatellite"
        ]
    },
    "groundtruthlabeling": {
        "": [
            "associatepatchtomanifestjob",
            "describeconsolejob",
            "listdatasetobjects",
            "runfilterorsampledatasetjob",
            "rungeneratemanifestbycrawlingjob"
        ]
    },
    "guardduty": {
        "detector": [
            "acceptinvitation",
            "archivefindings",
            "createfilter",
            "createipset",
            "createmembers",
            "createpublishingdestination",
            "createsamplefindings",
            "createthreatintelset",
            "deletedetector",
            "deletefilter",
            "deleteipset",
            "deletemembers",
            "deletepublishingdestination",
            "deletethreatintelset",
            "describeorganizationconfiguration",
            "describepublishingdestination",
            "disassociatefrommasteraccount",
            "disassociatemembers",
            "getdetector",
            "getfilter",
            "getfindings",
            "getfindingsstatistics",
            "getipset",
            "getmasteraccount",
            "getmemberdetectors",
            "getmembers",
            "getthreatintelset",
            "getusagestatistics",
            "invitemembers",
            "listfilters",
            "listfindings",
            "listipsets",
            "listmembers",
            "listpublishingdestinations",
            "listtagsforresource",
            "listthreatintelsets",
            "startmonitoringmembers",
            "stopmonitoringmembers",
            "tagresource",
            "unarchivefindings",
            "untagresource",
            "updatedetector",
            "updatefilter",
            "updatefindingsfeedback",
            "updateipset",
            "updatememberdetectors",
            "updateorganizationconfiguration",
            "updatepublishingdestination",
            "updatethreatintelset"
        ],
        "": [
            "createdetector",
            "createfilter",
            "createipset",
            "createthreatintelset",
            "declineinvitations",
            "deleteinvitations",
            "disableorganizationadminaccount",
            "enableorganizationadminaccount",
            "getinvitationscount",
            "listdetectors",
            "listinvitations",
            "listorganizationadminaccounts",
            "tagresource",
            "untagresource"
        ],
        "filter": [
            "deletefilter",
            "getfilter",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatefilter"
        ],
        "ipset": [
            "deleteipset",
            "getipset",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateipset"
        ],
        "publishingDestination": [
            "deletepublishingdestination",
            "describepublishingdestination",
            "updatepublishingdestination"
        ],
        "threatintelset": [
            "deletethreatintelset",
            "getthreatintelset",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatethreatintelset"
        ]
    },
    "health": {
        "": [
            "describeaffectedaccountsfororganization",
            "describeaffectedentities",
            "describeaffectedentitiesfororganization",
            "describeentityaggregates",
            "describeeventaggregates",
            "describeeventdetails",
            "describeeventdetailsfororganization",
            "describeeventtypes",
            "describeevents",
            "describeeventsfororganization",
            "describehealthservicestatusfororganization",
            "disablehealthserviceaccessfororganization",
            "enablehealthserviceaccessfororganization"
        ],
        "event": [
            "describeaffectedentities",
            "describeeventdetails"
        ]
    },
    "healthlake": {
        "": [
            "createfhirdatastore",
            "listfhirdatastores"
        ],
        "datastore": [
            "createresource",
            "deletefhirdatastore",
            "deleteresource",
            "describefhirdatastore",
            "describefhirexportjob",
            "describefhirimportjob",
            "getcapabilities",
            "readresource",
            "searchwithget",
            "searchwithpost",
            "startfhirexportjob",
            "startfhirimportjob",
            "updateresource"
        ]
    },
    "honeycode": {
        "": [
            "approveteamassociation",
            "createteam",
            "createtenant",
            "deregistergroups",
            "describeteam",
            "listdomains",
            "listgroups",
            "listteamassociations",
            "listtenants",
            "registerdomainforverification",
            "registergroups",
            "rejectteamassociation",
            "restartdomainverification",
            "updateteam"
        ],
        "table": [
            "batchcreatetablerows",
            "batchdeletetablerows",
            "batchupdatetablerows",
            "batchupserttablerows",
            "describetabledataimportjob",
            "listtablecolumns",
            "listtablerows",
            "querytablerows",
            "starttabledataimportjob"
        ],
        "screen": [
            "getscreendata"
        ],
        "screen-automation": [
            "invokescreenautomation"
        ],
        "workbook": [
            "listtables"
        ]
    },
    "access-analyzer": {
        "Analyzer": [
            "applyarchiverule",
            "createaccesspreview",
            "createanalyzer",
            "deleteanalyzer",
            "getaccesspreview",
            "getanalyzedresource",
            "getanalyzer",
            "getfinding",
            "listaccesspreviewfindings",
            "listaccesspreviews",
            "listanalyzedresources",
            "listarchiverules",
            "listfindings",
            "listtagsforresource",
            "startresourcescan",
            "tagresource",
            "untagresource",
            "updatefindings"
        ],
        "": [
            "cancelpolicygeneration",
            "createanalyzer",
            "getanalyzer",
            "getgeneratedpolicy",
            "listanalyzers",
            "listpolicygenerations",
            "startpolicygeneration",
            "tagresource",
            "untagresource",
            "validatepolicy"
        ],
        "ArchiveRule": [
            "createarchiverule",
            "deletearchiverule",
            "getarchiverule",
            "updatearchiverule"
        ]
    },
    "iam": {
        "oidc-provider": [
            "addclientidtoopenidconnectprovider",
            "createopenidconnectprovider",
            "deleteopenidconnectprovider",
            "getopenidconnectprovider",
            "listopenidconnectprovidertags",
            "removeclientidfromopenidconnectprovider",
            "tagopenidconnectprovider",
            "untagopenidconnectprovider",
            "updateopenidconnectproviderthumbprint"
        ],
        "instance-profile": [
            "addroletoinstanceprofile",
            "createinstanceprofile",
            "deleteinstanceprofile",
            "getinstanceprofile",
            "listinstanceprofiletags",
            "listinstanceprofiles",
            "removerolefrominstanceprofile",
            "taginstanceprofile",
            "untaginstanceprofile"
        ],
        "group": [
            "addusertogroup",
            "attachgrouppolicy",
            "creategroup",
            "deletegroup",
            "deletegrouppolicy",
            "detachgrouppolicy",
            "getcontextkeysforprincipalpolicy",
            "getgroup",
            "getgrouppolicy",
            "listattachedgrouppolicies",
            "listgrouppolicies",
            "putgrouppolicy",
            "removeuserfromgroup",
            "simulateprincipalpolicy",
            "updategroup"
        ],
        "": [
            "attachgrouppolicy",
            "attachrolepolicy",
            "attachuserpolicy",
            "createaccountalias",
            "createrole",
            "createservicelinkedrole",
            "createuser",
            "deleteaccountalias",
            "deleteaccountpasswordpolicy",
            "deleterolepermissionsboundary",
            "deleterolepolicy",
            "deleteuserpermissionsboundary",
            "deleteuserpolicy",
            "detachgrouppolicy",
            "detachrolepolicy",
            "detachuserpolicy",
            "generatecredentialreport",
            "generateorganizationsaccessreport",
            "generateservicelastaccesseddetails",
            "getaccountauthorizationdetails",
            "getaccountpasswordpolicy",
            "getaccountsummary",
            "getcontextkeysforcustompolicy",
            "getcredentialreport",
            "getorganizationsaccessreport",
            "getservicelastaccesseddetails",
            "getservicelastaccesseddetailswithentities",
            "listaccountaliases",
            "listgroups",
            "listopenidconnectproviders",
            "listpolicies",
            "listpoliciesgrantingserviceaccess",
            "listroles",
            "listsamlproviders",
            "listservercertificates",
            "listusers",
            "listvirtualmfadevices",
            "passrole",
            "putrolepermissionsboundary",
            "putrolepolicy",
            "putuserpermissionsboundary",
            "putuserpolicy",
            "setsecuritytokenservicepreferences",
            "simulatecustompolicy",
            "updateaccountpasswordpolicy"
        ],
        "role": [
            "attachrolepolicy",
            "createrole",
            "createservicelinkedrole",
            "deleterole",
            "deleterolepermissionsboundary",
            "deleterolepolicy",
            "deleteservicelinkedrole",
            "detachrolepolicy",
            "getcontextkeysforprincipalpolicy",
            "getrole",
            "getrolepolicy",
            "getservicelinkedroledeletionstatus",
            "listattachedrolepolicies",
            "listinstanceprofilesforrole",
            "listrolepolicies",
            "listroletags",
            "passrole",
            "putrolepermissionsboundary",
            "putrolepolicy",
            "simulateprincipalpolicy",
            "tagrole",
            "untagrole",
            "updateassumerolepolicy",
            "updaterole",
            "updateroledescription"
        ],
        "user": [
            "attachuserpolicy",
            "changepassword",
            "createaccesskey",
            "createloginprofile",
            "createservicespecificcredential",
            "createuser",
            "deactivatemfadevice",
            "deleteaccesskey",
            "deleteloginprofile",
            "deletesshpublickey",
            "deleteservicespecificcredential",
            "deletesigningcertificate",
            "deleteuser",
            "deleteuserpermissionsboundary",
            "deleteuserpolicy",
            "detachuserpolicy",
            "enablemfadevice",
            "getaccesskeylastused",
            "getcontextkeysforprincipalpolicy",
            "getloginprofile",
            "getsshpublickey",
            "getuser",
            "getuserpolicy",
            "listaccesskeys",
            "listattacheduserpolicies",
            "listgroupsforuser",
            "listmfadevices",
            "listsshpublickeys",
            "listservicespecificcredentials",
            "listsigningcertificates",
            "listuserpolicies",
            "listusertags",
            "putuserpermissionsboundary",
            "putuserpolicy",
            "resetservicespecificcredential",
            "resyncmfadevice",
            "simulateprincipalpolicy",
            "taguser",
            "untaguser",
            "updateaccesskey",
            "updateloginprofile",
            "updatesshpublickey",
            "updateservicespecificcredential",
            "updatesigningcertificate",
            "updateuser",
            "uploadsshpublickey",
            "uploadsigningcertificate"
        ],
        "policy": [
            "createpolicy",
            "createpolicyversion",
            "deletepolicy",
            "deletepolicyversion",
            "getpolicy",
            "getpolicyversion",
            "listentitiesforpolicy",
            "listpolicytags",
            "listpolicyversions",
            "setdefaultpolicyversion",
            "tagpolicy",
            "untagpolicy"
        ],
        "saml-provider": [
            "createsamlprovider",
            "deletesamlprovider",
            "getsamlprovider",
            "listsamlprovidertags",
            "tagsamlprovider",
            "untagsamlprovider",
            "updatesamlprovider"
        ],
        "mfa": [
            "createvirtualmfadevice",
            "deletevirtualmfadevice",
            "listmfadevicetags",
            "tagmfadevice",
            "untagmfadevice"
        ],
        "server-certificate": [
            "deleteservercertificate",
            "getservercertificate",
            "listservercertificatetags",
            "tagservercertificate",
            "untagservercertificate",
            "updateservercertificate",
            "uploadservercertificate"
        ],
        "sms-mfa": [
            "deletevirtualmfadevice"
        ],
        "access-report": [
            "generateorganizationsaccessreport"
        ]
    },
    "identitystore": {
        "": [
            "describegroup",
            "describeuser",
            "listgroups",
            "listusers"
        ]
    },
    "importexport": {
        "": [
            "canceljob",
            "createjob",
            "getshippinglabel",
            "getstatus",
            "listjobs",
            "updatejob"
        ]
    },
    "inspector": {
        "": [
            "addattributestofindings",
            "createassessmenttarget",
            "createassessmenttemplate",
            "createexclusionspreview",
            "createresourcegroup",
            "deleteassessmentrun",
            "deleteassessmenttarget",
            "deleteassessmenttemplate",
            "describeassessmentruns",
            "describeassessmenttargets",
            "describeassessmenttemplates",
            "describecrossaccountaccessrole",
            "describeexclusions",
            "describefindings",
            "describeresourcegroups",
            "describerulespackages",
            "getassessmentreport",
            "getexclusionspreview",
            "gettelemetrymetadata",
            "listassessmentrunagents",
            "listassessmentruns",
            "listassessmenttargets",
            "listassessmenttemplates",
            "listeventsubscriptions",
            "listexclusions",
            "listfindings",
            "listrulespackages",
            "listtagsforresource",
            "previewagents",
            "registercrossaccountaccessrole",
            "removeattributesfromfindings",
            "settagsforresource",
            "startassessmentrun",
            "stopassessmentrun",
            "subscribetoevent",
            "unsubscribefromevent",
            "updateassessmenttarget"
        ]
    },
    "ivs": {
        "Channel": [
            "batchgetchannel",
            "createchannel",
            "deletechannel",
            "getchannel",
            "getstream",
            "listchannels",
            "liststreamkeys",
            "liststreams",
            "listtagsforresource",
            "putmetadata",
            "stopstream",
            "tagresource",
            "untagresource",
            "updatechannel"
        ],
        "Stream-Key": [
            "batchgetstreamkey",
            "createchannel",
            "createstreamkey",
            "deletechannel",
            "deletestreamkey",
            "getstreamkey",
            "liststreamkeys",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "": [
            "createchannel",
            "createrecordingconfiguration",
            "createstreamkey",
            "importplaybackkeypair",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "Recording-Configuration": [
            "createrecordingconfiguration",
            "deleterecordingconfiguration",
            "getrecordingconfiguration",
            "listrecordingconfigurations",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "Playback-Key-Pair": [
            "deleteplaybackkeypair",
            "getplaybackkeypair",
            "importplaybackkeypair",
            "listplaybackkeypairs",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ]
    },
    "iot": {
        "cert": [
            "acceptcertificatetransfer",
            "attachpolicy",
            "attachprincipalpolicy",
            "cancelcertificatetransfer",
            "deletecertificate",
            "describecertificate",
            "detachpolicy",
            "detachprincipalpolicy",
            "geteffectivepolicies",
            "rejectcertificatetransfer",
            "testauthorization",
            "transfercertificate",
            "updatecertificate"
        ],
        "billinggroup": [
            "addthingtobillinggroup",
            "createbillinggroup",
            "creatething",
            "deletebillinggroup",
            "describebillinggroup",
            "listtagsforresource",
            "listthingsinbillinggroup",
            "removethingfrombillinggroup",
            "tagresource",
            "untagresource",
            "updatebillinggroup"
        ],
        "thing": [
            "addthingtobillinggroup",
            "addthingtothinggroup",
            "associatetargetswithjob",
            "canceljobexecution",
            "createjob",
            "creatething",
            "deletejobexecution",
            "deletething",
            "deletethingshadow",
            "describejobexecution",
            "describething",
            "getpendingjobexecutions",
            "getthingshadow",
            "listactiveviolations",
            "listdetectmitigationactionsexecutions",
            "listjobexecutionsforthing",
            "listnamedshadowsforthing",
            "listthinggroupsforthing",
            "listviolationevents",
            "removethingfrombillinggroup",
            "removethingfromthinggroup",
            "startnextpendingjobexecution",
            "updatejobexecution",
            "updatething",
            "updatethinggroupsforthing",
            "updatethingshadow"
        ],
        "thinggroup": [
            "addthingtothinggroup",
            "associatetargetswithjob",
            "attachpolicy",
            "attachsecurityprofile",
            "createjob",
            "createthinggroup",
            "deletethinggroup",
            "describethinggroup",
            "detachpolicy",
            "detachsecurityprofile",
            "listsecurityprofilesfortarget",
            "listtagsforresource",
            "listthingsinthinggroup",
            "removethingfromthinggroup",
            "tagresource",
            "untagresource",
            "updatethinggroup",
            "updatethinggroupsforthing"
        ],
        "job": [
            "associatetargetswithjob",
            "canceljob",
            "canceljobexecution",
            "createjob",
            "deletejob",
            "deletejobexecution",
            "describejob",
            "describejobexecution",
            "getjobdocument",
            "listjobexecutionsforjob",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatejob"
        ],
        "securityprofile": [
            "attachsecurityprofile",
            "createsecurityprofile",
            "deletesecurityprofile",
            "describesecurityprofile",
            "detachsecurityprofile",
            "getbehaviormodeltrainingsummaries",
            "listactiveviolations",
            "listtagsforresource",
            "listtargetsforsecurityprofile",
            "listviolationevents",
            "startdetectmitigationactionstask",
            "tagresource",
            "untagresource",
            "updatesecurityprofile"
        ],
        "custommetric": [
            "attachsecurityprofile",
            "createcustommetric",
            "createsecurityprofile",
            "deletecustommetric",
            "deletesecurityprofile",
            "describecustommetric",
            "detachsecurityprofile",
            "listsecurityprofiles",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatecustommetric",
            "updatesecurityprofile"
        ],
        "dimension": [
            "attachsecurityprofile",
            "createdimension",
            "createsecurityprofile",
            "deletedimension",
            "deletesecurityprofile",
            "describedimension",
            "detachsecurityprofile",
            "listsecurityprofiles",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedimension",
            "updatesecurityprofile"
        ],
        "": [
            "attachthingprincipal",
            "cancelauditmitigationactionstask",
            "cancelaudittask",
            "canceldetectmitigationactionstask",
            "cleardefaultauthorizer",
            "closetunnel",
            "createauditsuppression",
            "createauthorizer",
            "createbillinggroup",
            "createcertificatefromcsr",
            "createcustommetric",
            "createdimension",
            "createdomainconfiguration",
            "createdynamicthinggroup",
            "createfleetmetric",
            "createjob",
            "createkeysandcertificate",
            "createmitigationaction",
            "createotaupdate",
            "createpolicy",
            "createprovisioningtemplate",
            "createrolealias",
            "createscheduledaudit",
            "createsecurityprofile",
            "createstream",
            "createthinggroup",
            "createthingtype",
            "createtopicrule",
            "deleteaccountauditconfiguration",
            "deleteauditsuppression",
            "deleteregistrationcode",
            "deletev2logginglevel",
            "describeaccountauditconfiguration",
            "describeauditfinding",
            "describeauditmitigationactionstask",
            "describeauditsuppression",
            "describeaudittask",
            "describedefaultauthorizer",
            "describedetectmitigationactionstask",
            "describeendpoint",
            "describeeventconfigurations",
            "describethingregistrationtask",
            "detachthingprincipal",
            "getindexingconfiguration",
            "getloggingoptions",
            "getregistrationcode",
            "getv2loggingoptions",
            "listattachedpolicies",
            "listauditfindings",
            "listauditmitigationactionsexecutions",
            "listauditmitigationactionstasks",
            "listauditsuppressions",
            "listaudittasks",
            "listauthorizers",
            "listbillinggroups",
            "listcacertificates",
            "listcertificates",
            "listcertificatesbyca",
            "listcustommetrics",
            "listdetectmitigationactionstasks",
            "listdimensions",
            "listdomainconfigurations",
            "listfleetmetrics",
            "listindices",
            "listjobs",
            "listmitigationactions",
            "listotaupdates",
            "listoutgoingcertificates",
            "listpolicies",
            "listpolicyprincipals",
            "listprincipalpolicies",
            "listprincipalthings",
            "listprovisioningtemplates",
            "listrolealiases",
            "listscheduledaudits",
            "liststreams",
            "listthinggroups",
            "listthingprincipals",
            "listthingregistrationtaskreports",
            "listthingregistrationtasks",
            "listthingtypes",
            "listthings",
            "listtopicruledestinations",
            "listtopicrules",
            "listtunnels",
            "listv2logginglevels",
            "opentunnel",
            "registercacertificate",
            "registercertificate",
            "registercertificatewithoutca",
            "registerthing",
            "setloggingoptions",
            "setv2logginglevel",
            "setv2loggingoptions",
            "startauditmitigationactionstask",
            "startondemandaudittask",
            "startthingregistrationtask",
            "stopthingregistrationtask",
            "tagresource",
            "untagresource",
            "updateaccountauditconfiguration",
            "updateauditsuppression",
            "updateeventconfigurations",
            "updateindexingconfiguration",
            "validatesecurityprofilebehaviors"
        ],
        "tunnel": [
            "closetunnel",
            "describetunnel"
        ],
        "destination": [
            "confirmtopicruledestination",
            "createtopicruledestination",
            "deletetopicruledestination",
            "gettopicruledestination",
            "updatetopicruledestination"
        ],
        "client": [
            "connect"
        ],
        "authorizer": [
            "createauthorizer",
            "deleteauthorizer",
            "describeauthorizer",
            "listtagsforresource",
            "setdefaultauthorizer",
            "tagresource",
            "testinvokeauthorizer",
            "untagresource",
            "updateauthorizer"
        ],
        "domainconfiguration": [
            "createdomainconfiguration",
            "deletedomainconfiguration",
            "describedomainconfiguration",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedomainconfiguration"
        ],
        "dynamicthinggroup": [
            "createdynamicthinggroup",
            "deletedynamicthinggroup",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedynamicthinggroup"
        ],
        "fleetmetric": [
            "createfleetmetric",
            "deletefleetmetric",
            "describefleetmetric",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatefleetmetric"
        ],
        "index": [
            "createfleetmetric",
            "describeindex",
            "getbucketsaggregation",
            "getcardinality",
            "getpercentiles",
            "getstatistics",
            "searchindex",
            "updatefleetmetric"
        ],
        "mitigationaction": [
            "createmitigationaction",
            "deletemitigationaction",
            "describemitigationaction",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatemitigationaction"
        ],
        "otaupdate": [
            "createotaupdate",
            "deleteotaupdate",
            "getotaupdate",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "policy": [
            "createpolicy",
            "createpolicyversion",
            "deletepolicy",
            "deletepolicyversion",
            "getpolicy",
            "getpolicyversion",
            "listpolicyversions",
            "listtagsforresource",
            "listtargetsforpolicy",
            "setdefaultpolicyversion",
            "tagresource",
            "untagresource"
        ],
        "provisioningtemplate": [
            "createprovisioningclaim",
            "createprovisioningtemplate",
            "createprovisioningtemplateversion",
            "deleteprovisioningtemplate",
            "deleteprovisioningtemplateversion",
            "describeprovisioningtemplate",
            "describeprovisioningtemplateversion",
            "listprovisioningtemplateversions",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateprovisioningtemplate"
        ],
        "rolealias": [
            "createrolealias",
            "deleterolealias",
            "describerolealias",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updaterolealias"
        ],
        "scheduledaudit": [
            "createscheduledaudit",
            "deletescheduledaudit",
            "describescheduledaudit",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatescheduledaudit"
        ],
        "stream": [
            "createstream",
            "deletestream",
            "describestream",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatestream"
        ],
        "thingtype": [
            "createthingtype",
            "deletethingtype",
            "deprecatethingtype",
            "describethingtype",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "rule": [
            "createtopicrule",
            "deletetopicrule",
            "disabletopicrule",
            "enabletopicrule",
            "gettopicrule",
            "listtagsforresource",
            "replacetopicrule",
            "tagresource",
            "untagresource"
        ],
        "cacert": [
            "deletecacertificate",
            "describecacertificate",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatecacertificate"
        ],
        "topic": [
            "publish",
            "receive"
        ],
        "topicfilter": [
            "subscribe"
        ]
    },
    "iot1click": {
        "project": [
            "associatedevicewithplacement",
            "createplacement",
            "createproject",
            "deleteplacement",
            "deleteproject",
            "describeplacement",
            "describeproject",
            "disassociatedevicefromplacement",
            "getdevicesinplacement",
            "listplacements",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateplacement",
            "updateproject"
        ],
        "": [
            "claimdevicesbyclaimcode",
            "createproject",
            "finalizedeviceclaim",
            "listdevices",
            "listprojects",
            "tagresource",
            "untagresource"
        ],
        "device": [
            "describedevice",
            "finalizedeviceclaim",
            "getdevicemethods",
            "initiatedeviceclaim",
            "invokedevicemethod",
            "listdeviceevents",
            "listtagsforresource",
            "tagresource",
            "unclaimdevice",
            "untagresource",
            "updatedevicestate"
        ]
    },
    "iotanalytics": {
        "channel": [
            "batchputmessage",
            "createchannel",
            "deletechannel",
            "describechannel",
            "listtagsforresource",
            "samplechanneldata",
            "tagresource",
            "untagresource",
            "updatechannel"
        ],
        "pipeline": [
            "cancelpipelinereprocessing",
            "createpipeline",
            "deletepipeline",
            "describepipeline",
            "listtagsforresource",
            "startpipelinereprocessing",
            "tagresource",
            "untagresource",
            "updatepipeline"
        ],
        "": [
            "createchannel",
            "createdataset",
            "createdatastore",
            "createpipeline",
            "describeloggingoptions",
            "listchannels",
            "listdatasets",
            "listdatastores",
            "listpipelines",
            "putloggingoptions",
            "runpipelineactivity",
            "tagresource",
            "untagresource"
        ],
        "dataset": [
            "createdataset",
            "createdatasetcontent",
            "deletedataset",
            "deletedatasetcontent",
            "describedataset",
            "getdatasetcontent",
            "listdatasetcontents",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedataset"
        ],
        "datastore": [
            "createdatastore",
            "deletedatastore",
            "describedatastore",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedatastore"
        ]
    },
    "iotdeviceadvisor": {
        "": [
            "createsuitedefinition",
            "listsuitedefinitions",
            "listtestcases",
            "startsuiterun",
            "tagresource",
            "untagresource"
        ],
        "suitedefinition": [
            "deletesuitedefinition",
            "getsuitedefinition",
            "listsuiteruns",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatesuitedefinition"
        ],
        "suiterun": [
            "getsuiterun",
            "getsuiterunreport",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ]
    },
    "iotwireless": {
        "SidewalkAccount": [
            "associateawsaccountwithpartneraccount",
            "disassociateawsaccountfrompartneraccount",
            "getpartneraccount",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatepartneraccount"
        ],
        "": [
            "associateawsaccountwithpartneraccount",
            "createdestination",
            "createdeviceprofile",
            "createserviceprofile",
            "createwirelessdevice",
            "createwirelessgateway",
            "createwirelessgatewaytaskdefinition",
            "getserviceendpoint",
            "listdestinations",
            "listdeviceprofiles",
            "listpartneraccounts",
            "listserviceprofiles",
            "listwirelessdevices",
            "listwirelessgatewaytaskdefinitions",
            "listwirelessgateways",
            "tagresource",
            "untagresource"
        ],
        "WirelessDevice": [
            "associatewirelessdevicewiththing",
            "createwirelessdevice",
            "deletewirelessdevice",
            "disassociatewirelessdevicefromthing",
            "getwirelessdevice",
            "getwirelessdevicestatistics",
            "listtagsforresource",
            "senddatatowirelessdevice",
            "tagresource",
            "testwirelessdevice",
            "untagresource",
            "updatewirelessdevice"
        ],
        "thing": [
            "associatewirelessdevicewiththing",
            "associatewirelessgatewaywiththing",
            "disassociatewirelessdevicefromthing",
            "disassociatewirelessgatewayfromthing"
        ],
        "WirelessGateway": [
            "associatewirelessgatewaywithcertificate",
            "associatewirelessgatewaywiththing",
            "createwirelessgateway",
            "createwirelessgatewaytask",
            "deletewirelessgateway",
            "deletewirelessgatewaytask",
            "disassociatewirelessgatewayfromcertificate",
            "disassociatewirelessgatewayfromthing",
            "getwirelessgateway",
            "getwirelessgatewaycertificate",
            "getwirelessgatewayfirmwareinformation",
            "getwirelessgatewaystatistics",
            "getwirelessgatewaytask",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatewirelessgateway"
        ],
        "cert": [
            "associatewirelessgatewaywithcertificate",
            "disassociatewirelessgatewayfromcertificate"
        ],
        "Destination": [
            "createdestination",
            "createwirelessdevice",
            "deletedestination",
            "getdestination",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedestination"
        ],
        "DeviceProfile": [
            "createdeviceprofile",
            "deletedeviceprofile",
            "getdeviceprofile",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "ServiceProfile": [
            "createserviceprofile",
            "deleteserviceprofile",
            "getserviceprofile",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "WirelessGatewayTaskDefinition": [
            "createwirelessgatewaytaskdefinition",
            "deletewirelessgatewaytaskdefinition",
            "getwirelessgatewaytaskdefinition",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ]
    },
    "iot-device-tester": {
        "": [
            "checkversion",
            "downloadtestsuite",
            "latestidt",
            "sendmetrics",
            "supportedversion"
        ]
    },
    "iotevents": {
        "input": [
            "batchacknowledgealarm",
            "batchdisablealarm",
            "batchenablealarm",
            "batchputmessage",
            "batchresetalarm",
            "batchsnoozealarm",
            "batchupdatedetector",
            "createinput",
            "deleteinput",
            "describeinput",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateinput",
            "updateinputrouting"
        ],
        "alarmModel": [
            "createalarmmodel",
            "deletealarmmodel",
            "describealarm",
            "describealarmmodel",
            "listalarmmodelversions",
            "listalarms",
            "updatealarmmodel"
        ],
        "": [
            "createalarmmodel",
            "createdetectormodel",
            "createinput",
            "describeloggingoptions",
            "listalarmmodels",
            "listdetectormodels",
            "listinputs",
            "putloggingoptions",
            "tagresource",
            "untagresource"
        ],
        "detectorModel": [
            "createdetectormodel",
            "deletedetectormodel",
            "describedetector",
            "describedetectormodel",
            "listdetectormodelversions",
            "listdetectors",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedetectormodel"
        ]
    },
    "iotfleethub": {
        "": [
            "createapplication",
            "listapplications",
            "tagresource",
            "untagresource"
        ],
        "application": [
            "deleteapplication",
            "describeapplication",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateapplication"
        ]
    },
    "greengrass": {
        "deployment": [
            "canceldeployment",
            "getdeployment",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "component": [
            "createcomponentversion",
            "listcomponentversions",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "": [
            "createcomponentversion",
            "createdeployment",
            "listcomponents",
            "listcoredevices",
            "listdeployments",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "componentVersion": [
            "deletecomponent",
            "describecomponent",
            "getcomponent",
            "getcomponentversionartifact",
            "listtagsforresource",
            "resolvecomponentcandidates",
            "tagresource",
            "untagresource"
        ],
        "coreDevice": [
            "deletecoredevice",
            "getcoredevice",
            "listeffectivedeployments",
            "listinstalledcomponents",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ]
    },
    "iotsitewise": {
        "asset": [
            "associateassets",
            "batchputassetpropertyvalue",
            "deleteasset",
            "describeasset",
            "describeassetproperty",
            "disassociateassets",
            "getassetpropertyaggregates",
            "getassetpropertyvalue",
            "getassetpropertyvaluehistory",
            "listassetrelationships",
            "listassociatedassets",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateasset",
            "updateassetproperty"
        ],
        "project": [
            "batchassociateprojectassets",
            "batchdisassociateprojectassets",
            "createaccesspolicy",
            "createdashboard",
            "deleteproject",
            "describeproject",
            "listaccesspolicies",
            "listdashboards",
            "listprojectassets",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateproject"
        ],
        "portal": [
            "createaccesspolicy",
            "createproject",
            "deleteportal",
            "describeportal",
            "listaccesspolicies",
            "listprojects",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateportal"
        ],
        "": [
            "createaccesspolicy",
            "createasset",
            "createassetmodel",
            "createdashboard",
            "creategateway",
            "createportal",
            "createproject",
            "describedefaultencryptionconfiguration",
            "describeloggingoptions",
            "listassetmodels",
            "listgateways",
            "listportals",
            "listtagsforresource",
            "putdefaultencryptionconfiguration",
            "putloggingoptions",
            "tagresource",
            "untagresource"
        ],
        "asset-model": [
            "createasset",
            "deleteassetmodel",
            "describeassetmodel",
            "listassets",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateassetmodel"
        ],
        "access-policy": [
            "deleteaccesspolicy",
            "describeaccesspolicy",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateaccesspolicy"
        ],
        "dashboard": [
            "deletedashboard",
            "describedashboard",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedashboard"
        ],
        "gateway": [
            "deletegateway",
            "describegateway",
            "describegatewaycapabilityconfiguration",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updategateway",
            "updategatewaycapabilityconfiguration"
        ]
    },
    "iotthingsgraph": {
        "": [
            "associateentitytothing",
            "createflowtemplate",
            "createsysteminstance",
            "createsystemtemplate",
            "deletenamespace",
            "describenamespace",
            "dissociateentityfromthing",
            "getentities",
            "getnamespacedeletionstatus",
            "getuploadstatus",
            "listflowexecutionmessages",
            "searchentities",
            "searchflowtemplates",
            "searchsysteminstances",
            "searchsystemtemplates",
            "searchthings",
            "tagresource",
            "untagresource",
            "uploadentitydefinitions"
        ],
        "Workflow": [
            "deleteflowtemplate",
            "deprecateflowtemplate",
            "getflowtemplate",
            "getflowtemplaterevisions",
            "updateflowtemplate"
        ],
        "SystemInstance": [
            "deletesysteminstance",
            "deploysysteminstance",
            "getsysteminstance",
            "listtagsforresource",
            "searchflowexecutions",
            "tagresource",
            "undeploysysteminstance",
            "untagresource"
        ],
        "System": [
            "deletesystemtemplate",
            "deprecatesystemtemplate",
            "getsystemtemplate",
            "getsystemtemplaterevisions",
            "updatesystemtemplate"
        ]
    },
    "iq": {
        "": [
            "createproject"
        ]
    },
    "iq-permission": {
        "": [
            "approveaccessgrant"
        ]
    },
    "kendra": {
        "index": [
            "batchdeletedocument",
            "batchputdocument",
            "createdatasource",
            "createfaq",
            "createthesaurus",
            "deletedatasource",
            "deletefaq",
            "deleteindex",
            "deletethesaurus",
            "describedatasource",
            "describefaq",
            "describeindex",
            "describethesaurus",
            "listdatasourcesyncjobs",
            "listdatasources",
            "listfaqs",
            "listtagsforresource",
            "listthesauri",
            "query",
            "startdatasourcesyncjob",
            "stopdatasourcesyncjob",
            "submitfeedback",
            "tagresource",
            "untagresource",
            "updatedatasource",
            "updateindex",
            "updatethesaurus"
        ],
        "": [
            "createdatasource",
            "createfaq",
            "createindex",
            "createthesaurus",
            "listindices",
            "tagresource",
            "untagresource"
        ],
        "data-source": [
            "deletedatasource",
            "describedatasource",
            "listdatasourcesyncjobs",
            "listtagsforresource",
            "startdatasourcesyncjob",
            "stopdatasourcesyncjob",
            "tagresource",
            "untagresource",
            "updatedatasource"
        ],
        "faq": [
            "deletefaq",
            "describefaq",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "thesaurus": [
            "deletethesaurus",
            "describethesaurus",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatethesaurus"
        ]
    },
    "kms": {
        "key": [
            "cancelkeydeletion",
            "createalias",
            "creategrant",
            "decrypt",
            "deletealias",
            "deleteimportedkeymaterial",
            "describekey",
            "disablekey",
            "disablekeyrotation",
            "enablekey",
            "enablekeyrotation",
            "encrypt",
            "generatedatakey",
            "generatedatakeypair",
            "generatedatakeypairwithoutplaintext",
            "generatedatakeywithoutplaintext",
            "getkeypolicy",
            "getkeyrotationstatus",
            "getparametersforimport",
            "getpublickey",
            "importkeymaterial",
            "listgrants",
            "listkeypolicies",
            "listresourcetags",
            "listretirablegrants",
            "putkeypolicy",
            "reencryptfrom",
            "reencryptto",
            "retiregrant",
            "revokegrant",
            "schedulekeydeletion",
            "sign",
            "tagresource",
            "untagresource",
            "updatealias",
            "updatekeydescription",
            "verify"
        ],
        "": [
            "cancelkeydeletion",
            "connectcustomkeystore",
            "createalias",
            "createcustomkeystore",
            "creategrant",
            "createkey",
            "decrypt",
            "deletealias",
            "deletecustomkeystore",
            "deleteimportedkeymaterial",
            "describecustomkeystores",
            "describekey",
            "disablekey",
            "disablekeyrotation",
            "disconnectcustomkeystore",
            "enablekey",
            "enablekeyrotation",
            "encrypt",
            "generatedatakey",
            "generatedatakeypair",
            "generatedatakeypairwithoutplaintext",
            "generatedatakeywithoutplaintext",
            "generaterandom",
            "getkeypolicy",
            "getkeyrotationstatus",
            "getparametersforimport",
            "getpublickey",
            "importkeymaterial",
            "listaliases",
            "listgrants",
            "listkeypolicies",
            "listkeys",
            "listresourcetags",
            "putkeypolicy",
            "reencryptfrom",
            "reencryptto",
            "revokegrant",
            "schedulekeydeletion",
            "sign",
            "tagresource",
            "untagresource",
            "updatealias",
            "updatecustomkeystore",
            "updatekeydescription",
            "verify"
        ],
        "alias": [
            "createalias",
            "deletealias",
            "updatealias"
        ]
    },
    "cassandra": {
        "keyspace": [
            "alter",
            "create",
            "drop",
            "tagresource",
            "untagresource"
        ],
        "table": [
            "alter",
            "create",
            "drop",
            "modify",
            "restore",
            "select",
            "tagresource",
            "untagresource"
        ],
        "": [
            "alter",
            "create",
            "restore",
            "tagresource",
            "untagresource"
        ]
    },
    "kinesis": {
        "stream": [
            "addtagstostream",
            "createstream",
            "decreasestreamretentionperiod",
            "deletestream",
            "deregisterstreamconsumer",
            "describestream",
            "describestreamconsumer",
            "describestreamsummary",
            "getrecords",
            "getsharditerator",
            "increasestreamretentionperiod",
            "listtagsforstream",
            "mergeshards",
            "putrecord",
            "putrecords",
            "registerstreamconsumer",
            "removetagsfromstream",
            "splitshard",
            "startstreamencryption",
            "stopstreamencryption",
            "subscribetoshard"
        ],
        "consumer": [
            "deregisterstreamconsumer",
            "describestreamconsumer",
            "registerstreamconsumer",
            "subscribetoshard"
        ],
        "": [
            "describelimits",
            "disableenhancedmonitoring",
            "enableenhancedmonitoring",
            "listshards",
            "liststreamconsumers",
            "liststreams",
            "updateshardcount"
        ],
        "kmsKey": [
            "startstreamencryption",
            "stopstreamencryption"
        ]
    },
    "kinesisanalytics": {
        "application": [
            "addapplicationcloudwatchloggingoption",
            "addapplicationinput",
            "addapplicationinputprocessingconfiguration",
            "addapplicationoutput",
            "addapplicationreferencedatasource",
            "addapplicationvpcconfiguration",
            "createapplicationpresignedurl",
            "createapplicationsnapshot",
            "deleteapplication",
            "deleteapplicationcloudwatchloggingoption",
            "deleteapplicationinputprocessingconfiguration",
            "deleteapplicationoutput",
            "deleteapplicationreferencedatasource",
            "deleteapplicationsnapshot",
            "deleteapplicationvpcconfiguration",
            "describeapplication",
            "describeapplicationsnapshot",
            "listapplicationsnapshots",
            "listtagsforresource",
            "startapplication",
            "stopapplication",
            "tagresource",
            "untagresource",
            "updateapplication"
        ],
        "": [
            "createapplication",
            "discoverinputschema",
            "listapplications",
            "tagresource",
            "untagresource"
        ]
    },
    "firehose": {
        "deliverystream": [
            "createdeliverystream",
            "deletedeliverystream",
            "describedeliverystream",
            "listtagsfordeliverystream",
            "putrecord",
            "putrecordbatch",
            "startdeliverystreamencryption",
            "stopdeliverystreamencryption",
            "tagdeliverystream",
            "untagdeliverystream",
            "updatedestination"
        ],
        "": [
            "createdeliverystream",
            "listdeliverystreams",
            "tagdeliverystream",
            "untagdeliverystream"
        ]
    },
    "kinesisvideo": {
        "channel": [
            "connectasmaster",
            "connectasviewer",
            "createsignalingchannel",
            "deletesignalingchannel",
            "describesignalingchannel",
            "geticeserverconfig",
            "getsignalingchannelendpoint",
            "listtagsforresource",
            "sendalexaoffertomaster",
            "tagresource",
            "untagresource",
            "updatesignalingchannel"
        ],
        "": [
            "createsignalingchannel",
            "createstream",
            "listsignalingchannels",
            "liststreams",
            "tagresource",
            "tagstream",
            "untagresource",
            "untagstream"
        ],
        "stream": [
            "createstream",
            "deletestream",
            "describestream",
            "getclip",
            "getdashstreamingsessionurl",
            "getdataendpoint",
            "gethlsstreamingsessionurl",
            "getmedia",
            "getmediaforfragmentlist",
            "listfragments",
            "listtagsforresource",
            "listtagsforstream",
            "putmedia",
            "tagresource",
            "tagstream",
            "untagresource",
            "untagstream",
            "updatedataretention",
            "updatestream"
        ]
    },
    "lakeformation": {
        "": [
            "batchgrantpermissions",
            "batchrevokepermissions",
            "deregisterresource",
            "describeresource",
            "getdataaccess",
            "getdatalakesettings",
            "geteffectivepermissionsforpath",
            "grantpermissions",
            "listpermissions",
            "listresources",
            "putdatalakesettings",
            "registerresource",
            "revokepermissions",
            "updateresource"
        ]
    },
    "lambda": {
        "layerVersion": [
            "addlayerversionpermission",
            "deletelayerversion",
            "getlayerversion",
            "getlayerversionpolicy",
            "removelayerversionpermission"
        ],
        "function": [
            "addpermission",
            "createalias",
            "createfunction",
            "deletealias",
            "deletefunction",
            "deletefunctioncodesigningconfig",
            "deletefunctionconcurrency",
            "deletefunctioneventinvokeconfig",
            "disablereplication",
            "enablereplication",
            "getalias",
            "getfunction",
            "getfunctioncodesigningconfig",
            "getfunctionconcurrency",
            "getfunctionconfiguration",
            "getfunctioneventinvokeconfig",
            "getpolicy",
            "invokeasync",
            "invokefunction",
            "listaliases",
            "listfunctioneventinvokeconfigs",
            "listprovisionedconcurrencyconfigs",
            "listtags",
            "listversionsbyfunction",
            "publishversion",
            "putfunctioncodesigningconfig",
            "putfunctionconcurrency",
            "putfunctioneventinvokeconfig",
            "removepermission",
            "tagresource",
            "untagresource",
            "updatealias",
            "updatefunctioncode",
            "updatefunctioncodesigningconfig",
            "updatefunctionconfiguration",
            "updatefunctioneventinvokeconfig"
        ],
        "": [
            "addpermission",
            "createeventsourcemapping",
            "createfunction",
            "deleteeventsourcemapping",
            "getaccountsettings",
            "geteventsourcemapping",
            "listcodesigningconfigs",
            "listeventsourcemappings",
            "listfunctions",
            "listlayerversions",
            "listlayers",
            "putfunctioncodesigningconfig",
            "removepermission",
            "updateeventsourcemapping",
            "updatefunctionconfiguration"
        ],
        "code signing config": [
            "createcodesigningconfig",
            "deletecodesigningconfig",
            "getcodesigningconfig",
            "listfunctionsbycodesigningconfig",
            "putfunctioncodesigningconfig",
            "updatecodesigningconfig",
            "updatefunctioncodesigningconfig"
        ],
        "eventSourceMapping": [
            "deleteeventsourcemapping",
            "geteventsourcemapping",
            "updateeventsourcemapping"
        ],
        "function alias": [
            "deleteprovisionedconcurrencyconfig",
            "getprovisionedconcurrencyconfig",
            "putprovisionedconcurrencyconfig"
        ],
        "function version": [
            "deleteprovisionedconcurrencyconfig",
            "getprovisionedconcurrencyconfig",
            "putprovisionedconcurrencyconfig"
        ],
        "layer": [
            "publishlayerversion"
        ]
    },
    "launchwizard": {
        "": [
            "deleteapp",
            "describeprovisionedapp",
            "describeprovisioningevents",
            "getinfrastructuresuggestion",
            "getipaddress",
            "getresourcecostestimate",
            "listprovisionedapps",
            "startprovisioning"
        ]
    },
    "lex": {
        "bot": [
            "buildbotlocale",
            "createbotalias",
            "createbotchannel",
            "createbotlocale",
            "createbotversion",
            "createintent",
            "createslot",
            "createslottype",
            "deletebot",
            "deletebotchannel",
            "deletebotlocale",
            "deletebotversion",
            "deleteintent",
            "deleteslot",
            "deleteslottype",
            "describebot",
            "describebotchannel",
            "describebotlocale",
            "describebotversion",
            "describeintent",
            "describeslot",
            "describeslottype",
            "listbotaliases",
            "listbotchannels",
            "listbotlocales",
            "listbotversions",
            "listintents",
            "listslottypes",
            "listslots",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatebot",
            "updatebotlocale",
            "updateintent",
            "updateslot",
            "updateslottype"
        ],
        "": [
            "createbot",
            "createbotalias",
            "getbuiltinintents",
            "getbuiltinslottypes",
            "listbots",
            "tagresource",
            "untagresource"
        ],
        "bot alias": [
            "deletebot",
            "deletebotalias",
            "deletesession",
            "describebotalias",
            "getsession",
            "listtagsforresource",
            "putsession",
            "recognizespeech",
            "recognizetext",
            "startconversation",
            "tagresource",
            "untagresource",
            "updatebotalias"
        ]
    },
    "license-manager": {
        "grant": [
            "acceptgrant",
            "creategrantversion",
            "deletegrant",
            "getgrant",
            "rejectgrant"
        ],
        "": [
            "checkinlicense",
            "checkoutlicense",
            "createlicense",
            "createlicenseconfiguration",
            "deletetoken",
            "extendlicenseconsumption",
            "getaccesstoken",
            "getservicesettings",
            "listdistributedgrants",
            "listlicenseconfigurations",
            "listlicensespecificationsforresource",
            "listlicenses",
            "listreceivedgrants",
            "listreceivedlicenses",
            "listresourceinventory",
            "listtokens",
            "tagresource",
            "updateservicesettings"
        ],
        "license": [
            "checkoutborrowlicense",
            "creategrant",
            "createlicenseversion",
            "createtoken",
            "deletelicense",
            "getlicense",
            "getlicenseusage",
            "listlicenseversions"
        ],
        "license-configuration": [
            "deletelicenseconfiguration",
            "getlicenseconfiguration",
            "listassociationsforlicenseconfiguration",
            "listfailuresforlicenseconfigurationoperations",
            "listtagsforresource",
            "listusageforlicenseconfiguration",
            "tagresource",
            "untagresource",
            "updatelicenseconfiguration",
            "updatelicensespecificationsforresource"
        ]
    },
    "lightsail": {
        "StaticIp": [
            "allocatestaticip",
            "attachstaticip",
            "detachstaticip",
            "getoperationsforresource",
            "getstaticip",
            "getstaticips",
            "releasestaticip",
            "tagresource",
            "untagresource"
        ],
        "Certificate": [
            "attachcertificatetodistribution",
            "createcertificate",
            "deletecertificate"
        ],
        "Distribution": [
            "attachcertificatetodistribution",
            "createdistribution",
            "deletedistribution",
            "detachcertificatefromdistribution",
            "resetdistributioncache",
            "setipaddresstype",
            "updatedistribution",
            "updatedistributionbundle"
        ],
        "Disk": [
            "attachdisk",
            "createdisk",
            "creatediskfromsnapshot",
            "createdisksnapshot",
            "deleteautosnapshot",
            "deletedisk",
            "deletedisksnapshot",
            "detachdisk",
            "disableaddon",
            "enableaddon",
            "getdisk",
            "getdisksnapshot",
            "getdisksnapshots",
            "tagresource",
            "untagresource"
        ],
        "Instance": [
            "attachdisk",
            "attachinstancestoloadbalancer",
            "attachstaticip",
            "closeinstancepublicports",
            "createinstancesnapshot",
            "createinstancesfromsnapshot",
            "deleteautosnapshot",
            "deleteinstance",
            "deleteknownhostkeys",
            "detachinstancesfromloadbalancer",
            "detachstaticip",
            "disableaddon",
            "enableaddon",
            "getinstance",
            "getinstanceaccessdetails",
            "getinstancemetricdata",
            "getinstanceportstates",
            "getinstancestate",
            "getinstances",
            "getoperationsforresource",
            "openinstancepublicports",
            "putinstancepublicports",
            "rebootinstance",
            "setipaddresstype",
            "startinstance",
            "stopinstance",
            "tagresource",
            "untagresource"
        ],
        "LoadBalancer": [
            "attachinstancestoloadbalancer",
            "attachloadbalancertlscertificate",
            "createloadbalancer",
            "createloadbalancertlscertificate",
            "deleteloadbalancer",
            "deleteloadbalancertlscertificate",
            "detachinstancesfromloadbalancer",
            "getloadbalancer",
            "getloadbalancermetricdata",
            "getloadbalancertlscertificates",
            "getloadbalancers",
            "setipaddresstype",
            "tagresource",
            "untagresource",
            "updateloadbalancerattribute"
        ],
        "DiskSnapshot": [
            "copysnapshot",
            "tagresource",
            "untagresource"
        ],
        "InstanceSnapshot": [
            "copysnapshot",
            "createinstancesnapshot",
            "createinstancesfromsnapshot",
            "deleteinstancesnapshot",
            "getinstancesnapshot",
            "getinstancesnapshots",
            "getoperationsforresource",
            "tagresource",
            "untagresource"
        ],
        "ExportSnapshotRecord": [
            "createcloudformationstack",
            "getexportsnapshotrecords"
        ],
        "": [
            "createcontactmethod",
            "createcontainerserviceregistrylogin",
            "createdisk",
            "creatediskfromsnapshot",
            "createdisksnapshot",
            "createdomain",
            "createinstancesnapshot",
            "createinstances",
            "createinstancesfromsnapshot",
            "createkeypair",
            "createloadbalancer",
            "createrelationaldatabase",
            "createrelationaldatabasefromsnapshot",
            "createrelationaldatabasesnapshot",
            "exportsnapshot",
            "getactivenames",
            "getalarms",
            "getautosnapshots",
            "getblueprints",
            "getbundles",
            "getcertificates",
            "getcontactmethods",
            "getcontainerapimetadata",
            "getcontainerimages",
            "getcontainerlog",
            "getcontainerservicedeployments",
            "getcontainerservicemetricdata",
            "getcontainerservicepowers",
            "getcontainerservices",
            "getdisks",
            "getdistributionbundles",
            "getdistributionlatestcachereset",
            "getdistributionmetricdata",
            "getdistributions",
            "getoperation",
            "getoperations",
            "getregions",
            "getrelationaldatabaseblueprints",
            "getrelationaldatabasebundles",
            "getrelationaldatabaseevents",
            "getrelationaldatabaselogevents",
            "getrelationaldatabaselogstreams",
            "getrelationaldatabasemasteruserpassword",
            "getrelationaldatabasemetricdata",
            "getrelationaldatabaseparameters",
            "isvpcpeered",
            "peervpc",
            "tagresource",
            "unpeervpc",
            "untagresource",
            "updaterelationaldatabaseparameters"
        ],
        "ContainerService": [
            "createcontainerservice",
            "createcontainerservicedeployment",
            "deletecontainerimage",
            "deletecontainerservice",
            "registercontainerimage",
            "updatecontainerservice"
        ],
        "Domain": [
            "createdomain",
            "createdomainentry",
            "deletedomain",
            "deletedomainentry",
            "getdomain",
            "getdomains",
            "getoperationsforresource",
            "tagresource",
            "untagresource",
            "updatedomainentry"
        ],
        "KeyPair": [
            "createinstances",
            "createkeypair",
            "deletekeypair",
            "downloaddefaultkeypair",
            "getkeypair",
            "getkeypairs",
            "getoperationsforresource",
            "importkeypair",
            "tagresource",
            "untagresource"
        ],
        "RelationalDatabase": [
            "createrelationaldatabase",
            "createrelationaldatabasefromsnapshot",
            "deleterelationaldatabase",
            "getrelationaldatabase",
            "getrelationaldatabasesnapshot",
            "getrelationaldatabasesnapshots",
            "getrelationaldatabases",
            "rebootrelationaldatabase",
            "startrelationaldatabase",
            "stoprelationaldatabase",
            "tagresource",
            "untagresource",
            "updaterelationaldatabase"
        ],
        "RelationalDatabaseSnapshot": [
            "createrelationaldatabasesnapshot",
            "deleterelationaldatabasesnapshot",
            "tagresource",
            "untagresource"
        ],
        "Alarm": [
            "deletealarm",
            "putalarm",
            "testalarm"
        ],
        "ContactMethod": [
            "deletecontactmethod",
            "sendcontactmethodverification"
        ],
        "CloudFormationStackRecord": [
            "getcloudformationstackrecords"
        ]
    },
    "geo": {
        "tracker": [
            "associatetrackerconsumer",
            "batchgetdeviceposition",
            "batchupdatedeviceposition",
            "createtracker",
            "deletetracker",
            "describetracker",
            "disassociatetrackerconsumer",
            "getdeviceposition",
            "getdevicepositionhistory",
            "listtrackerconsumers",
            "updatetracker"
        ],
        "geofence-collection": [
            "batchdeletegeofence",
            "batchevaluategeofences",
            "batchputgeofence",
            "creategeofencecollection",
            "deletegeofencecollection",
            "describegeofencecollection",
            "getgeofence",
            "listgeofences",
            "putgeofence",
            "updategeofencecollection"
        ],
        "map": [
            "createmap",
            "deletemap",
            "describemap",
            "getmapglyphs",
            "getmapsprites",
            "getmapstyledescriptor",
            "getmaptile",
            "getmaptilejson"
        ],
        "place-index": [
            "createplaceindex",
            "deleteplaceindex",
            "describeplaceindex",
            "searchplaceindexforposition",
            "searchplaceindexfortext"
        ],
        "": [
            "listgeofencecollections",
            "listmaps",
            "listplaceindexes",
            "listtrackers"
        ]
    },
    "lookoutequipment": {
        "dataset": [
            "createdataset",
            "createmodel",
            "deletedataset",
            "describedataset",
            "listdataingestionjobs",
            "listtagsforresource",
            "startdataingestionjob",
            "tagresource",
            "untagresource"
        ],
        "": [
            "createdataset",
            "createinferencescheduler",
            "createmodel",
            "describedataingestionjob",
            "listdatasets",
            "listinferenceschedulers",
            "listmodels",
            "tagresource",
            "untagresource"
        ],
        "inference-scheduler": [
            "createinferencescheduler",
            "deleteinferencescheduler",
            "describeinferencescheduler",
            "listinferenceexecutions",
            "listtagsforresource",
            "startinferencescheduler",
            "stopinferencescheduler",
            "tagresource",
            "untagresource",
            "updateinferencescheduler"
        ],
        "model": [
            "createinferencescheduler",
            "createmodel",
            "deletemodel",
            "describemodel",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ]
    },
    "lookoutmetrics": {
        "AnomalyDetector": [
            "activateanomalydetector",
            "backtestanomalydetector",
            "createalert",
            "createanomalydetector",
            "createmetricset",
            "deleteanomalydetector",
            "describeanomalydetectionexecutions",
            "describeanomalydetector",
            "getanomalygroup",
            "getdataqualitymetrics",
            "getfeedback",
            "listalerts",
            "listanomalygroupsummaries",
            "listanomalygrouptimeseries",
            "listmetricsets",
            "listtagsforresource",
            "putfeedback",
            "tagresource",
            "untagresource",
            "updateanomalydetector"
        ],
        "Alert": [
            "createalert",
            "deletealert",
            "describealert",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "": [
            "createalert",
            "createanomalydetector",
            "createmetricset",
            "getsampledata",
            "listanomalydetectors",
            "tagresource",
            "untagresource"
        ],
        "MetricSet": [
            "createmetricset",
            "describemetricset",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatemetricset"
        ]
    },
    "lookoutvision": {
        "": [
            "createdataset",
            "createmodel",
            "deletedataset",
            "describedataset",
            "describetrialdetection",
            "listdatasetentries",
            "listmodels",
            "listprojects",
            "listtrialdetections",
            "starttrialdetection",
            "tagresource",
            "untagresource",
            "updatedatasetentries"
        ],
        "model": [
            "createmodel",
            "deletemodel",
            "describemodel",
            "detectanomalies",
            "listtagsforresource",
            "startmodel",
            "stopmodel",
            "tagresource",
            "untagresource"
        ],
        "project": [
            "createproject",
            "deleteproject",
            "describeproject"
        ]
    },
    "machinelearning": {
        "batchprediction": [
            "addtags",
            "createbatchprediction",
            "deletebatchprediction",
            "deletetags",
            "describetags",
            "getbatchprediction",
            "updatebatchprediction"
        ],
        "datasource": [
            "addtags",
            "createbatchprediction",
            "createdatasourcefromrds",
            "createdatasourcefromredshift",
            "createdatasourcefroms3",
            "createevaluation",
            "createmlmodel",
            "deletedatasource",
            "deletetags",
            "describetags",
            "getdatasource",
            "getevaluation",
            "updatedatasource"
        ],
        "evaluation": [
            "addtags",
            "createevaluation",
            "deleteevaluation",
            "deletetags",
            "describetags",
            "updateevaluation"
        ],
        "mlmodel": [
            "addtags",
            "createbatchprediction",
            "createevaluation",
            "createmlmodel",
            "createrealtimeendpoint",
            "deletemlmodel",
            "deleterealtimeendpoint",
            "deletetags",
            "describetags",
            "getmlmodel",
            "predict",
            "updatemlmodel"
        ],
        "": [
            "describebatchpredictions",
            "describedatasources",
            "describeevaluations",
            "describemlmodels"
        ]
    },
    "macie2": {
        "": [
            "acceptinvitation",
            "createclassificationjob",
            "createcustomdataidentifier",
            "createfindingsfilter",
            "createinvitations",
            "createmember",
            "createsamplefindings",
            "declineinvitations",
            "deleteinvitations",
            "describebuckets",
            "describeorganizationconfiguration",
            "disablemacie",
            "disableorganizationadminaccount",
            "disassociatefrommasteraccount",
            "enablemacie",
            "enableorganizationadminaccount",
            "getbucketstatistics",
            "getclassificationexportconfiguration",
            "getfindingstatistics",
            "getfindings",
            "getinvitationscount",
            "getmaciesession",
            "getmasteraccount",
            "getusagestatistics",
            "getusagetotals",
            "listclassificationjobs",
            "listcustomdataidentifiers",
            "listfindings",
            "listfindingsfilters",
            "listinvitations",
            "listmembers",
            "listorganizationadminaccounts",
            "listtagsforresource",
            "putclassificationexportconfiguration",
            "tagresource",
            "testcustomdataidentifier",
            "untagresource",
            "updateclassificationjob",
            "updatefindingsfilter",
            "updatemaciesession",
            "updatemembersession",
            "updateorganizationconfiguration"
        ],
        "CustomDataIdentifier": [
            "batchgetcustomdataidentifiers",
            "createcustomdataidentifier",
            "deletecustomdataidentifier",
            "getcustomdataidentifier"
        ],
        "ClassificationJob": [
            "createclassificationjob",
            "describeclassificationjob",
            "updateclassificationjob"
        ],
        "FindingsFilter": [
            "createfindingsfilter",
            "deletefindingsfilter",
            "getfindingsfilter",
            "updatefindingsfilter"
        ],
        "Member": [
            "createmember",
            "deletemember",
            "disassociatemember",
            "getmember"
        ]
    },
    "macie": {
        "": [
            "associatememberaccount",
            "associates3resources",
            "disassociatememberaccount",
            "disassociates3resources",
            "listmemberaccounts",
            "lists3resources",
            "updates3resources"
        ]
    },
    "managedblockchain": {
        "network": [
            "createmember",
            "createnode",
            "createproposal",
            "getnetwork",
            "listmembers",
            "listnodes",
            "listproposals",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "": [
            "createmember",
            "createnetwork",
            "createnode",
            "createproposal",
            "listinvitations",
            "listnetworks",
            "tagresource",
            "untagresource"
        ],
        "member": [
            "createnode",
            "deletemember",
            "getmember",
            "listnodes",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatemember"
        ],
        "node": [
            "deletenode",
            "getnode",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatenode"
        ],
        "proposal": [
            "getproposal",
            "listproposalvotes",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "voteonproposal"
        ],
        "invitation": [
            "listtagsforresource",
            "rejectinvitation",
            "tagresource",
            "untagresource"
        ]
    },
    "grafana": {
        "workspace": [
            "associatelicense",
            "deleteworkspace",
            "describeworkspace",
            "disassociatelicense",
            "listpermissions",
            "updatepermissions",
            "updateworkspace"
        ],
        "": [
            "createworkspace",
            "listworkspaces"
        ]
    },
    "aps": {
        "": [
            "createworkspace",
            "listworkspaces"
        ],
        "workspace": [
            "deleteworkspace",
            "describeworkspace",
            "getlabels",
            "getmetricmetadata",
            "getseries",
            "querymetrics",
            "remotewrite",
            "updateworkspacealias"
        ]
    },
    "kafka": {
        "": [
            "batchassociatescramsecret",
            "batchdisassociatescramsecret",
            "createcluster",
            "createconfiguration",
            "deletecluster",
            "deleteconfiguration",
            "describecluster",
            "describeclusteroperation",
            "describeconfiguration",
            "describeconfigurationrevision",
            "getbootstrapbrokers",
            "getcompatiblekafkaversions",
            "listclusteroperations",
            "listclusters",
            "listconfigurationrevisions",
            "listconfigurations",
            "listkafkaversions",
            "listnodes",
            "listscramsecrets",
            "rebootbroker",
            "tagresource",
            "untagresource",
            "updatebrokercount",
            "updatebrokerstorage",
            "updatebrokertype",
            "updateclusterconfiguration",
            "updateclusterkafkaversion",
            "updateconfiguration",
            "updatemonitoring"
        ],
        "cluster": [
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ]
    },
    "airflow": {
        "environment": [
            "createclitoken",
            "createenvironment",
            "deleteenvironment",
            "getenvironment",
            "listtagsforresource",
            "publishmetrics",
            "tagresource",
            "untagresource",
            "updateenvironment"
        ],
        "": [
            "createenvironment",
            "deleteenvironment",
            "getenvironment",
            "listenvironments",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateenvironment"
        ],
        "rbac-role": [
            "createweblogintoken"
        ]
    },
    "aws-marketplace": {
        "": [
            "associateproductswithprivatemarketplace",
            "createprivatemarketplace",
            "createprivatemarketplaceprofile",
            "createprivatemarketplacerequests",
            "describeprivatemarketplaceproducts",
            "describeprivatemarketplaceprofile",
            "describeprivatemarketplacerequests",
            "describeprivatemarketplacesettings",
            "describeprivatemarketplacestatus",
            "disassociateproductsfromprivatemarketplace",
            "listprivatemarketplaceproducts",
            "listprivatemarketplacerequests",
            "startprivatemarketplace",
            "stopprivatemarketplace",
            "updateprivatemarketplaceprofile",
            "updateprivatemarketplacesettings"
        ]
    },
    "marketplacecommerceanalytics": {
        "": [
            "generatedataset",
            "startsupportdataexport"
        ]
    },
    "aws-marketplace-management": {
        "": [
            "uploadfiles",
            "viewmarketing",
            "viewreports",
            "viewsettings",
            "viewsupport"
        ]
    },
    "mechanicalturk": {
        "": [
            "acceptqualificationrequest",
            "approveassignment",
            "associatequalificationwithworker",
            "createadditionalassignmentsforhit",
            "createhit",
            "createhittype",
            "createhitwithhittype",
            "createqualificationtype",
            "createworkerblock",
            "deletehit",
            "deletequalificationtype",
            "deleteworkerblock",
            "disassociatequalificationfromworker",
            "getaccountbalance",
            "getassignment",
            "getfileuploadurl",
            "gethit",
            "getqualificationscore",
            "getqualificationtype",
            "listassignmentsforhit",
            "listbonuspayments",
            "listhits",
            "listhitsforqualificationtype",
            "listqualificationrequests",
            "listqualificationtypes",
            "listreviewpolicyresultsforhit",
            "listreviewablehits",
            "listworkerblocks",
            "listworkerswithqualificationtype",
            "notifyworkers",
            "rejectassignment",
            "rejectqualificationrequest",
            "sendbonus",
            "sendtesteventnotification",
            "updateexpirationforhit",
            "updatehitreviewstatus",
            "updatehittypeofhit",
            "updatenotificationsettings",
            "updatequalificationtype"
        ]
    },
    "ec2messages": {
        "": [
            "acknowledgemessage",
            "deletemessage",
            "failmessage",
            "getendpoint",
            "getmessages",
            "sendreply"
        ]
    },
    "mgh": {
        "migrationTask": [
            "associatecreatedartifact",
            "associatediscoveredresource",
            "describemigrationtask",
            "disassociatecreatedartifact",
            "disassociatediscoveredresource",
            "importmigrationtask",
            "listcreatedartifacts",
            "listdiscoveredresources",
            "notifymigrationtaskstate",
            "putresourceattributes"
        ],
        "": [
            "createhomeregioncontrol",
            "describeapplicationstate",
            "describehomeregioncontrols",
            "gethomeregion",
            "listapplicationstates",
            "listmigrationtasks",
            "listprogressupdatestreams",
            "notifyapplicationstate"
        ],
        "progressUpdateStream": [
            "createprogressupdatestream",
            "deleteprogressupdatestream"
        ]
    },
    "mobileanalytics": {
        "": [
            "getfinancialreports",
            "getreports",
            "putevents"
        ]
    },
    "mobilehub": {
        "": [
            "createproject",
            "createservicerole",
            "deleteprojectsnapshot",
            "deploytostage",
            "describebundle",
            "exportbundle",
            "getprojectsnapshot",
            "importproject",
            "installbundle",
            "listavailableconnectors",
            "listavailablefeatures",
            "listavailableregions",
            "listbundles",
            "listprojectsnapshots",
            "listprojects",
            "validateproject",
            "verifyservicerole"
        ],
        "project": [
            "deleteproject",
            "exportproject",
            "generateprojectparameters",
            "getproject",
            "synchronizeproject",
            "updateproject"
        ]
    },
    "monitron": {
        "project": [
            "associateprojectadminuser",
            "deleteproject",
            "disassociateprojectadminuser",
            "getproject",
            "getprojectadminuser",
            "listprojectadminusers",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateproject"
        ],
        "": [
            "createproject",
            "listprojects",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateproject"
        ]
    },
    "mq": {
        "": [
            "createbroker",
            "createconfiguration",
            "createtags",
            "deletetags",
            "describebrokerenginetypes",
            "describebrokerinstanceoptions",
            "listbrokers",
            "listconfigurations"
        ],
        "brokers": [
            "createtags",
            "createuser",
            "deletebroker",
            "deletetags",
            "deleteuser",
            "describebroker",
            "describeuser",
            "listtags",
            "listusers",
            "rebootbroker",
            "updatebroker",
            "updateuser"
        ],
        "configurations": [
            "createtags",
            "deletetags",
            "describeconfiguration",
            "describeconfigurationrevision",
            "listconfigurationrevisions",
            "listtags",
            "updateconfiguration"
        ]
    },
    "neptune-db": {
        "database": [
            "connect"
        ]
    },
    "network-firewall": {
        "Firewall": [
            "associatefirewallpolicy",
            "associatesubnets",
            "createfirewall",
            "deletefirewall",
            "describefirewall",
            "describeloggingconfiguration",
            "disassociatesubnets",
            "listfirewalls",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatefirewalldeleteprotection",
            "updatefirewalldescription",
            "updatefirewallpolicychangeprotection",
            "updateloggingconfiguration",
            "updatesubnetchangeprotection"
        ],
        "FirewallPolicy": [
            "associatefirewallpolicy",
            "createfirewall",
            "createfirewallpolicy",
            "deletefirewallpolicy",
            "deleteresourcepolicy",
            "describefirewallpolicy",
            "describeresourcepolicy",
            "listfirewallpolicies",
            "listtagsforresource",
            "putresourcepolicy",
            "tagresource",
            "untagresource",
            "updatefirewallpolicy"
        ],
        "": [
            "createfirewall",
            "createfirewallpolicy",
            "createrulegroup",
            "listrulegroups",
            "tagresource",
            "untagresource"
        ],
        "StatefulRuleGroup": [
            "createfirewallpolicy",
            "createrulegroup",
            "deleteresourcepolicy",
            "deleterulegroup",
            "describefirewallpolicy",
            "describeresourcepolicy",
            "describerulegroup",
            "listtagsforresource",
            "putresourcepolicy",
            "tagresource",
            "untagresource",
            "updatefirewallpolicy",
            "updaterulegroup"
        ],
        "StatelessRuleGroup": [
            "createfirewallpolicy",
            "createrulegroup",
            "deleteresourcepolicy",
            "deleterulegroup",
            "describefirewallpolicy",
            "describeresourcepolicy",
            "describerulegroup",
            "listtagsforresource",
            "putresourcepolicy",
            "tagresource",
            "untagresource",
            "updatefirewallpolicy",
            "updaterulegroup"
        ]
    },
    "networkmanager": {
        "device": [
            "associatecustomergateway",
            "associatelink",
            "associatetransitgatewayconnectpeer",
            "deletedevice",
            "disassociatelink",
            "getdevices",
            "getlinkassociations",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedevice"
        ],
        "global-network": [
            "associatecustomergateway",
            "associatelink",
            "associatetransitgatewayconnectpeer",
            "createconnection",
            "createdevice",
            "createlink",
            "createsite",
            "deleteconnection",
            "deletedevice",
            "deleteglobalnetwork",
            "deletelink",
            "deletesite",
            "deregistertransitgateway",
            "describeglobalnetworks",
            "disassociatecustomergateway",
            "disassociatelink",
            "disassociatetransitgatewayconnectpeer",
            "getconnections",
            "getcustomergatewayassociations",
            "getdevices",
            "getlinkassociations",
            "getlinks",
            "getsites",
            "gettransitgatewayconnectpeerassociations",
            "gettransitgatewayregistrations",
            "listtagsforresource",
            "registertransitgateway",
            "tagresource",
            "untagresource",
            "updateconnection",
            "updatedevice",
            "updateglobalnetwork",
            "updatelink",
            "updatesite"
        ],
        "link": [
            "associatecustomergateway",
            "associatelink",
            "associatetransitgatewayconnectpeer",
            "deletelink",
            "disassociatelink",
            "getlinkassociations",
            "getlinks",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatelink"
        ],
        "": [
            "associatecustomergateway",
            "associatetransitgatewayconnectpeer",
            "createconnection",
            "createdevice",
            "createglobalnetwork",
            "createlink",
            "createsite",
            "deregistertransitgateway",
            "disassociatecustomergateway",
            "disassociatetransitgatewayconnectpeer",
            "listtagsforresource",
            "registertransitgateway",
            "tagresource",
            "untagresource"
        ],
        "site": [
            "createlink",
            "deletesite",
            "getsites",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatesite"
        ],
        "connection": [
            "deleteconnection",
            "getconnections",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateconnection"
        ]
    },
    "nimble": {
        "eula": [
            "accepteulas",
            "geteula",
            "listeulas"
        ],
        "studio": [
            "createlaunchprofile",
            "createstreamingimage",
            "createstudio",
            "createstudiocomponent",
            "deletestudio",
            "deletestudiomember",
            "getstudio",
            "getstudiomember",
            "listlaunchprofiles",
            "liststreamingimages",
            "liststreamingsessions",
            "liststudiocomponents",
            "liststudiomembers",
            "listtagsforresource",
            "putstudiologevents",
            "putstudiomembers",
            "startstudiossoconfigurationrepair",
            "tagresource",
            "untagresource",
            "updatestudio"
        ],
        "launch-profile": [
            "createstreamingsession",
            "deletelaunchprofile",
            "deletelaunchprofilemember",
            "getlaunchprofile",
            "getlaunchprofiledetails",
            "getlaunchprofileinitialization",
            "getlaunchprofilemember",
            "listlaunchprofilemembers",
            "listtagsforresource",
            "putlaunchprofilemembers",
            "tagresource",
            "untagresource",
            "updatelaunchprofile",
            "updatelaunchprofilemember"
        ],
        "streaming-session": [
            "createstreamingsessionstream",
            "deletestreamingsession",
            "getstreamingsession",
            "getstreamingsessionstream",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "streaming-image": [
            "deletestreamingimage",
            "getstreamingimage",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatestreamingimage"
        ],
        "studio-component": [
            "deletestudiocomponent",
            "getstudiocomponent",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatestudiocomponent"
        ],
        "": [
            "getfeaturemap",
            "listlaunchprofiles",
            "liststreamingsessions",
            "liststudios",
            "tagresource",
            "untagresource"
        ],
        "eula-acceptance": [
            "listeulaacceptances"
        ]
    },
    "opsworks": {
        "stack": [
            "assigninstance",
            "assignvolume",
            "associateelasticip",
            "attachelasticloadbalancer",
            "clonestack",
            "createapp",
            "createdeployment",
            "createinstance",
            "createlayer",
            "deleteapp",
            "deleteinstance",
            "deletelayer",
            "deletestack",
            "deregisterecscluster",
            "deregisterelasticip",
            "deregisterinstance",
            "deregisterrdsdbinstance",
            "deregistervolume",
            "describeagentversions",
            "describeapps",
            "describecommands",
            "describedeployments",
            "describeecsclusters",
            "describeelasticips",
            "describeelasticloadbalancers",
            "describeinstances",
            "describelayers",
            "describeloadbasedautoscaling",
            "describepermissions",
            "describeraidarrays",
            "describerdsdbinstances",
            "describeserviceerrors",
            "describestackprovisioningparameters",
            "describestacksummary",
            "describestacks",
            "describetimebasedautoscaling",
            "describevolumes",
            "detachelasticloadbalancer",
            "disassociateelasticip",
            "gethostnamesuggestion",
            "grantaccess",
            "listtags",
            "rebootinstance",
            "registerecscluster",
            "registerelasticip",
            "registerinstance",
            "registerrdsdbinstance",
            "registervolume",
            "setloadbasedautoscaling",
            "setpermission",
            "settimebasedautoscaling",
            "startinstance",
            "startstack",
            "stopinstance",
            "stopstack",
            "tagresource",
            "unassigninstance",
            "unassignvolume",
            "untagresource",
            "updateapp",
            "updateelasticip",
            "updateinstance",
            "updatelayer",
            "updaterdsdbinstance",
            "updatestack",
            "updatevolume"
        ],
        "": [
            "createstack",
            "createuserprofile",
            "deleteuserprofile",
            "describemyuserprofile",
            "describeoperatingsystems",
            "describeuserprofiles",
            "updatemyuserprofile",
            "updateuserprofile"
        ]
    },
    "opsworks-cm": {
        "": [
            "associatenode",
            "createbackup",
            "createserver",
            "deletebackup",
            "deleteserver",
            "describeaccountattributes",
            "describebackups",
            "describeevents",
            "describenodeassociationstatus",
            "describeservers",
            "disassociatenode",
            "exportserverengineattribute",
            "listtagsforresource",
            "restoreserver",
            "startmaintenance",
            "tagresource",
            "untagresource",
            "updateserver",
            "updateserverengineattributes"
        ]
    },
    "organizations": {
        "handshake": [
            "accepthandshake",
            "cancelhandshake",
            "declinehandshake",
            "describehandshake"
        ],
        "policy": [
            "attachpolicy",
            "deletepolicy",
            "describepolicy",
            "detachpolicy",
            "listtagsforresource",
            "listtargetsforpolicy",
            "tagresource",
            "untagresource",
            "updatepolicy"
        ],
        "account": [
            "attachpolicy",
            "deregisterdelegatedadministrator",
            "describeaccount",
            "describeeffectivepolicy",
            "detachpolicy",
            "inviteaccounttoorganization",
            "listdelegatedservicesforaccount",
            "listparents",
            "listpoliciesfortarget",
            "listtagsforresource",
            "moveaccount",
            "registerdelegatedadministrator",
            "removeaccountfromorganization",
            "tagresource",
            "untagresource"
        ],
        "organizationalunit": [
            "attachpolicy",
            "createorganizationalunit",
            "deleteorganizationalunit",
            "describeorganizationalunit",
            "detachpolicy",
            "listaccountsforparent",
            "listchildren",
            "listorganizationalunitsforparent",
            "listparents",
            "listpoliciesfortarget",
            "listtagsforresource",
            "moveaccount",
            "tagresource",
            "untagresource",
            "updateorganizationalunit"
        ],
        "root": [
            "attachpolicy",
            "createorganizationalunit",
            "detachpolicy",
            "disablepolicytype",
            "enablepolicytype",
            "listaccountsforparent",
            "listchildren",
            "listorganizationalunitsforparent",
            "listpoliciesfortarget",
            "listtagsforresource",
            "moveaccount",
            "tagresource",
            "untagresource"
        ],
        "": [
            "attachpolicy",
            "createaccount",
            "creategovcloudaccount",
            "createorganization",
            "createorganizationalunit",
            "createpolicy",
            "deleteorganization",
            "deletepolicy",
            "deregisterdelegatedadministrator",
            "describecreateaccountstatus",
            "describeeffectivepolicy",
            "describeorganization",
            "describepolicy",
            "detachpolicy",
            "disableawsserviceaccess",
            "disablepolicytype",
            "enableawsserviceaccess",
            "enableallfeatures",
            "enablepolicytype",
            "inviteaccounttoorganization",
            "leaveorganization",
            "listawsserviceaccessfororganization",
            "listaccounts",
            "listcreateaccountstatus",
            "listdelegatedadministrators",
            "listhandshakesforaccount",
            "listhandshakesfororganization",
            "listpolicies",
            "listpoliciesfortarget",
            "listroots",
            "listtargetsforpolicy",
            "registerdelegatedadministrator",
            "tagresource",
            "untagresource",
            "updatepolicy"
        ]
    },
    "outposts": {
        "": [
            "createoutpost",
            "deleteoutpost",
            "deletesite",
            "getoutpost",
            "getoutpostinstancetypes",
            "listoutposts",
            "listsites",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ]
    },
    "panorama": {
        "": [
            "createapp",
            "createappdeployment",
            "createdatasource",
            "createdeploymentconfiguration",
            "createdevice",
            "createdeviceupdate",
            "createmodel",
            "describeappdeployment",
            "describedeviceupdate",
            "describesoftware",
            "getdeploymentconfiguration",
            "getwebsocketurl",
            "listappdeploymentoperations",
            "listapps",
            "listdeploymentconfigurations",
            "listdeviceupdates",
            "listdevices",
            "listmodels",
            "tagresource",
            "untagresource",
            "updatedevice"
        ],
        "appVersion": [
            "createappversion"
        ],
        "device": [
            "createdatasource",
            "createinputs",
            "createstreams",
            "deletedevice",
            "describedevice",
            "getinputs",
            "getstreams",
            "listdatasources",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "app": [
            "deleteapp",
            "deleteappversion",
            "describeapp",
            "describeappversion",
            "listappversions",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateapp",
            "updateappconfiguration"
        ],
        "dataSource": [
            "deletedatasource",
            "describedatasource",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedatasource"
        ],
        "model": [
            "deletemodel",
            "describemodel",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ]
    },
    "pi": {
        "metric-resource": [
            "describedimensionkeys",
            "getresourcemetrics"
        ]
    },
    "personalize": {
        "batchInferenceJob": [
            "createbatchinferencejob",
            "describebatchinferencejob"
        ],
        "campaign": [
            "createcampaign",
            "deletecampaign",
            "describecampaign",
            "getpersonalizedranking",
            "getrecommendations",
            "updatecampaign"
        ],
        "dataset": [
            "createdataset",
            "deletedataset",
            "describedataset",
            "putitems",
            "putusers"
        ],
        "datasetGroup": [
            "createdatasetgroup",
            "deletedatasetgroup",
            "describedatasetgroup"
        ],
        "datasetImportJob": [
            "createdatasetimportjob",
            "describedatasetimportjob"
        ],
        "eventTracker": [
            "createeventtracker",
            "deleteeventtracker",
            "describeeventtracker",
            "putevents"
        ],
        "filter": [
            "createfilter",
            "deletefilter",
            "describefilter"
        ],
        "schema": [
            "createschema",
            "deleteschema",
            "describeschema"
        ],
        "solution": [
            "createsolution",
            "createsolutionversion",
            "deletesolution",
            "describesolution",
            "describesolutionversion",
            "getsolutionmetrics"
        ],
        "algorithm": [
            "describealgorithm"
        ],
        "featureTransformation": [
            "describefeaturetransformation"
        ],
        "recipe": [
            "describerecipe"
        ],
        "": [
            "listbatchinferencejobs",
            "listcampaigns",
            "listdatasetgroups",
            "listdatasetimportjobs",
            "listdatasets",
            "listeventtrackers",
            "listfilters",
            "listrecipes",
            "listschemas",
            "listsolutionversions",
            "listsolutions"
        ]
    },
    "mobiletargeting": {
        "": [
            "createapp",
            "createcampaign",
            "createemailtemplate",
            "createjourney",
            "createpushtemplate",
            "createrecommenderconfiguration",
            "createsegment",
            "createsmstemplate",
            "createvoicetemplate",
            "getrecommenderconfigurations",
            "tagresource",
            "untagresource",
            "updatecampaign",
            "updateemailtemplate",
            "updatejourney",
            "updatejourneystate",
            "updatepushtemplate",
            "updatesegment",
            "updatesmstemplate",
            "updatevoicetemplate"
        ],
        "apps": [
            "createcampaign",
            "createexportjob",
            "createimportjob",
            "createjourney",
            "createsegment",
            "deleteadmchannel",
            "deleteapnschannel",
            "deleteapnssandboxchannel",
            "deleteapnsvoipchannel",
            "deleteapnsvoipsandboxchannel",
            "deleteapp",
            "deletebaiduchannel",
            "deletecampaign",
            "deleteemailchannel",
            "deleteendpoint",
            "deleteeventstream",
            "deletegcmchannel",
            "deletejourney",
            "deletesegment",
            "deletesmschannel",
            "deleteuserendpoints",
            "deletevoicechannel",
            "getadmchannel",
            "getapnschannel",
            "getapnssandboxchannel",
            "getapnsvoipchannel",
            "getapnsvoipsandboxchannel",
            "getapp",
            "getapplicationdaterangekpi",
            "getapplicationsettings",
            "getapps",
            "getbaiduchannel",
            "getcampaign",
            "getcampaignactivities",
            "getcampaigndaterangekpi",
            "getcampaignversion",
            "getcampaignversions",
            "getcampaigns",
            "getchannels",
            "getemailchannel",
            "getendpoint",
            "geteventstream",
            "getexportjob",
            "getexportjobs",
            "getgcmchannel",
            "getimportjob",
            "getimportjobs",
            "getjourney",
            "getjourneydaterangekpi",
            "getjourneyexecutionactivitymetrics",
            "getjourneyexecutionmetrics",
            "getsegment",
            "getsegmentexportjobs",
            "getsegmentimportjobs",
            "getsegmentversion",
            "getsegmentversions",
            "getsegments",
            "getsmschannel",
            "getuserendpoints",
            "getvoicechannel",
            "listjourneys",
            "listtagsforresource",
            "puteventstream",
            "putevents",
            "removeattributes",
            "sendmessages",
            "sendusersmessages",
            "tagresource",
            "untagresource",
            "updateadmchannel",
            "updateapnschannel",
            "updateapnssandboxchannel",
            "updateapnsvoipchannel",
            "updateapnsvoipsandboxchannel",
            "updateapplicationsettings",
            "updatebaiduchannel",
            "updatecampaign",
            "updateemailchannel",
            "updateendpoint",
            "updateendpointsbatch",
            "updategcmchannel",
            "updatejourney",
            "updatejourneystate",
            "updatesegment",
            "updatesmschannel",
            "updatevoicechannel"
        ],
        "campaigns": [
            "deletecampaign",
            "getcampaign",
            "getcampaignactivities",
            "getcampaigndaterangekpi",
            "getcampaignversion",
            "getcampaignversions",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatecampaign"
        ],
        "templates": [
            "deleteemailtemplate",
            "deletepushtemplate",
            "deletesmstemplate",
            "deletevoicetemplate",
            "getemailtemplate",
            "getpushtemplate",
            "getsmstemplate",
            "getvoicetemplate",
            "listtemplateversions",
            "listtemplates",
            "updateemailtemplate",
            "updatepushtemplate",
            "updatesmstemplate",
            "updatetemplateactiveversion",
            "updatevoicetemplate"
        ],
        "journeys": [
            "deletejourney",
            "getjourney",
            "getjourneydaterangekpi",
            "getjourneyexecutionactivitymetrics",
            "getjourneyexecutionmetrics",
            "updatejourney",
            "updatejourneystate"
        ],
        "recommenders": [
            "deleterecommenderconfiguration",
            "getrecommenderconfiguration",
            "updaterecommenderconfiguration"
        ],
        "segments": [
            "deletesegment",
            "getsegment",
            "getsegmentexportjobs",
            "getsegmentimportjobs",
            "getsegmentversion",
            "getsegmentversions",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatesegment"
        ],
        "phone-number-validate": [
            "phonenumbervalidate"
        ]
    },
    "ses": {
        "": [
            "createconfigurationset",
            "createconfigurationseteventdestination",
            "createcontact",
            "createcontactlist",
            "creatededicatedippool",
            "createdeliverabilitytestreport",
            "createemailidentity",
            "createemailidentitypolicy",
            "createemailtemplate",
            "createimportjob",
            "deleteconfigurationset",
            "deleteconfigurationseteventdestination",
            "deletecontact",
            "deletecontactlist",
            "deletededicatedippool",
            "deleteemailidentity",
            "deleteemailidentitypolicy",
            "deletesuppresseddestination",
            "getaccount",
            "getblacklistreports",
            "getconfigurationset",
            "getconfigurationseteventdestinations",
            "getcontact",
            "getdedicatedip",
            "getdedicatedips",
            "getdeliverabilitydashboardoptions",
            "getdeliverabilitytestreport",
            "getdomaindeliverabilitycampaign",
            "getdomainstatisticsreport",
            "getemailidentity",
            "getemailidentitypolicies",
            "getsuppresseddestination",
            "listconfigurationsets",
            "listcontactlists",
            "listcustomverificationemailtemplates",
            "listdedicatedippools",
            "listdeliverabilitytestreports",
            "listdomaindeliverabilitycampaigns",
            "listemailidentities",
            "listemailtemplates",
            "listimportjobs",
            "listsuppresseddestinations",
            "putaccountdedicatedipwarmupattributes",
            "putaccountdetails",
            "putaccountsendingattributes",
            "putaccountsuppressionattributes",
            "putconfigurationsetdeliveryoptions",
            "putconfigurationsetreputationoptions",
            "putconfigurationsetsendingoptions",
            "putconfigurationsetsuppressionoptions",
            "putconfigurationsettrackingoptions",
            "putdedicatedipinpool",
            "putdedicatedipwarmupattributes",
            "putdeliverabilitydashboardoption",
            "putemailidentityconfigurationsetattributes",
            "putemailidentitydkimattributes",
            "putemailidentitydkimsigningattributes",
            "putemailidentityfeedbackattributes",
            "putemailidentitymailfromattributes",
            "putsuppresseddestination",
            "sendbulkemail",
            "sendemail",
            "tagresource",
            "untagresource",
            "updateconfigurationseteventdestination",
            "updatecontact",
            "updatecontactlist",
            "updateemailidentitypolicy"
        ],
        "configuration-set": [
            "createconfigurationseteventdestination",
            "deleteconfigurationset",
            "deleteconfigurationseteventdestination",
            "getconfigurationset",
            "getconfigurationseteventdestinations",
            "listtagsforresource",
            "putconfigurationsetdeliveryoptions",
            "putconfigurationsetreputationoptions",
            "putconfigurationsetsendingoptions",
            "putconfigurationsetsuppressionoptions",
            "putconfigurationsettrackingoptions",
            "putemailidentityconfigurationsetattributes",
            "tagresource",
            "untagresource",
            "updateconfigurationseteventdestination"
        ],
        "contact-list": [
            "createcontact",
            "deletecontact",
            "deletecontactlist",
            "getcontact",
            "getcontactlist",
            "listcontacts",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatecontact",
            "updatecontactlist"
        ],
        "identity": [
            "createcustomverificationemailtemplate",
            "createdeliverabilitytestreport",
            "createemailidentitypolicy",
            "deleteemailidentity",
            "deleteemailidentitypolicy",
            "getdomainstatisticsreport",
            "getemailidentity",
            "getemailidentitypolicies",
            "listtagsforresource",
            "putemailidentityconfigurationsetattributes",
            "putemailidentitydkimattributes",
            "putemailidentitydkimsigningattributes",
            "putemailidentityfeedbackattributes",
            "putemailidentitymailfromattributes",
            "sendemail",
            "tagresource",
            "untagresource",
            "updateemailidentitypolicy"
        ],
        "custom-verification-email-template": [
            "deletecustomverificationemailtemplate",
            "getcustomverificationemailtemplate",
            "sendcustomverificationemail",
            "updatecustomverificationemailtemplate"
        ],
        "dedicated-ip-pool": [
            "deletededicatedippool",
            "getdedicatedips",
            "listtagsforresource",
            "putdedicatedipinpool",
            "tagresource",
            "untagresource"
        ],
        "template": [
            "deleteemailtemplate",
            "getemailtemplate",
            "testrenderemailtemplate",
            "updateemailtemplate"
        ],
        "deliverability-test-report": [
            "getdeliverabilitytestreport",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "import-job": [
            "getimportjob"
        ]
    },
    "sms-voice": {
        "": [
            "createconfigurationset",
            "createconfigurationseteventdestination",
            "deleteconfigurationset",
            "deleteconfigurationseteventdestination",
            "getconfigurationseteventdestinations",
            "listconfigurationsets",
            "sendvoicemessage",
            "updateconfigurationseteventdestination"
        ]
    },
    "polly": {
        "lexicon": [
            "deletelexicon",
            "getlexicon",
            "putlexicon",
            "startspeechsynthesistask",
            "synthesizespeech"
        ],
        "": [
            "describevoices",
            "getspeechsynthesistask",
            "listlexicons",
            "listspeechsynthesistasks"
        ]
    },
    "pricing": {
        "": [
            "describeservices",
            "getattributevalues",
            "getproducts"
        ]
    },
    "proton": {
        "environment": [
            "createenvironment",
            "deleteenvironment",
            "getenvironment",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateenvironment"
        ],
        "": [
            "createenvironment",
            "createenvironmenttemplate",
            "createenvironmenttemplatemajorversion",
            "createenvironmenttemplateminorversion",
            "createservice",
            "createservicetemplate",
            "createservicetemplatemajorversion",
            "createservicetemplateminorversion",
            "deleteaccountroles",
            "getaccountroles",
            "listenvironmenttemplates",
            "listenvironments",
            "listserviceinstances",
            "listservicetemplates",
            "listservices",
            "tagresource",
            "untagresource",
            "updateaccountroles"
        ],
        "environment-template": [
            "createenvironmenttemplate",
            "createenvironmenttemplatemajorversion",
            "createenvironmenttemplateminorversion",
            "deleteenvironmenttemplate",
            "deleteenvironmenttemplatemajorversion",
            "deleteenvironmenttemplateminorversion",
            "getenvironmenttemplate",
            "getenvironmenttemplatemajorversion",
            "getenvironmenttemplateminorversion",
            "listenvironmenttemplatemajorversions",
            "listenvironmenttemplateminorversions",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateenvironmenttemplate",
            "updateenvironmenttemplatemajorversion",
            "updateenvironmenttemplateminorversion"
        ],
        "service": [
            "createservice",
            "deleteservice",
            "getservice",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateservice",
            "updateservicepipeline"
        ],
        "service-template": [
            "createservicetemplate",
            "createservicetemplatemajorversion",
            "createservicetemplateminorversion",
            "deleteservicetemplate",
            "deleteservicetemplatemajorversion",
            "deleteservicetemplateminorversion",
            "getservicetemplate",
            "getservicetemplatemajorversion",
            "getservicetemplateminorversion",
            "listservicetemplatemajorversions",
            "listservicetemplateminorversions",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateservicetemplate",
            "updateservicetemplatemajorversion",
            "updateservicetemplateminorversion"
        ],
        "service-instance": [
            "getserviceinstance",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateserviceinstance"
        ],
        "environment-template-major-version": [
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "environment-template-minor-version": [
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "service-template-major-version": [
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "service-template-minor-version": [
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ]
    },
    "purchase-orders": {
        "": [
            "modifypurchaseorders",
            "viewpurchaseorders"
        ]
    },
    "qldb": {
        "stream": [
            "canceljournalkinesisstream",
            "describejournalkinesisstream",
            "listjournalkinesisstreamsforledger",
            "streamjournaltokinesis"
        ],
        "ledger": [
            "createledger",
            "deleteledger",
            "describejournals3export",
            "describeledger",
            "executestatement",
            "exportjournaltos3",
            "getblock",
            "getdigest",
            "getrevision",
            "insertsampledata",
            "listjournals3exportsforledger",
            "listtagsforresource",
            "sendcommand",
            "showcatalog",
            "tagresource",
            "untagresource",
            "updateledger"
        ],
        "": [
            "createledger",
            "listjournals3exports",
            "listledgers",
            "tagresource",
            "untagresource"
        ]
    },
    "quicksight": {
        "ingestion": [
            "cancelingestion",
            "createingestion",
            "describeingestion"
        ],
        "": [
            "cancelingestion",
            "createaccountcustomization",
            "createadmin",
            "createanalysis",
            "createcustompermissions",
            "createdashboard",
            "createdataset",
            "createdatasource",
            "creategroup",
            "creategroupmembership",
            "createingestion",
            "createnamespace",
            "createreader",
            "createtemplate",
            "createtemplatealias",
            "createtheme",
            "createthemealias",
            "createuser",
            "createvpcconnection",
            "deletecustompermissions",
            "deletedataset",
            "deletedatasource",
            "deletevpcconnection",
            "describeaccountsettings",
            "describecustompermissions",
            "describedataset",
            "describedatasetpermissions",
            "describedatasource",
            "describedatasourcepermissions",
            "describeingestion",
            "getanonymoususerembedurl",
            "getgroupmapping",
            "getsessionembedurl",
            "listcustompermissions",
            "listdatasets",
            "listdatasources",
            "listingestions",
            "listnamespaces",
            "passdataset",
            "passdatasource",
            "searchdirectorygroups",
            "setgroupmapping",
            "subscribe",
            "tagresource",
            "unsubscribe",
            "untagresource",
            "updateaccountsettings",
            "updatecustompermissions",
            "updatedataset",
            "updatedatasetpermissions",
            "updatedatasource",
            "updatedatasourcepermissions"
        ],
        "user": [
            "createadmin",
            "createreader",
            "createuser",
            "deleteuser",
            "deleteuserbyprincipalid",
            "describeuser",
            "getauthcode",
            "listusergroups",
            "listusers",
            "registeruser",
            "updateuser"
        ],
        "analysis": [
            "createanalysis",
            "deleteanalysis",
            "describeanalysis",
            "describeanalysispermissions",
            "listanalyses",
            "restoreanalysis",
            "searchanalyses",
            "updateanalysis",
            "updateanalysispermissions"
        ],
        "dashboard": [
            "createdashboard",
            "deletedashboard",
            "describedashboard",
            "describedashboardpermissions",
            "getdashboardembedurl",
            "listdashboardversions",
            "listdashboards",
            "listtagsforresource",
            "searchdashboards",
            "tagresource",
            "untagresource",
            "updatedashboard",
            "updatedashboardpermissions",
            "updatedashboardpublishedversion"
        ],
        "datasource": [
            "createdataset",
            "deletedatasource",
            "describedatasource",
            "describedatasourcepermissions",
            "passdatasource",
            "updatedataset",
            "updatedatasource",
            "updatedatasourcepermissions"
        ],
        "group": [
            "creategroup",
            "creategroupmembership",
            "deletegroup",
            "deletegroupmembership",
            "describegroup",
            "listgroupmemberships",
            "listgroups",
            "updategroup"
        ],
        "assignment": [
            "createiampolicyassignment",
            "deleteiampolicyassignment",
            "describeiampolicyassignment",
            "listiampolicyassignments",
            "listiampolicyassignmentsforuser",
            "updateiampolicyassignment"
        ],
        "namespace": [
            "createnamespace",
            "deletenamespace",
            "describenamespace"
        ],
        "template": [
            "createtemplate",
            "createtemplatealias",
            "deletetemplate",
            "deletetemplatealias",
            "describetemplate",
            "describetemplatealias",
            "describetemplatepermissions",
            "listtagsforresource",
            "listtemplatealiases",
            "listtemplateversions",
            "listtemplates",
            "tagresource",
            "untagresource",
            "updatetemplate",
            "updatetemplatealias",
            "updatetemplatepermissions"
        ],
        "theme": [
            "createtheme",
            "createthemealias",
            "deletetheme",
            "deletethemealias",
            "describetheme",
            "describethemealias",
            "describethemepermissions",
            "listtagsforresource",
            "listthemealiases",
            "listthemeversions",
            "listthemes",
            "tagresource",
            "untagresource",
            "updatetheme",
            "updatethemealias",
            "updatethemepermissions"
        ],
        "customization": [
            "deleteaccountcustomization",
            "describeaccountcustomization",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateaccountcustomization"
        ],
        "dataset": [
            "deletedataset",
            "describedataset",
            "describedatasetpermissions",
            "passdataset",
            "updatedataset",
            "updatedatasetpermissions"
        ]
    },
    "rds": {
        "cluster": [
            "addroletodbcluster",
            "applypendingmaintenanceaction",
            "backtrackdbcluster",
            "createdbcluster",
            "createdbclusterendpoint",
            "createdbclustersnapshot",
            "createglobalcluster",
            "deletedbcluster",
            "deregisterdbproxytargets",
            "describedbclusterbacktracks",
            "describedbclusterendpoints",
            "describedbclusters",
            "describedbproxytargets",
            "describependingmaintenanceactions",
            "failoverdbcluster",
            "failoverglobalcluster",
            "modifycurrentdbclustercapacity",
            "modifydbcluster",
            "promotereadreplicadbcluster",
            "removefromglobalcluster",
            "removerolefromdbcluster",
            "restoredbclusterfroms3",
            "restoredbclusterfromsnapshot",
            "restoredbclustertopointintime",
            "startactivitystream",
            "startdbcluster",
            "stopactivitystream",
            "stopdbcluster"
        ],
        "db": [
            "addroletodbinstance",
            "addtagstoresource",
            "applypendingmaintenanceaction",
            "createdbinstance",
            "createdbinstancereadreplica",
            "createdbsnapshot",
            "deletedbinstance",
            "deregisterdbproxytargets",
            "describedbinstanceautomatedbackups",
            "describedbinstances",
            "describedblogfiles",
            "describedbproxytargets",
            "describedbsnapshots",
            "describependingmaintenanceactions",
            "describevaliddbinstancemodifications",
            "downloaddblogfileportion",
            "listtagsforresource",
            "modifydbinstance",
            "promotereadreplica",
            "rebootdbinstance",
            "removerolefromdbinstance",
            "removetagsfromresource",
            "restoredbinstancefromdbsnapshot",
            "restoredbinstancefroms3",
            "restoredbinstancetopointintime",
            "startdbinstance",
            "startdbinstanceautomatedbackupsreplication",
            "stopdbinstance",
            "stopdbinstanceautomatedbackupsreplication"
        ],
        "es": [
            "addsourceidentifiertosubscription",
            "addtagstoresource",
            "createeventsubscription",
            "deleteeventsubscription",
            "describeeventsubscriptions",
            "listtagsforresource",
            "modifyeventsubscription",
            "removesourceidentifierfromsubscription",
            "removetagsfromresource"
        ],
        "og": [
            "addtagstoresource",
            "copyoptiongroup",
            "createdbcluster",
            "createdbinstance",
            "createdbinstancereadreplica",
            "createoptiongroup",
            "deleteoptiongroup",
            "describeoptiongroupoptions",
            "describeoptiongroups",
            "listtagsforresource",
            "modifydbcluster",
            "modifydbinstance",
            "modifyoptiongroup",
            "removetagsfromresource",
            "restoredbclusterfromsnapshot",
            "restoredbclustertopointintime",
            "restoredbinstancefromdbsnapshot",
            "restoredbinstancetopointintime"
        ],
        "pg": [
            "addtagstoresource",
            "copydbparametergroup",
            "createdbinstance",
            "createdbparametergroup",
            "deletedbparametergroup",
            "describedbparametergroups",
            "describedbparameters",
            "listtagsforresource",
            "modifydbinstance",
            "modifydbparametergroup",
            "removetagsfromresource",
            "resetdbparametergroup"
        ],
        "proxy": [
            "addtagstoresource",
            "createdbproxyendpoint",
            "deletedbproxy",
            "deregisterdbproxytargets",
            "describedbproxies",
            "describedbproxyendpoints",
            "describedbproxytargetgroups",
            "describedbproxytargets",
            "listtagsforresource",
            "modifydbproxy",
            "removetagsfromresource"
        ],
        "proxy-endpoint": [
            "addtagstoresource",
            "createdbproxyendpoint",
            "deletedbproxyendpoint",
            "describedbproxyendpoints",
            "listtagsforresource",
            "modifydbproxyendpoint",
            "removetagsfromresource"
        ],
        "ri": [
            "addtagstoresource",
            "describereserveddbinstances",
            "listtagsforresource",
            "purchasereserveddbinstancesoffering",
            "removetagsfromresource"
        ],
        "secgrp": [
            "addtagstoresource",
            "authorizedbsecuritygroupingress",
            "createdbinstance",
            "createdbsecuritygroup",
            "deletedbsecuritygroup",
            "describedbsecuritygroups",
            "listtagsforresource",
            "modifydbinstance",
            "removetagsfromresource",
            "revokedbsecuritygroupingress"
        ],
        "snapshot": [
            "addtagstoresource",
            "copydbsnapshot",
            "createdbsnapshot",
            "deletedbsnapshot",
            "describedbsnapshotattributes",
            "describedbsnapshots",
            "listtagsforresource",
            "modifydbsnapshot",
            "modifydbsnapshotattribute",
            "removetagsfromresource",
            "restoredbinstancefromdbsnapshot"
        ],
        "subgrp": [
            "addtagstoresource",
            "createdbcluster",
            "createdbinstance",
            "createdbinstancereadreplica",
            "createdbsubnetgroup",
            "deletedbsubnetgroup",
            "describedbsubnetgroups",
            "listtagsforresource",
            "modifydbsubnetgroup",
            "removetagsfromresource",
            "restoredbclustertopointintime",
            "restoredbinstancefromdbsnapshot",
            "restoredbinstancetopointintime"
        ],
        "target-group": [
            "addtagstoresource",
            "deregisterdbproxytargets",
            "describedbproxytargets",
            "listtagsforresource",
            "modifydbproxytargetgroup",
            "registerdbproxytargets",
            "removetagsfromresource"
        ],
        "": [
            "addtagstoresource",
            "cancelexporttask",
            "copydbclusterparametergroup",
            "copydbclustersnapshot",
            "copydbparametergroup",
            "copydbsnapshot",
            "copyoptiongroup",
            "createcustomavailabilityzone",
            "createdbcluster",
            "createdbclusterendpoint",
            "createdbclusterparametergroup",
            "createdbclustersnapshot",
            "createdbinstance",
            "createdbinstancereadreplica",
            "createdbparametergroup",
            "createdbproxy",
            "createdbproxyendpoint",
            "createdbsecuritygroup",
            "createdbsnapshot",
            "createdbsubnetgroup",
            "createeventsubscription",
            "createoptiongroup",
            "crossregioncommunication",
            "deletecustomavailabilityzone",
            "deletedbinstanceautomatedbackup",
            "deleteinstallationmedia",
            "describeaccountattributes",
            "describecertificates",
            "describecustomavailabilityzones",
            "describedbengineversions",
            "describeenginedefaultclusterparameters",
            "describeenginedefaultparameters",
            "describeeventcategories",
            "describeevents",
            "describeexporttasks",
            "describeinstallationmedia",
            "describeorderabledbinstanceoptions",
            "describereserveddbinstancesofferings",
            "describesourceregions",
            "importinstallationmedia",
            "modifycertificates",
            "purchasereserveddbinstancesoffering",
            "removetagsfromresource",
            "restoredbclusterfroms3",
            "restoredbclusterfromsnapshot",
            "restoredbclustertopointintime",
            "restoredbinstancefromdbsnapshot",
            "restoredbinstancefroms3",
            "restoredbinstancetopointintime",
            "startexporttask"
        ],
        "cluster-pg": [
            "copydbclusterparametergroup",
            "createdbcluster",
            "createdbclusterparametergroup",
            "deletedbclusterparametergroup",
            "describedbclusterparametergroups",
            "describedbclusterparameters",
            "modifydbcluster",
            "modifydbclusterparametergroup",
            "resetdbclusterparametergroup"
        ],
        "cluster-snapshot": [
            "copydbclustersnapshot",
            "createdbclustersnapshot",
            "deletedbcluster",
            "deletedbclustersnapshot",
            "describedbclustersnapshotattributes",
            "describedbclustersnapshots",
            "modifydbclustersnapshotattribute",
            "restoredbclusterfromsnapshot"
        ],
        "cluster-endpoint": [
            "createdbclusterendpoint",
            "deletedbclusterendpoint",
            "describedbclusterendpoints",
            "modifydbclusterendpoint"
        ],
        "global-cluster": [
            "createglobalcluster",
            "deleteglobalcluster",
            "describeglobalclusters",
            "failoverglobalcluster",
            "modifyglobalcluster",
            "removefromglobalcluster"
        ]
    },
    "rds-data": {
        "cluster": [
            "batchexecutestatement",
            "begintransaction",
            "committransaction",
            "executesql",
            "executestatement",
            "rollbacktransaction"
        ],
        "": [
            "batchexecutestatement",
            "begintransaction",
            "committransaction",
            "executesql",
            "executestatement",
            "rollbacktransaction"
        ]
    },
    "rds-db": {
        "db-user": [
            "connect"
        ]
    },
    "redshift": {
        "": [
            "acceptreservednodeexchange",
            "cancelquery",
            "cancelquerysession",
            "createcluster",
            "createclusterparametergroup",
            "createclustersecuritygroup",
            "createclustersnapshot",
            "createclustersubnetgroup",
            "createclusteruser",
            "createeventsubscription",
            "createhsmclientcertificate",
            "createhsmconfiguration",
            "createsavedquery",
            "createscheduledaction",
            "createsnapshotcopygrant",
            "createsnapshotschedule",
            "createtags",
            "createusagelimit",
            "deletesavedqueries",
            "deletescheduledaction",
            "deletetags",
            "describeaccountattributes",
            "describeclusterdbrevisions",
            "describeclusterparametergroups",
            "describeclustersecuritygroups",
            "describeclustersnapshots",
            "describeclustersubnetgroups",
            "describeclustertracks",
            "describeclusterversions",
            "describeclusters",
            "describedefaultclusterparameters",
            "describeeventcategories",
            "describeeventsubscriptions",
            "describeevents",
            "describehsmclientcertificates",
            "describehsmconfigurations",
            "describenodeconfigurationoptions",
            "describeorderableclusteroptions",
            "describequery",
            "describereservednodeofferings",
            "describereservednodes",
            "describesavedqueries",
            "describescheduledactions",
            "describesnapshotcopygrants",
            "describestorage",
            "describetable",
            "describetablerestorestatus",
            "executequery",
            "fetchresults",
            "getclustercredentials",
            "getreservednodeexchangeofferings",
            "listdatabases",
            "listsavedqueries",
            "listschemas",
            "listtables",
            "modifyclustermaintenance",
            "modifysavedquery",
            "modifyscheduledaction",
            "purchasereservednodeoffering",
            "viewqueriesfromconsole",
            "viewqueriesinconsole"
        ],
        "securitygroup": [
            "authorizeclustersecuritygroupingress",
            "createclustersecuritygroup",
            "createtags",
            "deleteclustersecuritygroup",
            "deletetags",
            "describetags",
            "revokeclustersecuritygroupingress"
        ],
        "securitygroupingress-ec2securitygroup": [
            "authorizeclustersecuritygroupingress",
            "createtags",
            "deletetags",
            "describetags",
            "revokeclustersecuritygroupingress"
        ],
        "snapshot": [
            "authorizesnapshotaccess",
            "batchdeleteclustersnapshots",
            "batchmodifyclustersnapshots",
            "copyclustersnapshot",
            "createclustersnapshot",
            "createtags",
            "deleteclustersnapshot",
            "deletetags",
            "describetags",
            "modifyclustersnapshot",
            "restorefromclustersnapshot",
            "restoretablefromclustersnapshot",
            "revokesnapshotaccess"
        ],
        "cluster": [
            "cancelresize",
            "createcluster",
            "createtags",
            "deletecluster",
            "deletetags",
            "describeloggingstatus",
            "describeresize",
            "describetags",
            "disablelogging",
            "disablesnapshotcopy",
            "enablelogging",
            "enablesnapshotcopy",
            "modifyaquaconfiguration",
            "modifycluster",
            "modifyclusterdbrevision",
            "modifyclusteriamroles",
            "modifyclustersnapshotschedule",
            "modifysnapshotcopyretentionperiod",
            "pausecluster",
            "rebootcluster",
            "resizecluster",
            "restorefromclustersnapshot",
            "restoretablefromclustersnapshot",
            "resumecluster",
            "rotateencryptionkey"
        ],
        "parametergroup": [
            "createclusterparametergroup",
            "createtags",
            "deleteclusterparametergroup",
            "deletetags",
            "describeclusterparameters",
            "describetags",
            "modifyclusterparametergroup",
            "resetclusterparametergroup"
        ],
        "subnetgroup": [
            "createclustersubnetgroup",
            "createtags",
            "deleteclustersubnetgroup",
            "deletetags",
            "describetags",
            "modifyclustersubnetgroup"
        ],
        "dbuser": [
            "createclusteruser",
            "createtags",
            "deletetags",
            "describetags",
            "getclustercredentials"
        ],
        "eventsubscription": [
            "createeventsubscription",
            "createtags",
            "deleteeventsubscription",
            "deletetags",
            "describetags",
            "modifyeventsubscription"
        ],
        "hsmclientcertificate": [
            "createhsmclientcertificate",
            "createtags",
            "deletehsmclientcertificate",
            "deletetags",
            "describetags"
        ],
        "hsmconfiguration": [
            "createhsmconfiguration",
            "createtags",
            "deletehsmconfiguration",
            "deletetags",
            "describetags"
        ],
        "snapshotcopygrant": [
            "createsnapshotcopygrant",
            "createtags",
            "deletesnapshotcopygrant",
            "deletetags",
            "describetags"
        ],
        "snapshotschedule": [
            "createsnapshotschedule",
            "createtags",
            "deletesnapshotschedule",
            "deletetags",
            "describesnapshotschedules",
            "describetags",
            "modifysnapshotschedule"
        ],
        "dbgroup": [
            "createtags",
            "deletetags",
            "describetags",
            "getclustercredentials",
            "joingroup"
        ],
        "dbname": [
            "createtags",
            "deletetags",
            "describetags",
            "getclustercredentials"
        ],
        "securitygroupingress-cidr": [
            "createtags",
            "deletetags",
            "describetags"
        ],
        "usagelimit": [
            "createtags",
            "createusagelimit",
            "deletetags",
            "deleteusagelimit",
            "describetags",
            "describeusagelimits",
            "modifyusagelimit"
        ]
    },
    "redshift-data": {
        "": [
            "cancelstatement",
            "describestatement",
            "describetable",
            "executestatement",
            "getstatementresult",
            "listdatabases",
            "listschemas",
            "liststatements",
            "listtables"
        ]
    },
    "rekognition": {
        "": [
            "comparefaces",
            "createcollection",
            "createprojectversion",
            "createstreamprocessor",
            "describeprojects",
            "detectfaces",
            "detectlabels",
            "detectmoderationlabels",
            "detectprotectiveequipment",
            "detecttext",
            "getcelebrityinfo",
            "getcelebrityrecognition",
            "getcontentmoderation",
            "getfacedetection",
            "getfacesearch",
            "getlabeldetection",
            "getpersontracking",
            "getsegmentdetection",
            "gettextdetection",
            "recognizecelebrities",
            "startcelebrityrecognition",
            "startcontentmoderation",
            "startfacedetection",
            "startlabeldetection",
            "startpersontracking",
            "startsegmentdetection",
            "starttextdetection",
            "tagresource",
            "untagresource"
        ],
        "collection": [
            "createcollection",
            "createstreamprocessor",
            "deletecollection",
            "deletefaces",
            "describecollection",
            "indexfaces",
            "listcollections",
            "listfaces",
            "searchfaces",
            "searchfacesbyimage",
            "startfacesearch"
        ],
        "project": [
            "createproject",
            "createprojectversion",
            "deleteproject",
            "describeprojectversions"
        ],
        "projectversion": [
            "createprojectversion",
            "deleteprojectversion",
            "detectcustomlabels",
            "listtagsforresource",
            "startprojectversion",
            "stopprojectversion",
            "tagresource",
            "untagresource"
        ],
        "streamprocessor": [
            "createstreamprocessor",
            "deletestreamprocessor",
            "describestreamprocessor",
            "liststreamprocessors",
            "startstreamprocessor",
            "stopstreamprocessor"
        ]
    },
    "ram": {
        "resource-share-invitation": [
            "acceptresourceshareinvitation",
            "listpendinginvitationresources",
            "rejectresourceshareinvitation"
        ],
        "": [
            "acceptresourceshareinvitation",
            "associateresourceshare",
            "createresourceshare",
            "deleteresourceshare",
            "disassociateresourceshare",
            "enablesharingwithawsorganization",
            "getpermission",
            "getresourcepolicies",
            "getresourceshareassociations",
            "getresourceshareinvitations",
            "getresourceshares",
            "listpermissions",
            "listprincipals",
            "listresourcesharepermissions",
            "listresourcetypes",
            "listresources",
            "rejectresourceshareinvitation",
            "tagresource",
            "untagresource",
            "updateresourceshare"
        ],
        "resource-share": [
            "associateresourceshare",
            "associateresourcesharepermission",
            "deleteresourceshare",
            "disassociateresourceshare",
            "disassociateresourcesharepermission",
            "listresourcesharepermissions",
            "promoteresourcesharecreatedfrompolicy",
            "tagresource",
            "untagresource",
            "updateresourceshare"
        ],
        "permission": [
            "associateresourcesharepermission",
            "disassociateresourcesharepermission",
            "getpermission"
        ]
    },
    "tag": {
        "": [
            "describereportcreation",
            "getcompliancesummary",
            "getresources",
            "gettagkeys",
            "gettagvalues",
            "startreportcreation",
            "tagresources",
            "untagresources"
        ]
    },
    "resource-groups": {
        "": [
            "creategroup",
            "listgroups",
            "searchresources",
            "tag",
            "untag"
        ],
        "group": [
            "deletegroup",
            "getgroup",
            "getgroupconfiguration",
            "getgroupquery",
            "gettags",
            "groupresources",
            "listgroupresources",
            "putgroupconfiguration",
            "putgrouppolicy",
            "tag",
            "ungroupresources",
            "untag",
            "updategroup",
            "updategroupquery"
        ]
    },
    "robomaker": {
        "": [
            "batchdeleteworlds",
            "batchdescribesimulationjob",
            "createdeploymentjob",
            "createfleet",
            "createrobot",
            "createrobotapplication",
            "createsimulationapplication",
            "createsimulationjob",
            "createworldtemplate",
            "listdeploymentjobs",
            "listfleets",
            "listrobotapplications",
            "listrobots",
            "listsimulationapplications",
            "listsimulationjobbatches",
            "listsimulationjobs",
            "listsupportedavailabilityzones",
            "listworldexportjobs",
            "listworldgenerationjobs",
            "listworldtemplates",
            "listworlds",
            "startsimulationjobbatch",
            "tagresource",
            "untagresource",
            "updaterobotdeployment"
        ],
        "deploymentJob": [
            "canceldeploymentjob",
            "describedeploymentjob",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "simulationJob": [
            "cancelsimulationjob",
            "describesimulationjob",
            "listtagsforresource",
            "restartsimulationjob",
            "tagresource",
            "untagresource"
        ],
        "simulationJobBatch": [
            "cancelsimulationjobbatch",
            "describesimulationjobbatch",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "worldExportJob": [
            "cancelworldexportjob",
            "describeworldexportjob",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "worldGenerationJob": [
            "cancelworldgenerationjob",
            "describeworldgenerationjob",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "robotApplication": [
            "createrobotapplicationversion",
            "deleterobotapplication",
            "describerobotapplication",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updaterobotapplication"
        ],
        "simulationApplication": [
            "createsimulationapplicationversion",
            "deletesimulationapplication",
            "describesimulationapplication",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatesimulationapplication"
        ],
        "world": [
            "createworldexportjob",
            "describeworld",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "worldTemplate": [
            "createworldgenerationjob",
            "deleteworldtemplate",
            "describeworldtemplate",
            "getworldtemplatebody",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateworldtemplate"
        ],
        "deploymentFleet": [
            "deletefleet",
            "deregisterrobot",
            "describefleet",
            "listtagsforresource",
            "registerrobot",
            "syncdeploymentjob",
            "tagresource",
            "untagresource"
        ],
        "robot": [
            "deleterobot",
            "deregisterrobot",
            "describerobot",
            "listtagsforresource",
            "registerrobot",
            "tagresource",
            "untagresource"
        ]
    },
    "route53": {
        "hostedzone": [
            "activatekeysigningkey",
            "associatevpcwithhostedzone",
            "changeresourcerecordsets",
            "changetagsforresource",
            "createkeysigningkey",
            "createqueryloggingconfig",
            "createtrafficpolicyinstance",
            "createvpcassociationauthorization",
            "deactivatekeysigningkey",
            "deletehostedzone",
            "deletekeysigningkey",
            "deletevpcassociationauthorization",
            "disablehostedzonednssec",
            "disassociatevpcfromhostedzone",
            "enablehostedzonednssec",
            "getdnssec",
            "gethostedzone",
            "gethostedzonelimit",
            "listqueryloggingconfigs",
            "listresourcerecordsets",
            "listtagsforresource",
            "listtagsforresources",
            "listtrafficpolicyinstancesbyhostedzone",
            "listvpcassociationauthorizations",
            "updatehostedzonecomment"
        ],
        "vpc": [
            "associatevpcwithhostedzone",
            "createhostedzone",
            "disassociatevpcfromhostedzone",
            "listhostedzonesbyvpc"
        ],
        "healthcheck": [
            "changetagsforresource",
            "deletehealthcheck",
            "gethealthcheck",
            "gethealthchecklastfailurereason",
            "gethealthcheckstatus",
            "listtagsforresource",
            "listtagsforresources",
            "updatehealthcheck"
        ],
        "": [
            "createhealthcheck",
            "createreusabledelegationset",
            "createtrafficpolicy",
            "getaccountlimit",
            "getcheckeripranges",
            "getgeolocation",
            "gethealthcheckcount",
            "gethostedzonecount",
            "gettrafficpolicyinstancecount",
            "listgeolocations",
            "listhealthchecks",
            "listhostedzones",
            "listhostedzonesbyname",
            "listreusabledelegationsets",
            "listtrafficpolicies",
            "listtrafficpolicyinstances",
            "testdnsanswer"
        ],
        "trafficpolicy": [
            "createtrafficpolicyinstance",
            "createtrafficpolicyversion",
            "deletetrafficpolicy",
            "gettrafficpolicy",
            "listtrafficpolicyinstancesbypolicy",
            "listtrafficpolicyversions",
            "updatetrafficpolicycomment"
        ],
        "queryloggingconfig": [
            "deletequeryloggingconfig",
            "getqueryloggingconfig"
        ],
        "delegationset": [
            "deletereusabledelegationset",
            "getreusabledelegationset",
            "getreusabledelegationsetlimit"
        ],
        "trafficpolicyinstance": [
            "deletetrafficpolicyinstance",
            "gettrafficpolicyinstance",
            "updatetrafficpolicyinstance"
        ],
        "change": [
            "getchange"
        ]
    },
    "route53domains": {
        "": [
            "acceptdomaintransferfromanotherawsaccount",
            "canceldomaintransfertoanotherawsaccount",
            "checkdomainavailability",
            "checkdomaintransferability",
            "deletetagsfordomain",
            "disabledomainautorenew",
            "disabledomaintransferlock",
            "enabledomainautorenew",
            "enabledomaintransferlock",
            "getcontactreachabilitystatus",
            "getdomaindetail",
            "getdomainsuggestions",
            "getoperationdetail",
            "listdomains",
            "listoperations",
            "listtagsfordomain",
            "registerdomain",
            "rejectdomaintransferfromanotherawsaccount",
            "renewdomain",
            "resendcontactreachabilityemail",
            "retrievedomainauthcode",
            "transferdomain",
            "transferdomaintoanotherawsaccount",
            "updatedomaincontact",
            "updatedomaincontactprivacy",
            "updatedomainnameservers",
            "updatetagsfordomain",
            "viewbilling"
        ]
    },
    "route53resolver": {
        "firewall-rule-group-association": [
            "associatefirewallrulegroup",
            "disassociatefirewallrulegroup",
            "getfirewallrulegroupassociation",
            "updatefirewallrulegroupassociation"
        ],
        "resolver-endpoint": [
            "associateresolverendpointipaddress",
            "createresolverendpoint",
            "deleteresolverendpoint",
            "disassociateresolverendpointipaddress",
            "getresolverendpoint",
            "listresolverendpointipaddresses",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateresolverendpoint"
        ],
        "resolver-query-log-config": [
            "associateresolverquerylogconfig",
            "createresolverquerylogconfig",
            "deleteresolverquerylogconfig",
            "disassociateresolverquerylogconfig",
            "getresolverquerylogconfig",
            "getresolverquerylogconfigassociation",
            "getresolverquerylogconfigpolicy",
            "listresolverquerylogconfigassociations",
            "listresolverquerylogconfigs",
            "putresolverquerylogconfigpolicy"
        ],
        "resolver-rule": [
            "associateresolverrule",
            "createresolverrule",
            "deleteresolverrule",
            "disassociateresolverrule",
            "getresolverrule",
            "getresolverruleassociation",
            "getresolverrulepolicy",
            "listtagsforresource",
            "putresolverrulepolicy",
            "tagresource",
            "untagresource",
            "updateresolverrule"
        ],
        "firewall-domain-list": [
            "createfirewalldomainlist",
            "deletefirewalldomainlist",
            "getfirewalldomainlist",
            "importfirewalldomains",
            "listfirewalldomains",
            "updatefirewalldomains"
        ],
        "firewall-rule-group": [
            "createfirewallrule",
            "createfirewallrulegroup",
            "deletefirewallrule",
            "deletefirewallrulegroup",
            "getfirewallrulegroup",
            "getfirewallrulegrouppolicy",
            "listfirewallrules",
            "putfirewallrulegrouppolicy",
            "updatefirewallrule"
        ],
        "firewall-config": [
            "getfirewallconfig",
            "listfirewallconfigs",
            "updatefirewallconfig"
        ],
        "resolver-dnssec-config": [
            "getresolverdnssecconfig",
            "listresolverdnssecconfigs",
            "updateresolverdnssecconfig"
        ],
        "": [
            "listfirewalldomainlists",
            "listfirewallrulegroupassociations",
            "listfirewallrulegroups",
            "listresolverendpoints",
            "listresolverruleassociations",
            "listresolverrules"
        ]
    },
    "s3": {
        "object": [
            "abortmultipartupload",
            "bypassgovernanceretention",
            "deleteobject",
            "deleteobjecttagging",
            "deleteobjectversion",
            "deleteobjectversiontagging",
            "getobject",
            "getobjectacl",
            "getobjectlegalhold",
            "getobjectretention",
            "getobjecttagging",
            "getobjecttorrent",
            "getobjectversion",
            "getobjectversionacl",
            "getobjectversionforreplication",
            "getobjectversiontagging",
            "getobjectversiontorrent",
            "listmultipartuploadparts",
            "objectowneroverridetobucketowner",
            "putobject",
            "putobjectacl",
            "putobjectlegalhold",
            "putobjectretention",
            "putobjecttagging",
            "putobjectversionacl",
            "putobjectversiontagging",
            "replicatedelete",
            "replicateobject",
            "replicatetags",
            "restoreobject"
        ],
        "": [
            "abortmultipartupload",
            "bypassgovernanceretention",
            "createaccesspoint",
            "createaccesspointforobjectlambda",
            "createbucket",
            "createjob",
            "deleteaccesspoint",
            "deleteaccesspointforobjectlambda",
            "deleteaccesspointpolicy",
            "deleteaccesspointpolicyforobjectlambda",
            "deletebucket",
            "deletebucketownershipcontrols",
            "deletebucketpolicy",
            "deletebucketwebsite",
            "deletejobtagging",
            "deleteobject",
            "deleteobjecttagging",
            "deleteobjectversion",
            "deleteobjectversiontagging",
            "deletestoragelensconfiguration",
            "deletestoragelensconfigurationtagging",
            "describejob",
            "getaccelerateconfiguration",
            "getaccesspoint",
            "getaccesspointconfigurationforobjectlambda",
            "getaccesspointforobjectlambda",
            "getaccesspointpolicy",
            "getaccesspointpolicyforobjectlambda",
            "getaccesspointpolicystatus",
            "getaccesspointpolicystatusforobjectlambda",
            "getaccountpublicaccessblock",
            "getanalyticsconfiguration",
            "getbucketacl",
            "getbucketcors",
            "getbucketlogging",
            "getbucketnotification",
            "getbucketobjectlockconfiguration",
            "getbucketownershipcontrols",
            "getbucketpolicy",
            "getbucketpolicystatus",
            "getbucketpublicaccessblock",
            "getbucketrequestpayment",
            "getbuckettagging",
            "getbucketversioning",
            "getbucketwebsite",
            "getencryptionconfiguration",
            "getintelligenttieringconfiguration",
            "getinventoryconfiguration",
            "getjobtagging",
            "getlifecycleconfiguration",
            "getmetricsconfiguration",
            "getobject",
            "getobjectacl",
            "getobjectlegalhold",
            "getobjectretention",
            "getobjecttagging",
            "getobjecttorrent",
            "getobjectversion",
            "getobjectversionacl",
            "getobjectversionforreplication",
            "getobjectversiontagging",
            "getobjectversiontorrent",
            "getreplicationconfiguration",
            "getstoragelensconfiguration",
            "getstoragelensconfigurationtagging",
            "getstoragelensdashboard",
            "listaccesspoints",
            "listaccesspointsforobjectlambda",
            "listallmybuckets",
            "listbucket",
            "listbucketmultipartuploads",
            "listbucketversions",
            "listjobs",
            "listmultipartuploadparts",
            "liststoragelensconfigurations",
            "objectowneroverridetobucketowner",
            "putaccelerateconfiguration",
            "putaccesspointconfigurationforobjectlambda",
            "putaccesspointpolicy",
            "putaccesspointpolicyforobjectlambda",
            "putaccountpublicaccessblock",
            "putanalyticsconfiguration",
            "putbucketacl",
            "putbucketcors",
            "putbucketlogging",
            "putbucketnotification",
            "putbucketobjectlockconfiguration",
            "putbucketownershipcontrols",
            "putbucketpolicy",
            "putbucketpublicaccessblock",
            "putbucketrequestpayment",
            "putbuckettagging",
            "putbucketversioning",
            "putbucketwebsite",
            "putencryptionconfiguration",
            "putintelligenttieringconfiguration",
            "putinventoryconfiguration",
            "putjobtagging",
            "putlifecycleconfiguration",
            "putmetricsconfiguration",
            "putobject",
            "putobjectacl",
            "putobjectlegalhold",
            "putobjectretention",
            "putobjecttagging",
            "putobjectversionacl",
            "putobjectversiontagging",
            "putreplicationconfiguration",
            "putstoragelensconfiguration",
            "putstoragelensconfigurationtagging",
            "replicatedelete",
            "replicateobject",
            "replicatetags",
            "restoreobject",
            "updatejobpriority",
            "updatejobstatus"
        ],
        "accesspoint": [
            "createaccesspoint",
            "deleteaccesspoint",
            "deleteaccesspointpolicy",
            "getaccesspointpolicy",
            "getaccesspointpolicystatus",
            "putaccesspointpolicy"
        ],
        "objectlambdaaccesspoint": [
            "createaccesspointforobjectlambda",
            "deleteaccesspointforobjectlambda",
            "deleteaccesspointpolicyforobjectlambda",
            "getaccesspointconfigurationforobjectlambda",
            "getaccesspointforobjectlambda",
            "getaccesspointpolicyforobjectlambda",
            "getaccesspointpolicystatusforobjectlambda",
            "putaccesspointconfigurationforobjectlambda",
            "putaccesspointpolicyforobjectlambda"
        ],
        "bucket": [
            "createbucket",
            "deletebucket",
            "deletebucketownershipcontrols",
            "deletebucketpolicy",
            "deletebucketwebsite",
            "getaccelerateconfiguration",
            "getanalyticsconfiguration",
            "getbucketacl",
            "getbucketcors",
            "getbucketlocation",
            "getbucketlogging",
            "getbucketnotification",
            "getbucketobjectlockconfiguration",
            "getbucketownershipcontrols",
            "getbucketpolicy",
            "getbucketpolicystatus",
            "getbucketpublicaccessblock",
            "getbucketrequestpayment",
            "getbuckettagging",
            "getbucketversioning",
            "getbucketwebsite",
            "getencryptionconfiguration",
            "getintelligenttieringconfiguration",
            "getinventoryconfiguration",
            "getlifecycleconfiguration",
            "getmetricsconfiguration",
            "getreplicationconfiguration",
            "listbucket",
            "listbucketmultipartuploads",
            "listbucketversions",
            "putaccelerateconfiguration",
            "putanalyticsconfiguration",
            "putbucketacl",
            "putbucketcors",
            "putbucketlogging",
            "putbucketnotification",
            "putbucketobjectlockconfiguration",
            "putbucketownershipcontrols",
            "putbucketpolicy",
            "putbucketpublicaccessblock",
            "putbucketrequestpayment",
            "putbuckettagging",
            "putbucketversioning",
            "putbucketwebsite",
            "putencryptionconfiguration",
            "putintelligenttieringconfiguration",
            "putinventoryconfiguration",
            "putlifecycleconfiguration",
            "putmetricsconfiguration",
            "putreplicationconfiguration"
        ],
        "job": [
            "deletejobtagging",
            "describejob",
            "getjobtagging",
            "putjobtagging",
            "updatejobpriority",
            "updatejobstatus"
        ],
        "storagelensconfiguration": [
            "deletestoragelensconfiguration",
            "deletestoragelensconfigurationtagging",
            "getstoragelensconfiguration",
            "getstoragelensconfigurationtagging",
            "getstoragelensdashboard",
            "putstoragelensconfigurationtagging"
        ]
    },
    "s3-object-lambda": {
        "objectlambdaaccesspoint": [
            "abortmultipartupload",
            "deleteobject",
            "deleteobjecttagging",
            "getobject",
            "getobjectacl",
            "getobjectlegalhold",
            "getobjectretention",
            "getobjecttagging",
            "getobjectversion",
            "listbucket",
            "listmultipartuploadparts",
            "putobject",
            "putobjectacl",
            "putobjectlegalhold",
            "putobjectretention",
            "putobjecttagging",
            "restoreobject",
            "writegetobjectresponse"
        ],
        "": [
            "abortmultipartupload",
            "deleteobject",
            "deleteobjecttagging",
            "getobject",
            "getobjectacl",
            "getobjectlegalhold",
            "getobjectretention",
            "getobjecttagging",
            "getobjectversion",
            "listbucket",
            "listmultipartuploadparts",
            "putobject",
            "putobjectacl",
            "putobjectlegalhold",
            "putobjectretention",
            "putobjecttagging",
            "restoreobject",
            "writegetobjectresponse"
        ]
    },
    "s3-outposts": {
        "object": [
            "abortmultipartupload",
            "deleteobject",
            "deleteobjecttagging",
            "getobject",
            "getobjecttagging",
            "listmultipartuploadparts",
            "putobject",
            "putobjectacl",
            "putobjecttagging"
        ],
        "": [
            "abortmultipartupload",
            "createaccesspoint",
            "createbucket",
            "deleteaccesspoint",
            "deleteaccesspointpolicy",
            "deletebucket",
            "deletebucketpolicy",
            "deleteobject",
            "deleteobjecttagging",
            "getaccesspoint",
            "getaccesspointpolicy",
            "getbucket",
            "getbucketpolicy",
            "getbuckettagging",
            "getlifecycleconfiguration",
            "getobject",
            "getobjecttagging",
            "listaccesspoints",
            "listbucket",
            "listbucketmultipartuploads",
            "listendpoints",
            "listmultipartuploadparts",
            "listregionalbuckets",
            "putaccesspointpolicy",
            "putbucketpolicy",
            "putbuckettagging",
            "putlifecycleconfiguration",
            "putobject",
            "putobjectacl",
            "putobjecttagging"
        ],
        "accesspoint": [
            "createaccesspoint",
            "deleteaccesspoint",
            "deleteaccesspointpolicy",
            "getaccesspointpolicy",
            "listbucket",
            "listbucketmultipartuploads",
            "putaccesspointpolicy"
        ],
        "bucket": [
            "createbucket",
            "deletebucket",
            "deletebucketpolicy",
            "getbucket",
            "getbucketpolicy",
            "getbuckettagging",
            "getlifecycleconfiguration",
            "listbucket",
            "listbucketmultipartuploads",
            "putbucketpolicy",
            "putbuckettagging",
            "putlifecycleconfiguration"
        ],
        "endpoint": [
            "createendpoint",
            "deleteendpoint"
        ]
    },
    "sagemaker": {
        "action": [
            "addassociation",
            "addtags",
            "createaction",
            "deleteaction",
            "deleteassociation",
            "deletetags",
            "describeaction",
            "listtags",
            "updateaction"
        ],
        "artifact": [
            "addassociation",
            "addtags",
            "createartifact",
            "deleteartifact",
            "deleteassociation",
            "deletetags",
            "describeartifact",
            "listtags",
            "updateartifact"
        ],
        "context": [
            "addassociation",
            "addtags",
            "createcontext",
            "deleteassociation",
            "deletecontext",
            "deletetags",
            "describecontext",
            "listtags",
            "updatecontext"
        ],
        "experiment": [
            "addassociation",
            "addtags",
            "createexperiment",
            "deleteassociation",
            "deleteexperiment",
            "deletetags",
            "describeexperiment",
            "listtags",
            "updateexperiment"
        ],
        "experiment-trial-component": [
            "addassociation",
            "addtags",
            "associatetrialcomponent",
            "createtrialcomponent",
            "deleteassociation",
            "deletetags",
            "deletetrialcomponent",
            "describetrialcomponent",
            "disassociatetrialcomponent",
            "listtags",
            "updatetrialcomponent"
        ],
        "algorithm": [
            "addtags",
            "createalgorithm",
            "deletealgorithm",
            "deletetags",
            "describealgorithm",
            "listtags"
        ],
        "app": [
            "addtags",
            "createapp",
            "deleteapp",
            "deletetags",
            "describeapp",
            "listtags"
        ],
        "app-image-config": [
            "addtags",
            "createappimageconfig",
            "deleteappimageconfig",
            "deletetags",
            "describeappimageconfig",
            "listtags",
            "updateappimageconfig"
        ],
        "automl-job": [
            "addtags",
            "createautomljob",
            "deletetags",
            "describeautomljob",
            "listtags",
            "stopautomljob"
        ],
        "code-repository": [
            "addtags",
            "createcoderepository",
            "deletecoderepository",
            "deletetags",
            "describecoderepository",
            "listtags",
            "updatecoderepository"
        ],
        "data-quality-job-definition": [
            "addtags",
            "createdataqualityjobdefinition",
            "deletedataqualityjobdefinition",
            "deletetags",
            "describedataqualityjobdefinition",
            "listtags"
        ],
        "device": [
            "addtags",
            "deletetags",
            "deregisterdevices",
            "describedevice",
            "getdeviceregistration",
            "listtags",
            "registerdevices",
            "sendheartbeat",
            "updatedevices"
        ],
        "device-fleet": [
            "addtags",
            "createdevicefleet",
            "deletedevicefleet",
            "deletetags",
            "describedevicefleet",
            "getdevicefleetreport",
            "listtags",
            "updatedevicefleet"
        ],
        "domain": [
            "addtags",
            "createdomain",
            "deletedomain",
            "deletetags",
            "describedomain",
            "listtags",
            "updatedomain"
        ],
        "edge-packaging-job": [
            "addtags",
            "createedgepackagingjob",
            "deletetags",
            "describeedgepackagingjob",
            "listtags",
            "stopedgepackagingjob"
        ],
        "endpoint": [
            "addtags",
            "createendpoint",
            "deleteendpoint",
            "deletetags",
            "describeendpoint",
            "invokeendpoint",
            "listtags",
            "updateendpoint",
            "updateendpointweightsandcapacities"
        ],
        "endpoint-config": [
            "addtags",
            "createendpointconfig",
            "deleteendpointconfig",
            "deletetags",
            "describeendpointconfig",
            "listtags"
        ],
        "experiment-trial": [
            "addtags",
            "associatetrialcomponent",
            "createtrial",
            "deletetags",
            "deletetrial",
            "describetrial",
            "disassociatetrialcomponent",
            "listtags",
            "updatetrial"
        ],
        "feature-group": [
            "addtags",
            "createfeaturegroup",
            "deletefeaturegroup",
            "deleterecord",
            "deletetags",
            "describefeaturegroup",
            "getrecord",
            "listtags",
            "putrecord"
        ],
        "flow-definition": [
            "addtags",
            "createflowdefinition",
            "deleteflowdefinition",
            "deletetags",
            "describeflowdefinition",
            "listtags",
            "starthumanloop"
        ],
        "human-task-ui": [
            "addtags",
            "createhumantaskui",
            "deletehumantaskui",
            "deletetags",
            "describehumantaskui",
            "listtags"
        ],
        "hyper-parameter-tuning-job": [
            "addtags",
            "createhyperparametertuningjob",
            "deletetags",
            "describehyperparametertuningjob",
            "listtags",
            "listtrainingjobsforhyperparametertuningjob",
            "stophyperparametertuningjob"
        ],
        "image": [
            "addtags",
            "createimage",
            "createimageversion",
            "deleteimage",
            "deletetags",
            "describeimage",
            "listimageversions",
            "listtags",
            "updateimage"
        ],
        "labeling-job": [
            "addtags",
            "createlabelingjob",
            "deletetags",
            "describelabelingjob",
            "listtags",
            "stoplabelingjob"
        ],
        "model": [
            "addtags",
            "createmodel",
            "deletemodel",
            "deletetags",
            "describemodel",
            "listtags"
        ],
        "model-bias-job-definition": [
            "addtags",
            "createmodelbiasjobdefinition",
            "deletemodelbiasjobdefinition",
            "deletetags",
            "describemodelbiasjobdefinition",
            "listtags"
        ],
        "model-explainability-job-definition": [
            "addtags",
            "createmodelexplainabilityjobdefinition",
            "deletemodelexplainabilityjobdefinition",
            "deletetags",
            "describemodelexplainabilityjobdefinition",
            "listtags"
        ],
        "model-package": [
            "addtags",
            "createmodelpackage",
            "deletemodelpackage",
            "deletetags",
            "describemodelpackage",
            "listtags",
            "updatemodelpackage"
        ],
        "model-package-group": [
            "addtags",
            "createmodelpackage",
            "createmodelpackagegroup",
            "deletemodelpackagegroup",
            "deletemodelpackagegrouppolicy",
            "deletetags",
            "describemodelpackagegroup",
            "getmodelpackagegrouppolicy",
            "listtags",
            "putmodelpackagegrouppolicy"
        ],
        "model-quality-job-definition": [
            "addtags",
            "createmodelqualityjobdefinition",
            "deletemodelqualityjobdefinition",
            "deletetags",
            "describemodelqualityjobdefinition",
            "listtags"
        ],
        "monitoring-schedule": [
            "addtags",
            "createmonitoringschedule",
            "deletemonitoringschedule",
            "deletetags",
            "describemonitoringschedule",
            "listtags",
            "startmonitoringschedule",
            "stopmonitoringschedule",
            "updatemonitoringschedule"
        ],
        "notebook-instance": [
            "addtags",
            "createnotebookinstance",
            "createpresignednotebookinstanceurl",
            "deletenotebookinstance",
            "deletetags",
            "describenotebookinstance",
            "listtags",
            "startnotebookinstance",
            "stopnotebookinstance",
            "updatenotebookinstance"
        ],
        "pipeline": [
            "addtags",
            "createpipeline",
            "deletepipeline",
            "deletetags",
            "describepipeline",
            "listpipelineexecutions",
            "listtags",
            "startpipelineexecution",
            "updatepipeline"
        ],
        "processing-job": [
            "addtags",
            "createprocessingjob",
            "deletetags",
            "describeprocessingjob",
            "disassociatetrialcomponent",
            "stopprocessingjob"
        ],
        "project": [
            "addtags",
            "createproject",
            "deleteproject",
            "deletetags",
            "describeproject",
            "listtags"
        ],
        "training-job": [
            "addtags",
            "batchgetmetrics",
            "batchputmetrics",
            "createtrainingjob",
            "deletetags",
            "describetrainingjob",
            "listtags",
            "stoptrainingjob",
            "updatetrainingjob"
        ],
        "transform-job": [
            "addtags",
            "createtransformjob",
            "deletetags",
            "describetransformjob",
            "listtags",
            "stoptransformjob"
        ],
        "user-profile": [
            "addtags",
            "createpresigneddomainurl",
            "createuserprofile",
            "deletetags",
            "deleteuserprofile",
            "describeuserprofile",
            "listtags",
            "updateuserprofile"
        ],
        "workteam": [
            "addtags",
            "createworkteam",
            "deletetags",
            "deleteworkteam",
            "describesubscribedworkteam",
            "describeworkteam",
            "listlabelingjobsforworkteam",
            "listtags",
            "updateworkteam"
        ],
        "": [
            "addtags",
            "createaction",
            "createalgorithm",
            "createapp",
            "createappimageconfig",
            "createartifact",
            "createautomljob",
            "createcoderepository",
            "createcontext",
            "createdataqualityjobdefinition",
            "createdevicefleet",
            "createdomain",
            "createedgepackagingjob",
            "createendpoint",
            "createendpointconfig",
            "createexperiment",
            "createfeaturegroup",
            "createflowdefinition",
            "createhumantaskui",
            "createhyperparametertuningjob",
            "createimage",
            "createlabelingjob",
            "createmodel",
            "createmodelbiasjobdefinition",
            "createmodelexplainabilityjobdefinition",
            "createmodelpackage",
            "createmodelpackagegroup",
            "createmodelqualityjobdefinition",
            "createmonitoringschedule",
            "createnotebookinstance",
            "createpipeline",
            "createpresigneddomainurl",
            "createprocessingjob",
            "createproject",
            "createtrainingjob",
            "createtransformjob",
            "createtrial",
            "createtrialcomponent",
            "createuserprofile",
            "createworkforce",
            "createworkteam",
            "deletefeaturegroup",
            "deletetags",
            "disablesagemakerservicecatalogportfolio",
            "enablesagemakerservicecatalogportfolio",
            "getsagemakerservicecatalogportfoliostatus",
            "getsearchsuggestions",
            "invokeendpoint",
            "listactions",
            "listalgorithms",
            "listappimageconfigs",
            "listapps",
            "listartifacts",
            "listassociations",
            "listautomljobs",
            "listcandidatesforautomljob",
            "listcoderepositories",
            "listcompilationjobs",
            "listcontexts",
            "listdataqualityjobdefinitions",
            "listdevicefleets",
            "listdevices",
            "listdomains",
            "listedgepackagingjobs",
            "listendpointconfigs",
            "listendpoints",
            "listexperiments",
            "listfeaturegroups",
            "listflowdefinitions",
            "listhumanloops",
            "listhumantaskuis",
            "listhyperparametertuningjobs",
            "listimages",
            "listlabelingjobs",
            "listmodelbiasjobdefinitions",
            "listmodelexplainabilityjobdefinitions",
            "listmodelpackagegroups",
            "listmodelpackages",
            "listmodelqualityjobdefinitions",
            "listmodels",
            "listmonitoringexecutions",
            "listmonitoringschedules",
            "listnotebookinstancelifecycleconfigs",
            "listnotebookinstances",
            "listpipelines",
            "listprocessingjobs",
            "listprojects",
            "listsubscribedworkteams",
            "listtrainingjobs",
            "listtransformjobs",
            "listtrialcomponents",
            "listtrials",
            "listuserprofiles",
            "listworkforces",
            "listworkteams",
            "registerdevices",
            "renderuitemplate",
            "search",
            "updatedomain",
            "updatemonitoringschedule",
            "updatenotebookinstance",
            "updatetrainingjob",
            "updateuserprofile"
        ],
        "compilation-job": [
            "createcompilationjob",
            "deletetags",
            "describecompilationjob",
            "stopcompilationjob"
        ],
        "notebook-instance-lifecycle-config": [
            "createnotebookinstancelifecycleconfig",
            "deletenotebookinstancelifecycleconfig",
            "describenotebookinstancelifecycleconfig",
            "updatenotebookinstancelifecycleconfig"
        ],
        "workforce": [
            "createworkforce",
            "deleteworkforce",
            "describeworkforce",
            "updateworkforce"
        ],
        "human-loop": [
            "deletehumanloop",
            "describehumanloop",
            "stophumanloop"
        ],
        "image-version": [
            "deleteimageversion",
            "describeimageversion"
        ],
        "pipeline-execution": [
            "describepipelinedefinitionforexecution",
            "describepipelineexecution",
            "listpipelineexecutionsteps",
            "listpipelineparametersforexecution",
            "stoppipelineexecution",
            "updatepipelineexecution"
        ]
    },
    "savingsplans": {
        "": [
            "createsavingsplan",
            "deletequeuedsavingsplan",
            "describesavingsplanrates",
            "describesavingsplans",
            "describesavingsplansofferingrates",
            "describesavingsplansofferings",
            "tagresource",
            "untagresource"
        ],
        "savingsplan": [
            "deletequeuedsavingsplan",
            "describesavingsplanrates",
            "describesavingsplans",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ]
    },
    "secretsmanager": {
        "Secret": [
            "cancelrotatesecret",
            "createsecret",
            "deleteresourcepolicy",
            "deletesecret",
            "describesecret",
            "getresourcepolicy",
            "getsecretvalue",
            "listsecretversionids",
            "putresourcepolicy",
            "putsecretvalue",
            "restoresecret",
            "rotatesecret",
            "tagresource",
            "untagresource",
            "updatesecret",
            "updatesecretversionstage",
            "validateresourcepolicy"
        ],
        "": [
            "cancelrotatesecret",
            "createsecret",
            "deleteresourcepolicy",
            "deletesecret",
            "describesecret",
            "getrandompassword",
            "getresourcepolicy",
            "getsecretvalue",
            "listsecretversionids",
            "listsecrets",
            "putresourcepolicy",
            "putsecretvalue",
            "restoresecret",
            "rotatesecret",
            "tagresource",
            "untagresource",
            "updatesecret",
            "updatesecretversionstage",
            "validateresourcepolicy"
        ]
    },
    "securityhub": {
        "hub": [
            "acceptadministratorinvitation",
            "acceptinvitation",
            "batchdisablestandards",
            "batchenablestandards",
            "batchupdatefindings",
            "createactiontarget",
            "createinsight",
            "createmembers",
            "declineinvitations",
            "deleteactiontarget",
            "deleteinsight",
            "deleteinvitations",
            "deletemembers",
            "describeactiontargets",
            "describehub",
            "describeorganizationconfiguration",
            "describeproducts",
            "describestandards",
            "describestandardscontrols",
            "disableimportfindingsforproduct",
            "disableorganizationadminaccount",
            "disablesecurityhub",
            "disassociatefromadministratoraccount",
            "disassociatefrommasteraccount",
            "disassociatemembers",
            "enableimportfindingsforproduct",
            "enableorganizationadminaccount",
            "enablesecurityhub",
            "getadhocinsightresults",
            "getadministratoraccount",
            "getenabledstandards",
            "getfindings",
            "getfreetrialenddate",
            "getfreetrialusage",
            "getinsightfindingtrend",
            "getinsightresults",
            "getinsights",
            "getinvitationscount",
            "getmasteraccount",
            "getmembers",
            "getusage",
            "invitemembers",
            "listenabledproductsforimport",
            "listinvitations",
            "listmembers",
            "listorganizationadminaccounts",
            "listtagsforresource",
            "sendfindingevents",
            "sendinsightevents",
            "tagresource",
            "untagresource",
            "updateactiontarget",
            "updatefindings",
            "updateinsight",
            "updateorganizationconfiguration",
            "updatesecurityhubconfiguration",
            "updatestandardscontrol"
        ],
        "product": [
            "batchimportfindings"
        ],
        "": [
            "batchimportfindings",
            "batchupdatefindings",
            "enablesecurityhub"
        ]
    },
    "sts": {
        "role": [
            "assumerole",
            "assumerolewithsaml",
            "assumerolewithwebidentity",
            "setsourceidentity",
            "tagsession"
        ],
        "": [
            "assumerole",
            "assumerolewithsaml",
            "assumerolewithwebidentity",
            "decodeauthorizationmessage",
            "getaccesskeyinfo",
            "getcalleridentity",
            "getfederationtoken",
            "getservicebearertoken",
            "getsessiontoken",
            "setsourceidentity",
            "tagsession"
        ],
        "user": [
            "getfederationtoken",
            "setsourceidentity",
            "tagsession"
        ]
    },
    "sms": {
        "": [
            "createapp",
            "createreplicationjob",
            "deleteapp",
            "deleteapplaunchconfiguration",
            "deleteappreplicationconfiguration",
            "deleteappvalidationconfiguration",
            "deletereplicationjob",
            "deleteservercatalog",
            "disassociateconnector",
            "generatechangeset",
            "generatetemplate",
            "getapp",
            "getapplaunchconfiguration",
            "getappreplicationconfiguration",
            "getappvalidationconfiguration",
            "getappvalidationoutput",
            "getconnectors",
            "getmessages",
            "getreplicationjobs",
            "getreplicationruns",
            "getservers",
            "importappcatalog",
            "importservercatalog",
            "launchapp",
            "listapps",
            "notifyappvalidationoutput",
            "putapplaunchconfiguration",
            "putappreplicationconfiguration",
            "putappvalidationconfiguration",
            "sendmessage",
            "startappreplication",
            "startondemandappreplication",
            "startondemandreplicationrun",
            "stopappreplication",
            "terminateapp",
            "updateapp",
            "updatereplicationjob"
        ]
    },
    "serverlessrepo": {
        "": [
            "createapplication",
            "createcloudformationchangeset",
            "createcloudformationtemplate",
            "getapplication",
            "listapplicationdependencies",
            "listapplicationversions",
            "listapplications",
            "searchapplications"
        ],
        "applications": [
            "createapplicationversion",
            "createcloudformationchangeset",
            "createcloudformationtemplate",
            "deleteapplication",
            "getapplication",
            "getapplicationpolicy",
            "getcloudformationtemplate",
            "listapplicationdependencies",
            "listapplicationversions",
            "putapplicationpolicy",
            "unshareapplication",
            "updateapplication"
        ]
    },
    "servicecatalog": {
        "Portfolio": [
            "acceptportfolioshare",
            "associateprincipalwithportfolio",
            "associatetagoptionwithresource",
            "createportfolio",
            "createportfolioshare",
            "deleteportfolio",
            "deleteportfolioshare",
            "describeportfolio",
            "describeportfolioshares",
            "disassociateprincipalfromportfolio",
            "disassociatetagoptionfromresource",
            "listportfolioaccess",
            "listprincipalsforportfolio",
            "rejectportfolioshare",
            "updateportfolio",
            "updateportfolioshare"
        ],
        "Application": [
            "associateattributegroup",
            "associateresource",
            "createapplication",
            "deleteapplication",
            "disassociateattributegroup",
            "disassociateresource",
            "getapplication",
            "listassociatedattributegroups",
            "listassociatedresources",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateapplication"
        ],
        "AttributeGroup": [
            "associateattributegroup",
            "createattributegroup",
            "deleteattributegroup",
            "disassociateattributegroup",
            "getattributegroup",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateattributegroup"
        ],
        "": [
            "associatebudgetwithresource",
            "associateproductwithportfolio",
            "batchassociateserviceactionwithprovisioningartifact",
            "batchdisassociateserviceactionfromprovisioningartifact",
            "copyproduct",
            "createapplication",
            "createattributegroup",
            "createportfolio",
            "createproduct",
            "createprovisionedproductplan",
            "createserviceaction",
            "createtagoption",
            "deleteconstraint",
            "deleteprovisionedproductplan",
            "deleteserviceaction",
            "deletetagoption",
            "describeconstraint",
            "describecopyproductstatus",
            "describeportfoliosharestatus",
            "describeproductview",
            "describeprovisionedproduct",
            "describeprovisionedproductplan",
            "describerecord",
            "describeserviceaction",
            "describeserviceactionexecutionparameters",
            "describetagoption",
            "disableawsorganizationsaccess",
            "disassociatebudgetfromresource",
            "disassociateproductfromportfolio",
            "enableawsorganizationsaccess",
            "executeprovisionedproductplan",
            "executeprovisionedproductserviceaction",
            "getawsorganizationsaccessstatus",
            "getprovisionedproductoutputs",
            "listacceptedportfolioshares",
            "listapplications",
            "listattributegroups",
            "listbudgetsforresource",
            "listconstraintsforportfolio",
            "listorganizationportfolioaccess",
            "listportfolios",
            "listprovisionedproductplans",
            "listprovisioningartifactsforserviceaction",
            "listrecordhistory",
            "listresourcesfortagoption",
            "listserviceactions",
            "liststackinstancesforprovisionedproduct",
            "listtagoptions",
            "scanprovisionedproducts",
            "searchproducts",
            "searchproductsasadmin",
            "searchprovisionedproducts",
            "syncresource",
            "tagresource",
            "terminateprovisionedproduct",
            "untagresource",
            "updateconstraint",
            "updateportfolio",
            "updateproduct",
            "updateprovisionedproduct",
            "updateprovisionedproductproperties",
            "updateserviceaction",
            "updatetagoption"
        ],
        "Product": [
            "associateserviceactionwithprovisioningartifact",
            "associatetagoptionwithresource",
            "createconstraint",
            "createproduct",
            "createprovisioningartifact",
            "deleteproduct",
            "deleteprovisioningartifact",
            "describeproduct",
            "describeproductasadmin",
            "describeprovisioningartifact",
            "describeprovisioningparameters",
            "disassociateserviceactionfromprovisioningartifact",
            "disassociatetagoptionfromresource",
            "importasprovisionedproduct",
            "listlaunchpaths",
            "listportfoliosforproduct",
            "listprovisioningartifacts",
            "listserviceactionsforprovisioningartifact",
            "provisionproduct",
            "updateproduct",
            "updateprovisioningartifact"
        ]
    },
    "servicequotas": {
        "": [
            "associateservicequotatemplate",
            "deleteservicequotaincreaserequestfromtemplate",
            "disassociateservicequotatemplate",
            "getawsdefaultservicequota",
            "getassociationforservicequotatemplate",
            "getrequestedservicequotachange",
            "getservicequota",
            "getservicequotaincreaserequestfromtemplate",
            "listawsdefaultservicequotas",
            "listrequestedservicequotachangehistory",
            "listrequestedservicequotachangehistorybyquota",
            "listservicequotaincreaserequestsintemplate",
            "listservicequotas",
            "listservices",
            "listtagsforresource",
            "putservicequotaincreaserequestintotemplate",
            "requestservicequotaincrease",
            "tagresource",
            "untagresource"
        ],
        "quota": [
            "putservicequotaincreaserequestintotemplate",
            "requestservicequotaincrease"
        ]
    },
    "ssmmessages": {
        "": [
            "createcontrolchannel",
            "createdatachannel",
            "opencontrolchannel",
            "opendatachannel"
        ]
    },
    "shield": {
        "": [
            "associatedrtlogbucket",
            "associatedrtrole",
            "associatehealthcheck",
            "associateproactiveengagementdetails",
            "createprotection",
            "createprotectiongroup",
            "createsubscription",
            "deleteprotection",
            "deleteprotectiongroup",
            "deletesubscription",
            "describeattackstatistics",
            "describedrtaccess",
            "describeemergencycontactsettings",
            "describeprotection",
            "describeprotectiongroup",
            "describesubscription",
            "disableproactiveengagement",
            "disassociatedrtlogbucket",
            "disassociatedrtrole",
            "disassociatehealthcheck",
            "enableproactiveengagement",
            "getsubscriptionstate",
            "listattacks",
            "listprotectiongroups",
            "listprotections",
            "tagresource",
            "untagresource",
            "updateemergencycontactsettings",
            "updateprotectiongroup",
            "updatesubscription"
        ],
        "protection": [
            "associatehealthcheck",
            "deleteprotection",
            "describeprotection",
            "disassociatehealthcheck",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "protection-group": [
            "deleteprotectiongroup",
            "describeprotectiongroup",
            "listresourcesinprotectiongroup",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateprotectiongroup"
        ],
        "attack": [
            "describeattack"
        ]
    },
    "signer": {
        "signing-profile": [
            "addprofilepermission",
            "cancelsigningprofile",
            "getsigningprofile",
            "listprofilepermissions",
            "listtagsforresource",
            "removeprofilepermission",
            "revokesigningprofile",
            "startsigningjob",
            "tagresource",
            "untagresource"
        ],
        "": [
            "addprofilepermission",
            "cancelsigningprofile",
            "getsigningplatform",
            "getsigningprofile",
            "listsigningjobs",
            "listsigningplatforms",
            "listsigningprofiles",
            "putsigningprofile",
            "removeprofilepermission",
            "revokesignature",
            "revokesigningprofile",
            "startsigningjob",
            "tagresource",
            "untagresource"
        ],
        "signing-job": [
            "describesigningjob",
            "revokesignature"
        ]
    },
    "swf": {
        "domain": [
            "canceltimer",
            "cancelworkflowexecution",
            "completeworkflowexecution",
            "continueasnewworkflowexecution",
            "countclosedworkflowexecutions",
            "countopenworkflowexecutions",
            "countpendingactivitytasks",
            "countpendingdecisiontasks",
            "deprecateactivitytype",
            "deprecatedomain",
            "deprecateworkflowtype",
            "describeactivitytype",
            "describedomain",
            "describeworkflowexecution",
            "describeworkflowtype",
            "failworkflowexecution",
            "getworkflowexecutionhistory",
            "listactivitytypes",
            "listclosedworkflowexecutions",
            "listopenworkflowexecutions",
            "listtagsforresource",
            "listworkflowtypes",
            "pollforactivitytask",
            "pollfordecisiontask",
            "recordactivitytaskheartbeat",
            "recordmarker",
            "registeractivitytype",
            "registerworkflowtype",
            "requestcancelactivitytask",
            "requestcancelexternalworkflowexecution",
            "requestcancelworkflowexecution",
            "respondactivitytaskcanceled",
            "respondactivitytaskcompleted",
            "respondactivitytaskfailed",
            "responddecisiontaskcompleted",
            "scheduleactivitytask",
            "signalexternalworkflowexecution",
            "signalworkflowexecution",
            "startchildworkflowexecution",
            "starttimer",
            "startworkflowexecution",
            "tagresource",
            "terminateworkflowexecution",
            "undeprecateactivitytype",
            "undeprecatedomain",
            "undeprecateworkflowtype",
            "untagresource"
        ],
        "": [
            "countclosedworkflowexecutions",
            "countopenworkflowexecutions",
            "countpendingactivitytasks",
            "countpendingdecisiontasks",
            "deprecateactivitytype",
            "deprecateworkflowtype",
            "describeactivitytype",
            "describeworkflowtype",
            "listclosedworkflowexecutions",
            "listdomains",
            "listopenworkflowexecutions",
            "pollforactivitytask",
            "pollfordecisiontask",
            "registeractivitytype",
            "registerdomain",
            "registerworkflowtype",
            "respondactivitytaskcompleted",
            "startworkflowexecution",
            "tagresource",
            "undeprecateactivitytype",
            "undeprecateworkflowtype",
            "untagresource"
        ]
    },
    "sdb": {
        "domain": [
            "batchdeleteattributes",
            "batchputattributes",
            "createdomain",
            "deleteattributes",
            "deletedomain",
            "domainmetadata",
            "getattributes",
            "putattributes",
            "select"
        ],
        "": [
            "listdomains"
        ]
    },
    "snowball": {
        "": [
            "cancelcluster",
            "canceljob",
            "createaddress",
            "createcluster",
            "createjob",
            "createreturnshippinglabel",
            "describeaddress",
            "describeaddresses",
            "describecluster",
            "describejob",
            "describereturnshippinglabel",
            "getjobmanifest",
            "getjobunlockcode",
            "getsnowballusage",
            "getsoftwareupdates",
            "listclusterjobs",
            "listclusters",
            "listcompatibleimages",
            "listjobs",
            "updatecluster",
            "updatejob",
            "updatejobshipmentstate"
        ]
    },
    "sns": {
        "topic": [
            "addpermission",
            "confirmsubscription",
            "createtopic",
            "deletetopic",
            "gettopicattributes",
            "listsubscriptionsbytopic",
            "listtagsforresource",
            "publish",
            "removepermission",
            "settopicattributes",
            "subscribe",
            "tagresource",
            "untagresource"
        ],
        "": [
            "checkifphonenumberisoptedout",
            "createplatformapplication",
            "createplatformendpoint",
            "deleteendpoint",
            "deleteplatformapplication",
            "getendpointattributes",
            "getplatformapplicationattributes",
            "getsmsattributes",
            "getsubscriptionattributes",
            "listendpointsbyplatformapplication",
            "listphonenumbersoptedout",
            "listplatformapplications",
            "listsubscriptions",
            "listtopics",
            "optinphonenumber",
            "setendpointattributes",
            "setplatformapplicationattributes",
            "setsmsattributes",
            "setsubscriptionattributes",
            "subscribe",
            "tagresource",
            "unsubscribe",
            "untagresource"
        ]
    },
    "sqs": {
        "queue": [
            "addpermission",
            "changemessagevisibility",
            "changemessagevisibilitybatch",
            "createqueue",
            "deletemessage",
            "deletemessagebatch",
            "deletequeue",
            "getqueueattributes",
            "getqueueurl",
            "listdeadlettersourcequeues",
            "listqueuetags",
            "purgequeue",
            "receivemessage",
            "removepermission",
            "sendmessage",
            "sendmessagebatch",
            "setqueueattributes",
            "tagqueue",
            "untagqueue"
        ],
        "": [
            "listqueues"
        ]
    },
    "sso": {
        "": [
            "associatedirectory",
            "associateprofile",
            "createapplicationinstance",
            "createapplicationinstancecertificate",
            "createmanagedapplicationinstance",
            "createpermissionset",
            "createprofile",
            "createtrust",
            "deleteapplicationinstance",
            "deleteapplicationinstancecertificate",
            "deletemanagedapplicationinstance",
            "deletepermissionspolicy",
            "deleteprofile",
            "describepermissionspolicies",
            "describeregisteredregions",
            "disassociatedirectory",
            "disassociateprofile",
            "getapplicationinstance",
            "getapplicationtemplate",
            "getmanagedapplicationinstance",
            "getmfadevicemanagementfordirectory",
            "getpermissionset",
            "getpermissionspolicy",
            "getprofile",
            "getssostatus",
            "getsharedssoconfiguration",
            "getssoconfiguration",
            "gettrust",
            "importapplicationinstanceserviceprovidermetadata",
            "listapplicationinstancecertificates",
            "listapplicationinstances",
            "listapplicationtemplates",
            "listapplications",
            "listdirectoryassociations",
            "listinstances",
            "listprofileassociations",
            "listprofiles",
            "putmfadevicemanagementfordirectory",
            "putpermissionspolicy",
            "searchgroups",
            "searchusers",
            "startsso",
            "tagresource",
            "untagresource",
            "updateapplicationinstanceactivecertificate",
            "updateapplicationinstancedisplaydata",
            "updateapplicationinstanceresponseconfiguration",
            "updateapplicationinstanceresponseschemaconfiguration",
            "updateapplicationinstancesecurityconfiguration",
            "updateapplicationinstanceserviceproviderconfiguration",
            "updateapplicationinstancestatus",
            "updatedirectoryassociation",
            "updatemanagedapplicationinstancestatus",
            "updateprofile",
            "updatessoconfiguration",
            "updatetrust"
        ],
        "Instance": [
            "attachmanagedpolicytopermissionset",
            "createaccountassignment",
            "createinstanceaccesscontrolattributeconfiguration",
            "createpermissionset",
            "deleteaccountassignment",
            "deleteinlinepolicyfrompermissionset",
            "deleteinstanceaccesscontrolattributeconfiguration",
            "deletepermissionset",
            "describeaccountassignmentcreationstatus",
            "describeaccountassignmentdeletionstatus",
            "describeinstanceaccesscontrolattributeconfiguration",
            "describepermissionset",
            "describepermissionsetprovisioningstatus",
            "detachmanagedpolicyfrompermissionset",
            "getinlinepolicyforpermissionset",
            "listaccountassignmentcreationstatus",
            "listaccountassignmentdeletionstatus",
            "listaccountassignments",
            "listaccountsforprovisionedpermissionset",
            "listmanagedpoliciesinpermissionset",
            "listpermissionsetprovisioningstatus",
            "listpermissionsets",
            "listpermissionsetsprovisionedtoaccount",
            "listtagsforresource",
            "provisionpermissionset",
            "putinlinepolicytopermissionset",
            "tagresource",
            "untagresource",
            "updateinstanceaccesscontrolattributeconfiguration",
            "updatepermissionset"
        ],
        "PermissionSet": [
            "attachmanagedpolicytopermissionset",
            "createaccountassignment",
            "deleteaccountassignment",
            "deleteinlinepolicyfrompermissionset",
            "deletepermissionset",
            "describepermissionset",
            "detachmanagedpolicyfrompermissionset",
            "getinlinepolicyforpermissionset",
            "listaccountassignments",
            "listaccountsforprovisionedpermissionset",
            "listmanagedpoliciesinpermissionset",
            "listtagsforresource",
            "provisionpermissionset",
            "putinlinepolicytopermissionset",
            "tagresource",
            "untagresource",
            "updatepermissionset"
        ],
        "Account": [
            "createaccountassignment",
            "deleteaccountassignment",
            "listaccountassignments",
            "listpermissionsetsprovisionedtoaccount",
            "provisionpermissionset"
        ]
    },
    "sso-directory": {
        "": [
            "addmembertogroup",
            "completevirtualmfadeviceregistration",
            "completewebauthndeviceregistration",
            "createalias",
            "createbearertoken",
            "createexternalidpconfigurationfordirectory",
            "creategroup",
            "createprovisioningtenant",
            "createuser",
            "deletebearertoken",
            "deleteexternalidpcertificate",
            "deleteexternalidpconfigurationfordirectory",
            "deletegroup",
            "deletemfadeviceforuser",
            "deleteprovisioningtenant",
            "deleteuser",
            "describedirectory",
            "describegroup",
            "describegroups",
            "describeprovisioningtenant",
            "describeuser",
            "describeuserbyuniqueattribute",
            "describeusers",
            "disableexternalidpconfigurationfordirectory",
            "disableuser",
            "enableexternalidpconfigurationfordirectory",
            "enableuser",
            "getawsspconfigurationfordirectory",
            "getuserpoolinfo",
            "importexternalidpcertificate",
            "ismemberingroup",
            "listbearertokens",
            "listexternalidpcertificates",
            "listexternalidpconfigurationsfordirectory",
            "listgroupsformember",
            "listgroupsforuser",
            "listmembersingroup",
            "listmfadevicesforuser",
            "listprovisioningtenants",
            "removememberfromgroup",
            "searchgroups",
            "searchusers",
            "startvirtualmfadeviceregistration",
            "startwebauthndeviceregistration",
            "updateexternalidpconfigurationfordirectory",
            "updategroup",
            "updategroupdisplayname",
            "updatemfadeviceforuser",
            "updatepassword",
            "updateuser",
            "updateusername",
            "verifyemail"
        ]
    },
    "states": {
        "activity": [
            "createactivity",
            "deleteactivity",
            "describeactivity",
            "getactivitytask",
            "listtagsforresource",
            "tagresource",
            "untagresource"
        ],
        "": [
            "createactivity",
            "createstatemachine",
            "listactivities",
            "liststatemachines",
            "sendtaskfailure",
            "sendtaskheartbeat",
            "sendtasksuccess",
            "tagresource",
            "untagresource",
            "updatestatemachine"
        ],
        "statemachine": [
            "createstatemachine",
            "deletestatemachine",
            "describestatemachine",
            "listexecutions",
            "listtagsforresource",
            "startexecution",
            "startsyncexecution",
            "tagresource",
            "untagresource",
            "updatestatemachine"
        ],
        "execution": [
            "describeexecution",
            "describestatemachineforexecution",
            "getexecutionhistory",
            "stopexecution"
        ]
    },
    "storagegateway": {
        "": [
            "activategateway",
            "addtagstoresource",
            "associatefilesystem",
            "createcachediscsivolume",
            "createnfsfileshare",
            "createsmbfileshare",
            "createstorediscsivolume",
            "createtapepool",
            "createtapewithbarcode",
            "createtapes",
            "deletetapearchive",
            "describetapearchives",
            "listgateways",
            "removetagsfromresource"
        ],
        "gateway": [
            "addcache",
            "addtagstoresource",
            "adduploadbuffer",
            "addworkingstorage",
            "associatefilesystem",
            "attachvolume",
            "cancelarchival",
            "cancelretrieval",
            "createcachediscsivolume",
            "createnfsfileshare",
            "createsmbfileshare",
            "createstorediscsivolume",
            "createtapewithbarcode",
            "createtapes",
            "deleteautomatictapecreationpolicy",
            "deletebandwidthratelimit",
            "deletegateway",
            "deletetape",
            "describeavailabilitymonitortest",
            "describebandwidthratelimit",
            "describebandwidthratelimitschedule",
            "describecache",
            "describegatewayinformation",
            "describemaintenancestarttime",
            "describesmbsettings",
            "describetaperecoverypoints",
            "describetapes",
            "describeuploadbuffer",
            "describevtldevices",
            "describeworkingstorage",
            "disablegateway",
            "joindomain",
            "listautomatictapecreationpolicies",
            "listfileshares",
            "listfilesystemassociations",
            "listlocaldisks",
            "listtagsforresource",
            "listvolumerecoverypoints",
            "listvolumes",
            "removetagsfromresource",
            "resetcache",
            "retrievetapearchive",
            "retrievetaperecoverypoint",
            "setlocalconsolepassword",
            "setsmbguestpassword",
            "shutdowngateway",
            "startavailabilitymonitortest",
            "startgateway",
            "updateautomatictapecreationpolicy",
            "updatebandwidthratelimit",
            "updatebandwidthratelimitschedule",
            "updategatewayinformation",
            "updategatewaysoftwarenow",
            "updatemaintenancestarttime",
            "updatesmbfilesharevisibility",
            "updatesmbsecuritystrategy"
        ],
        "share": [
            "addtagstoresource",
            "deletefileshare",
            "describenfsfileshares",
            "describesmbfileshares",
            "listtagsforresource",
            "notifywhenuploaded",
            "refreshcache",
            "removetagsfromresource",
            "updatenfsfileshare",
            "updatesmbfileshare"
        ],
        "tape": [
            "addtagstoresource",
            "assigntapepool",
            "cancelarchival",
            "cancelretrieval",
            "deletetape",
            "listtagsforresource",
            "listtapes",
            "removetagsfromresource",
            "retrievetapearchive",
            "retrievetaperecoverypoint"
        ],
        "volume": [
            "addtagstoresource",
            "attachvolume",
            "createcachediscsivolume",
            "createsnapshot",
            "createsnapshotfromvolumerecoverypoint",
            "deletesnapshotschedule",
            "deletevolume",
            "describecachediscsivolumes",
            "describesnapshotschedule",
            "describestorediscsivolumes",
            "detachvolume",
            "listtagsforresource",
            "listvolumeinitiators",
            "removetagsfromresource",
            "updatesnapshotschedule"
        ],
        "tapepool": [
            "assigntapepool",
            "bypassgovernanceretention",
            "createtapewithbarcode",
            "createtapes",
            "deletetapepool",
            "listtapepools",
            "updateautomatictapecreationpolicy"
        ],
        "target": [
            "deletechapcredentials",
            "describechapcredentials",
            "updatechapcredentials"
        ],
        "fs-association": [
            "describefilesystemassociations",
            "disassociatefilesystem",
            "updatefilesystemassociation"
        ],
        "device": [
            "updatevtldevicetype"
        ]
    },
    "sumerian": {
        "": [
            "login"
        ],
        "project": [
            "viewrelease"
        ]
    },
    "support": {
        "": [
            "addattachmentstoset",
            "addcommunicationtocase",
            "createcase",
            "describeattachment",
            "describecaseattributes",
            "describecases",
            "describecommunications",
            "describeissuetypes",
            "describeservices",
            "describeseveritylevels",
            "describesupportlevel",
            "describetrustedadvisorcheckrefreshstatuses",
            "describetrustedadvisorcheckresult",
            "describetrustedadvisorchecksummaries",
            "describetrustedadvisorchecks",
            "initiatecallforcase",
            "initiatechatforcase",
            "putcaseattributes",
            "ratecasecommunication",
            "refreshtrustedadvisorcheck",
            "resolvecase",
            "searchforcases"
        ]
    },
    "ssm": {
        "document": [
            "addtagstoresource",
            "createassociation",
            "createassociationbatch",
            "createdocument",
            "deleteassociation",
            "deletedocument",
            "describeassociation",
            "describedocument",
            "describedocumentparameters",
            "describedocumentpermission",
            "getcalendarstate",
            "getdocument",
            "listdocumentmetadatahistory",
            "listdocumentversions",
            "listtagsforresource",
            "modifydocumentpermission",
            "removetagsfromresource",
            "sendcommand",
            "startsession",
            "updateassociation",
            "updateassociationstatus",
            "updatedocument",
            "updatedocumentdefaultversion",
            "updatedocumentmetadata"
        ],
        "maintenancewindow": [
            "addtagstoresource",
            "deletemaintenancewindow",
            "deregistertargetfrommaintenancewindow",
            "deregistertaskfrommaintenancewindow",
            "describemaintenancewindowexecutions",
            "describemaintenancewindowtargets",
            "describemaintenancewindowtasks",
            "getmaintenancewindow",
            "getmaintenancewindowtask",
            "listtagsforresource",
            "registertargetwithmaintenancewindow",
            "registertaskwithmaintenancewindow",
            "removetagsfromresource",
            "updatemaintenancewindow",
            "updatemaintenancewindowtarget",
            "updatemaintenancewindowtask"
        ],
        "managed-instance": [
            "addtagstoresource",
            "createassociation",
            "createassociationbatch",
            "deleteassociation",
            "deregistermanagedinstance",
            "describeassociation",
            "describeeffectiveinstanceassociations",
            "describeinstanceassociationsstatus",
            "listinstanceassociations",
            "listtagsforresource",
            "putcomplianceitems",
            "removetagsfromresource",
            "sendcommand",
            "updateassociation",
            "updateassociationstatus",
            "updateinstanceassociationstatus",
            "updatemanagedinstancerole"
        ],
        "opsmetadata": [
            "addtagstoresource",
            "deleteopsmetadata",
            "getopsmetadata",
            "listtagsforresource",
            "removetagsfromresource",
            "updateopsmetadata"
        ],
        "parameter": [
            "addtagstoresource",
            "deleteparameter",
            "deleteparameters",
            "getparameter",
            "getparameterhistory",
            "getparameters",
            "getparametersbypath",
            "labelparameterversion",
            "listtagsforresource",
            "putparameter",
            "removetagsfromresource"
        ],
        "patchbaseline": [
            "addtagstoresource",
            "deletepatchbaseline",
            "deregisterpatchbaselineforpatchgroup",
            "describeeffectivepatchesforpatchbaseline",
            "getdefaultpatchbaseline",
            "getpatchbaseline",
            "getpatchbaselineforpatchgroup",
            "listtagsforresource",
            "registerdefaultpatchbaseline",
            "registerpatchbaselineforpatchgroup",
            "removetagsfromresource",
            "updatepatchbaseline"
        ],
        "": [
            "cancelcommand",
            "cancelmaintenancewindowexecution",
            "createactivation",
            "createdocument",
            "createmaintenancewindow",
            "createopsitem",
            "createopsmetadata",
            "createpatchbaseline",
            "createresourcedatasync",
            "deleteactivation",
            "deleteinventory",
            "deleteresourcedatasync",
            "describeactivations",
            "describeassociationexecutiontargets",
            "describeassociationexecutions",
            "describeautomationexecutions",
            "describeautomationstepexecutions",
            "describeavailablepatches",
            "describeinstanceinformation",
            "describeinstancepatchstates",
            "describeinstancepatchstatesforpatchgroup",
            "describeinstancepatches",
            "describeinstanceproperties",
            "describeinventorydeletions",
            "describemaintenancewindowexecutiontaskinvocations",
            "describemaintenancewindowexecutiontasks",
            "describemaintenancewindowschedule",
            "describemaintenancewindows",
            "describemaintenancewindowsfortarget",
            "describeopsitems",
            "describeparameters",
            "describepatchbaselines",
            "describepatchgroupstate",
            "describepatchgroups",
            "describepatchproperties",
            "describesessions",
            "getautomationexecution",
            "getcommandinvocation",
            "getconnectionstatus",
            "getdeployablepatchsnapshotforinstance",
            "getinventory",
            "getinventoryschema",
            "getmaintenancewindowexecution",
            "getmaintenancewindowexecutiontask",
            "getmaintenancewindowexecutiontaskinvocation",
            "getmanifest",
            "getopsitem",
            "listassociationversions",
            "listassociations",
            "listcommandinvocations",
            "listcommands",
            "listcomplianceitems",
            "listcompliancesummaries",
            "listdocuments",
            "listinventoryentries",
            "listopsitemevents",
            "listopsmetadata",
            "listresourcecompliancesummaries",
            "listresourcedatasync",
            "putconfigurepackageresult",
            "putinventory",
            "putparameter",
            "sendautomationsignal",
            "sendcommand",
            "startsession",
            "stopautomationexecution",
            "updateinstanceinformation",
            "updateopsitem",
            "updateresourcedatasync"
        ],
        "instance": [
            "createassociation",
            "createassociationbatch",
            "deleteassociation",
            "describeassociation",
            "describeeffectiveinstanceassociations",
            "describeinstanceassociationsstatus",
            "listinstanceassociations",
            "putcomplianceitems",
            "sendcommand",
            "startsession",
            "updateassociation",
            "updateassociationstatus",
            "updateinstanceassociationstatus"
        ],
        "resourcedatasync": [
            "createresourcedatasync",
            "deleteresourcedatasync",
            "getopssummary",
            "updateresourcedatasync"
        ],
        "association": [
            "deleteassociation",
            "describeassociation",
            "startassociationsonce",
            "updateassociation",
            "updateinstanceassociationstatus"
        ],
        "servicesetting": [
            "getservicesetting",
            "resetservicesetting",
            "updateservicesetting"
        ],
        "session": [
            "resumesession",
            "terminatesession"
        ],
        "bucket": [
            "sendcommand"
        ],
        "automation-definition": [
            "startautomationexecution",
            "startchangerequestexecution"
        ],
        "task": [
            "startsession"
        ]
    },
    "ssm-incidents": {
        "response-plan": [
            "startincident"
        ]
    },
    "resource-explorer": {
        "": [
            "listresourcetypes",
            "listresources",
            "listtags"
        ]
    },
    "textract": {
        "": [
            "analyzedocument",
            "detectdocumenttext",
            "getdocumentanalysis",
            "getdocumenttextdetection",
            "startdocumentanalysis",
            "startdocumenttextdetection"
        ]
    },
    "timestream": {
        "": [
            "cancelquery",
            "createdatabase",
            "createtable",
            "describeendpoints",
            "listdatabases",
            "selectvalues",
            "tagresource",
            "untagresource"
        ],
        "database": [
            "createdatabase",
            "deletedatabase",
            "describedatabase",
            "listtables",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatedatabase"
        ],
        "table": [
            "createtable",
            "deletetable",
            "describetable",
            "listmeasures",
            "listtagsforresource",
            "select",
            "tagresource",
            "untagresource",
            "updatetable",
            "writerecords"
        ]
    },
    "tiros": {
        "": [
            "createquery",
            "getqueryanswer",
            "getqueryexplanation"
        ]
    },
    "transcribe": {
        "": [
            "createlanguagemodel",
            "createmedicalvocabulary",
            "createvocabulary",
            "createvocabularyfilter",
            "deletelanguagemodel",
            "deletemedicaltranscriptionjob",
            "deletemedicalvocabulary",
            "deletetranscriptionjob",
            "deletevocabulary",
            "deletevocabularyfilter",
            "describelanguagemodel",
            "getmedicaltranscriptionjob",
            "getmedicalvocabulary",
            "gettranscriptionjob",
            "getvocabulary",
            "getvocabularyfilter",
            "listlanguagemodels",
            "listmedicaltranscriptionjobs",
            "listmedicalvocabularies",
            "listtranscriptionjobs",
            "listvocabularies",
            "listvocabularyfilters",
            "startmedicalstreamtranscription",
            "startmedicalstreamtranscriptionwebsocket",
            "startmedicaltranscriptionjob",
            "startstreamtranscription",
            "startstreamtranscriptionwebsocket",
            "starttranscriptionjob",
            "updatemedicalvocabulary",
            "updatevocabulary",
            "updatevocabularyfilter"
        ]
    },
    "transfer": {
        "": [
            "createserver",
            "createuser",
            "describesecuritypolicy",
            "listsecuritypolicies",
            "listservers",
            "tagresource",
            "untagresource"
        ],
        "server": [
            "createuser",
            "deleteserver",
            "describeserver",
            "listtagsforresource",
            "listusers",
            "startserver",
            "stopserver",
            "tagresource",
            "untagresource",
            "updateserver"
        ],
        "user": [
            "deletesshpublickey",
            "deleteuser",
            "describeuser",
            "importsshpublickey",
            "listtagsforresource",
            "tagresource",
            "testidentityprovider",
            "untagresource",
            "updateuser"
        ]
    },
    "translate": {
        "": [
            "createparalleldata",
            "deleteparalleldata",
            "deleteterminology",
            "describetexttranslationjob",
            "getparalleldata",
            "getterminology",
            "importterminology",
            "listparalleldata",
            "listterminologies",
            "listtexttranslationjobs",
            "starttexttranslationjob",
            "stoptexttranslationjob",
            "translatetext",
            "updateparalleldata"
        ]
    },
    "trustedadvisor": {
        "": [
            "describeaccount",
            "describeaccountaccess",
            "describechecks",
            "describenotificationpreferences",
            "describeorganization",
            "describeorganizationaccounts",
            "describereports",
            "describeservicemetadata",
            "generatereport",
            "listaccountsforparent",
            "listorganizationalunitsforparent",
            "listroots",
            "setaccountaccess",
            "setorganizationaccess",
            "updatenotificationpreferences"
        ],
        "checks": [
            "describecheckitems",
            "describecheckrefreshstatuses",
            "describechecksummaries",
            "excludecheckitems",
            "includecheckitems",
            "refreshcheck"
        ]
    },
    "waf": {
        "bytematchset": [
            "createbytematchset",
            "deletebytematchset",
            "getbytematchset",
            "updatebytematchset"
        ],
        "geomatchset": [
            "creategeomatchset",
            "deletegeomatchset",
            "getgeomatchset",
            "updategeomatchset"
        ],
        "ipset": [
            "createipset",
            "deleteipset",
            "getipset",
            "updateipset"
        ],
        "ratebasedrule": [
            "createratebasedrule",
            "deleteratebasedrule",
            "getratebasedrule",
            "getratebasedrulemanagedkeys",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateratebasedrule"
        ],
        "": [
            "createratebasedrule",
            "createrule",
            "createrulegroup",
            "createwebacl",
            "getchangetoken",
            "getchangetokenstatus",
            "listactivatedrulesinrulegroup",
            "listbytematchsets",
            "listgeomatchsets",
            "listipsets",
            "listloggingconfigurations",
            "listratebasedrules",
            "listregexmatchsets",
            "listregexpatternsets",
            "listrulegroups",
            "listrules",
            "listsizeconstraintsets",
            "listsqlinjectionmatchsets",
            "listsubscribedrulegroups",
            "listwebacls",
            "listxssmatchsets",
            "tagresource",
            "untagresource"
        ],
        "regexmatchset": [
            "createregexmatchset",
            "deleteregexmatchset",
            "getregexmatchset",
            "updateregexmatchset"
        ],
        "regexpatternset": [
            "createregexpatternset",
            "deleteregexpatternset",
            "getregexpatternset",
            "updateregexpatternset"
        ],
        "rule": [
            "createrule",
            "deleterule",
            "getrule",
            "getsampledrequests",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updaterule"
        ],
        "rulegroup": [
            "createrulegroup",
            "deletepermissionpolicy",
            "deleterulegroup",
            "getpermissionpolicy",
            "getrulegroup",
            "listtagsforresource",
            "putpermissionpolicy",
            "tagresource",
            "untagresource",
            "updaterulegroup"
        ],
        "sizeconstraintset": [
            "createsizeconstraintset",
            "deletesizeconstraintset",
            "getsizeconstraintset",
            "updatesizeconstraintset"
        ],
        "sqlinjectionmatchset": [
            "createsqlinjectionmatchset",
            "deletesqlinjectionmatchset",
            "getsqlinjectionmatchset",
            "updatesqlinjectionmatchset"
        ],
        "webacl": [
            "createwebacl",
            "createwebaclmigrationstack",
            "deleteloggingconfiguration",
            "deletewebacl",
            "getloggingconfiguration",
            "getsampledrequests",
            "getwebacl",
            "listtagsforresource",
            "putloggingconfiguration",
            "tagresource",
            "untagresource",
            "updatewebacl"
        ],
        "xssmatchset": [
            "createxssmatchset",
            "deletexssmatchset",
            "getxssmatchset",
            "updatexssmatchset"
        ]
    },
    "waf-regional": {
        "loadbalancer/app/": [
            "associatewebacl",
            "disassociatewebacl",
            "getwebaclforresource"
        ],
        "webacl": [
            "associatewebacl",
            "createwebacl",
            "createwebaclmigrationstack",
            "deleteloggingconfiguration",
            "deletewebacl",
            "getloggingconfiguration",
            "getsampledrequests",
            "getwebacl",
            "listresourcesforwebacl",
            "listtagsforresource",
            "putloggingconfiguration",
            "tagresource",
            "untagresource",
            "updatewebacl"
        ],
        "bytematchset": [
            "createbytematchset",
            "deletebytematchset",
            "getbytematchset",
            "updatebytematchset"
        ],
        "geomatchset": [
            "creategeomatchset",
            "deletegeomatchset",
            "getgeomatchset",
            "updategeomatchset"
        ],
        "ipset": [
            "createipset",
            "deleteipset",
            "getipset",
            "updateipset"
        ],
        "ratebasedrule": [
            "createratebasedrule",
            "deleteratebasedrule",
            "getratebasedrule",
            "getratebasedrulemanagedkeys",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateratebasedrule"
        ],
        "": [
            "createratebasedrule",
            "createrule",
            "createrulegroup",
            "createwebacl",
            "getchangetoken",
            "getchangetokenstatus",
            "listactivatedrulesinrulegroup",
            "listbytematchsets",
            "listgeomatchsets",
            "listipsets",
            "listloggingconfigurations",
            "listratebasedrules",
            "listregexmatchsets",
            "listregexpatternsets",
            "listrulegroups",
            "listrules",
            "listsizeconstraintsets",
            "listsqlinjectionmatchsets",
            "listsubscribedrulegroups",
            "listwebacls",
            "listxssmatchsets",
            "tagresource",
            "untagresource"
        ],
        "regexmatchset": [
            "createregexmatchset",
            "deleteregexmatchset",
            "getregexmatchset",
            "updateregexmatchset"
        ],
        "regexpatternset": [
            "createregexpatternset",
            "deleteregexpatternset",
            "getregexpatternset",
            "updateregexpatternset"
        ],
        "rule": [
            "createrule",
            "deleterule",
            "getrule",
            "getsampledrequests",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updaterule"
        ],
        "rulegroup": [
            "createrulegroup",
            "deletepermissionpolicy",
            "deleterulegroup",
            "getpermissionpolicy",
            "getrulegroup",
            "listtagsforresource",
            "putpermissionpolicy",
            "tagresource",
            "untagresource",
            "updaterulegroup"
        ],
        "sizeconstraintset": [
            "createsizeconstraintset",
            "deletesizeconstraintset",
            "getsizeconstraintset",
            "updatesizeconstraintset"
        ],
        "sqlinjectionmatchset": [
            "createsqlinjectionmatchset",
            "deletesqlinjectionmatchset",
            "getsqlinjectionmatchset",
            "updatesqlinjectionmatchset"
        ],
        "xssmatchset": [
            "createxssmatchset",
            "deletexssmatchset",
            "getxssmatchset",
            "updatexssmatchset"
        ]
    },
    "wafv2": {
        "webacl": [
            "associatewebacl",
            "createwebacl",
            "deletefirewallmanagerrulegroups",
            "deleteloggingconfiguration",
            "deletewebacl",
            "disassociatefirewallmanager",
            "getloggingconfiguration",
            "getratebasedstatementmanagedkeys",
            "getsampledrequests",
            "getwebacl",
            "listresourcesforwebacl",
            "listtagsforresource",
            "putfirewallmanagerrulegroups",
            "putloggingconfiguration",
            "tagresource",
            "untagresource",
            "updatewebacl"
        ],
        "apigateway": [
            "associatewebacl",
            "disassociatewebacl",
            "getwebaclforresource"
        ],
        "appsync": [
            "associatewebacl",
            "disassociatewebacl",
            "getwebaclforresource"
        ],
        "loadbalancer/app/": [
            "associatewebacl",
            "disassociatewebacl",
            "getwebaclforresource"
        ],
        "": [
            "checkcapacity",
            "createipset",
            "createregexpatternset",
            "createrulegroup",
            "createwebacl",
            "describemanagedrulegroup",
            "getipset",
            "getloggingconfiguration",
            "getratebasedstatementmanagedkeys",
            "getregexpatternset",
            "getrulegroup",
            "getwebacl",
            "listavailablemanagedrulegroups",
            "listipsets",
            "listloggingconfigurations",
            "listregexpatternsets",
            "listrulegroups",
            "listtagsforresource",
            "listwebacls",
            "tagresource",
            "untagresource",
            "updateipset",
            "updateregexpatternset",
            "updaterulegroup",
            "updatewebacl"
        ],
        "ipset": [
            "createipset",
            "deleteipset",
            "getipset",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateipset"
        ],
        "regexpatternset": [
            "createregexpatternset",
            "deleteregexpatternset",
            "getregexpatternset",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updateregexpatternset"
        ],
        "rulegroup": [
            "createrulegroup",
            "deletepermissionpolicy",
            "deleterulegroup",
            "getpermissionpolicy",
            "getrulegroup",
            "listtagsforresource",
            "putpermissionpolicy",
            "tagresource",
            "untagresource",
            "updaterulegroup"
        ]
    },
    "wellarchitected": {
        "workload": [
            "associatelenses",
            "createmilestone",
            "createworkloadshare",
            "deleteworkload",
            "deleteworkloadshare",
            "disassociatelenses",
            "getanswer",
            "getlensreview",
            "getlensreviewreport",
            "getmilestone",
            "getworkload",
            "listanswers",
            "listlensreviewimprovements",
            "listlensreviews",
            "listmilestones",
            "listtagsforresource",
            "listworkloadshares",
            "tagresource",
            "untagresource",
            "updateanswer",
            "updatelensreview",
            "updateshareinvitation",
            "updateworkload",
            "updateworkloadshare",
            "upgradelensreview"
        ],
        "": [
            "createworkload",
            "getlensversiondifference",
            "getworkload",
            "listlenses",
            "listnotifications",
            "listshareinvitations",
            "listtagsforresource",
            "listworkloads",
            "tagresource",
            "untagresource"
        ]
    },
    "workdocs": {
        "": [
            "abortdocumentversionupload",
            "activateuser",
            "addresourcepermissions",
            "addusertogroup",
            "checkalias",
            "createcomment",
            "createcustommetadata",
            "createfolder",
            "createinstance",
            "createlabels",
            "createnotificationsubscription",
            "createuser",
            "deactivateuser",
            "deletecomment",
            "deletecustommetadata",
            "deletedocument",
            "deletefolder",
            "deletefoldercontents",
            "deleteinstance",
            "deletelabels",
            "deletenotificationsubscription",
            "deleteuser",
            "deregisterdirectory",
            "describeactivities",
            "describeavailabledirectories",
            "describecomments",
            "describedocumentversions",
            "describefoldercontents",
            "describegroups",
            "describeinstances",
            "describenotificationsubscriptions",
            "describeresourcepermissions",
            "describerootfolders",
            "describeusers",
            "downloaddocumentversion",
            "getcurrentuser",
            "getdocument",
            "getdocumentpath",
            "getdocumentversion",
            "getfolder",
            "getfolderpath",
            "getresources",
            "initiatedocumentversionupload",
            "registerdirectory",
            "removeallresourcepermissions",
            "removeresourcepermission",
            "updatedocument",
            "updatedocumentversion",
            "updatefolder",
            "updateinstancealias",
            "updateuser"
        ]
    },
    "worklink": {
        "fleet": [
            "associatedomain",
            "associatewebsiteauthorizationprovider",
            "associatewebsitecertificateauthority",
            "deletefleet",
            "describeauditstreamconfiguration",
            "describecompanynetworkconfiguration",
            "describedevice",
            "describedevicepolicyconfiguration",
            "describedomain",
            "describefleetmetadata",
            "describeidentityproviderconfiguration",
            "describewebsitecertificateauthority",
            "disassociatedomain",
            "disassociatewebsiteauthorizationprovider",
            "disassociatewebsitecertificateauthority",
            "listdevices",
            "listdomains",
            "listtagsforresource",
            "listwebsiteauthorizationproviders",
            "listwebsitecertificateauthorities",
            "restoredomainaccess",
            "revokedomainaccess",
            "searchentity",
            "signoutuser",
            "tagresource",
            "untagresource",
            "updateauditstreamconfiguration",
            "updatecompanynetworkconfiguration",
            "updatedevicepolicyconfiguration",
            "updatedomainmetadata",
            "updatefleetmetadata",
            "updateidentityproviderconfiguration"
        ],
        "": [
            "createfleet",
            "deletefleet",
            "describefleetmetadata",
            "listfleets",
            "tagresource",
            "untagresource"
        ]
    },
    "workmail": {
        "organization": [
            "addmemberstogroup",
            "associatedelegatetoresource",
            "associatemembertogroup",
            "cancelmailboxexportjob",
            "createalias",
            "creategroup",
            "createinboundmailflowrule",
            "createmaildomain",
            "createmailuser",
            "createoutboundmailflowrule",
            "createresource",
            "createsmtpgateway",
            "createuser",
            "deleteaccesscontrolrule",
            "deletealias",
            "deletegroup",
            "deleteinboundmailflowrule",
            "deletemaildomain",
            "deletemailboxpermissions",
            "deletemobiledevice",
            "deleteorganization",
            "deleteoutboundmailflowrule",
            "deleteresource",
            "deleteretentionpolicy",
            "deletesmtpgateway",
            "deleteuser",
            "deregisterfromworkmail",
            "describegroup",
            "describeinboundmailflowrule",
            "describemaildomains",
            "describemailgroups",
            "describemailusers",
            "describemailboxexportjob",
            "describeorganization",
            "describeoutboundmailflowrule",
            "describeresource",
            "describesmtpgateway",
            "describeuser",
            "disablemailgroups",
            "disablemailusers",
            "disassociatedelegatefromresource",
            "disassociatememberfromgroup",
            "enablemaildomain",
            "enablemailgroups",
            "enablemailusers",
            "getaccesscontroleffect",
            "getdefaultretentionpolicy",
            "getjournalingrules",
            "getmaildomaindetails",
            "getmailgroupdetails",
            "getmailuserdetails",
            "getmailboxdetails",
            "getmobiledevicedetails",
            "getmobiledevicesforuser",
            "getmobilepolicydetails",
            "listaccesscontrolrules",
            "listaliases",
            "listgroupmembers",
            "listgroups",
            "listinboundmailflowrules",
            "listmailboxexportjobs",
            "listmailboxpermissions",
            "listmembersinmailgroup",
            "listoutboundmailflowrules",
            "listresourcedelegates",
            "listresources",
            "listsmtpgateways",
            "listtagsforresource",
            "listusers",
            "putaccesscontrolrule",
            "putmailboxpermissions",
            "putretentionpolicy",
            "registertoworkmail",
            "removemembersfromgroup",
            "resetpassword",
            "resetuserpassword",
            "searchmembers",
            "setadmin",
            "setdefaultmaildomain",
            "setjournalingrules",
            "setmailgroupdetails",
            "setmailuserdetails",
            "setmobilepolicydetails",
            "startmailboxexportjob",
            "tagresource",
            "testinboundmailflowrules",
            "testoutboundmailflowrules",
            "untagresource",
            "updateinboundmailflowrule",
            "updatemailboxquota",
            "updateoutboundmailflowrule",
            "updateprimaryemailaddress",
            "updateresource",
            "updatesmtpgateway",
            "wipemobiledevice"
        ],
        "": [
            "createorganization",
            "describedirectories",
            "describekmskeys",
            "describeorganizations",
            "listorganizations"
        ]
    },
    "workmailmessageflow": {
        "RawMessage": [
            "getrawmessagecontent"
        ]
    },
    "workspaces": {
        "": [
            "associateipgroups",
            "createipgroup",
            "createtags",
            "deletetags",
            "deleteworkspaceimage",
            "describeaccount",
            "describeaccountmodifications",
            "describetags",
            "describeworkspacedirectories",
            "describeworkspaceimages",
            "describeworkspaces",
            "describeworkspacesconnectionstatus",
            "disassociateipgroups",
            "importworkspaceimage",
            "listavailablemanagementcidrranges",
            "modifyaccount"
        ],
        "workspaceipgroup": [
            "authorizeiprules",
            "deleteipgroup",
            "describeipgroups",
            "revokeiprules",
            "updaterulesofipgroup"
        ],
        "directoryid": [
            "createworkspaces",
            "describeclientproperties",
            "modifyclientproperties"
        ],
        "workspacebundle": [
            "createworkspaces",
            "describeworkspacebundles"
        ],
        "workspaceid": [
            "modifyworkspaceproperties",
            "modifyworkspacestate",
            "rebootworkspaces",
            "rebuildworkspaces",
            "startworkspaces",
            "stopworkspaces",
            "terminateworkspaces"
        ]
    },
    "wam": {
        "": [
            "authenticatepackager"
        ]
    },
    "xray": {
        "": [
            "batchgettraces",
            "creategroup",
            "createsamplingrule",
            "deletegroup",
            "deletesamplingrule",
            "getencryptionconfig",
            "getgroup",
            "getgroups",
            "getinsight",
            "getinsightevents",
            "getinsightimpactgraph",
            "getinsightsummaries",
            "getsamplingrules",
            "getsamplingstatisticsummaries",
            "getsamplingtargets",
            "getservicegraph",
            "gettimeseriesservicestatistics",
            "gettracegraph",
            "gettracesummaries",
            "putencryptionconfig",
            "puttelemetryrecords",
            "puttracesegments",
            "tagresource",
            "untagresource",
            "updategroup",
            "updatesamplingrule"
        ],
        "group": [
            "creategroup",
            "deletegroup",
            "getgroup",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updategroup"
        ],
        "sampling-rule": [
            "createsamplingrule",
            "deletesamplingrule",
            "listtagsforresource",
            "tagresource",
            "untagresource",
            "updatesamplingrule"
        ]
    }
}